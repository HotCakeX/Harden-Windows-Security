//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.2.250604.1+b02a3ee244
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile ChocolateBar.json
//       
//       Input file:
//           ChocolateBar.json (272339 bytes created 13:57+03:00 Aug 22 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   128 |
// |--------------------------+-------|
// | Expression animators     |     1 |
// | KeyFrame animators       |    19 |
// | Reference parameters     |     1 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     5 |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |    14 |
// | CompositionSpriteShapes  |    16 |
// |--------------------------+-------|
// | Brushes                  |     6 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
	// Name:        chocolate-bar
	// Frame rate:  24 fps
	// Frame count: 28
	// Duration:    1166.7 mS
	// _____________________________________________________________________________________________
	// |           Marker           |           Constant           | Frame |   mS   |   Progress   |
	// |____________________________|______________________________|_______|________|______________|
	// | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
	// | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
	// | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
	// | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
	// | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
	// | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
	// | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
	// | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
	// ---------------------------------------------------------------------------------------------
	sealed partial class ChocolateBar
		: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
		, Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		// Animation duration: 1.167 seconds.
		internal const long c_durationTicks = 11666666;

		// Marker: NormalToPressed_Start.
		internal const float M_NormalToPressed_Start = 0F;

		// Marker: NormalToPressed_End.
		internal const float M_NormalToPressed_End = 0.323214293F;

		// Marker: PointerOverToPressed_Start.
		internal const float M_PointerOverToPressed_Start = 0.323214293F;

		// Marker: PointerOverToPressed_End.
		internal const float M_PointerOverToPressed_End = 0.680357158F;

		// Marker: PressedToNormal_Start.
		internal const float M_PressedToNormal_Start = 0.716071427F;

		// Marker: PressedToNormal_End.
		internal const float M_PressedToNormal_End = 1F;

		// Marker: PressedToPointerOver_Start.
		internal const float M_PressedToPointerOver_Start = 1F;

		// Marker: PressedToPointerOver_End.
		internal const float M_PressedToPointerOver_End = 1F;

		public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
		{
			object ignored = null;
			return TryCreateAnimatedVisual(compositor, out ignored);
		}

		public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
		{
			diagnostics = null;

			var res =
				new ChocolateBar_AnimatedVisual(
					compositor
					);
			res.CreateAnimations();
			return res;
		}

		/// <summary>
		/// Gets the number of frames in the animation.
		/// </summary>
		public double FrameCount => 28d;

		/// <summary>
		/// Gets the frame rate of the animation.
		/// </summary>
		public double Framerate => 24d;

		/// <summary>
		/// Gets the duration of the animation.
		/// </summary>
		public TimeSpan Duration => TimeSpan.FromTicks(11666666);

		/// <summary>
		/// Converts a zero-based frame number to the corresponding progress value denoting the
		/// start of the frame.
		/// </summary>
		public double FrameToProgress(double frameNumber)
		{
			return frameNumber / 28d;
		}

		/// <summary>
		/// Returns a map from marker names to corresponding progress values.
		/// </summary>
		public IReadOnlyDictionary<string, double> Markers =>
			new Dictionary<string, double>
			{
				{ "NormalToPressed_Start", 0d },
				{ "NormalToPressed_End", 0.323214285714286 },
				{ "PointerOverToPressed_Start", 0.323214285714286 },
				{ "PointerOverToPressed_End", 0.680357142857143 },
				{ "PressedToNormal_Start", 0.716071428571429 },
				{ "PressedToNormal_End", 1d },
				{ "PressedToPointerOver_Start", 1d },
				{ "PressedToPointerOver_End", 1d },
			};

		/// <summary>
		/// Sets the color property with the given name, or does nothing if no such property
		/// exists.
		/// </summary>
		public void SetColorProperty(string propertyName, Color value)
		{
		}

		/// <summary>
		/// Sets the scalar property with the given name, or does nothing if no such property
		/// exists.
		/// </summary>
		public void SetScalarProperty(string propertyName, double value)
		{
		}

		sealed partial class ChocolateBar_AnimatedVisual
			: Microsoft.UI.Xaml.Controls.IAnimatedVisual
			, Microsoft.UI.Xaml.Controls.IAnimatedVisual2
		{
			const long c_durationTicks = 11666666;
			readonly Compositor _c;
			readonly ExpressionAnimation _reusableExpressionAnimation;
			AnimationController _animationController_0;
			CompositionColorBrush _colorBrush_AlmostLightSlateGray_FF8D6C9F;
			CompositionColorBrush _colorBrush_AlmostRosyBrown_FFC4929C;
			CompositionColorBrush _colorBrush_AlmostSilver_FFD2A9AF;
			CompositionContainerShape _containerShape_00;
			CompositionContainerShape _containerShape_01;
			CompositionContainerShape _containerShape_02;
			CompositionContainerShape _containerShape_03;
			CompositionContainerShape _containerShape_04;
			CompositionContainerShape _containerShape_05;
			CompositionContainerShape _containerShape_06;
			CompositionContainerShape _containerShape_07;
			CompositionContainerShape _containerShape_08;
			CompositionContainerShape _containerShape_09;
			CompositionContainerShape _containerShape_10;
			CompositionContainerShape _containerShape_11;
			CompositionContainerShape _containerShape_12;
			CompositionContainerShape _containerShape_13;
			CompositionPath _path_00;
			CompositionPath _path_01;
			CompositionPath _path_02;
			CompositionPath _path_03;
			CompositionPath _path_04;
			CompositionPath _path_05;
			CompositionPath _path_06;
			CompositionPath _path_07;
			CompositionPath _path_08;
			CompositionPath _path_09;
			CompositionPath _path_10;
			CompositionPath _path_11;
			CompositionPath _path_12;
			CompositionPathGeometry _pathGeometry_04;
			CompositionPathGeometry _pathGeometry_06;
			CompositionPathGeometry _pathGeometry_07;
			CompositionPathGeometry _pathGeometry_08;
			CompositionPathGeometry _pathGeometry_09;
			CompositionPathGeometry _pathGeometry_10;
			ContainerVisual _root;
			CubicBezierEasingFunction _cubicBezierEasingFunction_0;
			CubicBezierEasingFunction _cubicBezierEasingFunction_1;
			StepEasingFunction _holdThenStepEasingFunction;
			StepEasingFunction _stepThenHoldEasingFunction;
			Vector2KeyFrameAnimation _scaleVector2Animation;
			Vector2KeyFrameAnimation _shapeVisibilityAnimation_0;
			Vector2KeyFrameAnimation _shapeVisibilityAnimation_1;
			Vector2KeyFrameAnimation _shapeVisibilityAnimation_2;

			void BindProperty(
				CompositionObject target,
				string animatedPropertyName,
				string expression,
				string referenceParameterName,
				CompositionObject referencedObject)
			{
				_reusableExpressionAnimation.ClearAllParameters();
				_reusableExpressionAnimation.Expression = expression;
				_reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
				target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
			}

			PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreatePathKeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreateVector2KeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
			{
				var result = _c.CreateSpriteShape(geometry);
				result.TransformMatrix = transformMatrix;
				return result;
			}

			CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
			{
				var result = _c.CreateSpriteShape(geometry);
				result.TransformMatrix = transformMatrix;
				result.FillBrush = fillBrush;
				return result;
			}

			AnimationController AnimationController_0()
			{
				if (_animationController_0 != null) { return _animationController_0; }
				var result = _animationController_0 = _c.CreateAnimationController();
				result.Pause();
				BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
				return result;
			}

			// - - - - - Layer aggregator
			// - - - - Layer: bar Outlines 2
			// - - Transforms: bar Outlines 2 Offset:<-21, -32>
			CanvasGeometry Geometry_00()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-5.96899986F, -10.5F));
					builder.AddCubicBezier(new Vector2(-4.96899986F, -11.1560001F), new Vector2(-3.93799996F, -12.4060001F), new Vector2(-3.79399991F, -15.5F));
					builder.AddCubicBezier(new Vector2(-2.68799996F, -15.4689999F), new Vector2(14F, -15.5F), new Vector2(14F, -15.5F));
					builder.AddCubicBezier(new Vector2(15.1040001F, -15.5F), new Vector2(16F, -14.6040001F), new Vector2(16F, -13.5F));
					builder.AddLine(new Vector2(16F, 15.5F));
					builder.AddLine(new Vector2(-16F, 15.5F));
					builder.AddLine(new Vector2(-16F, -4.54400015F));
					builder.AddCubicBezier(new Vector2(-16F, -4.54400015F), new Vector2(-11.8129997F, -4.46899986F), new Vector2(-10.4689999F, -6.15600014F));
					builder.AddCubicBezier(new Vector2(-8.09399986F, -6.375F), new Vector2(-6.15700006F, -8.40600014F), new Vector2(-5.96899986F, -10.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - - Layer: bar Outlines
			// - - Transforms: bar Outlines Offset:<-21, -32>
			CanvasGeometry Geometry_01()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-14F, -15.5F));
					builder.AddLine(new Vector2(-2.66899991F, -15.5F));
					builder.AddLine(new Vector2(14F, -15.5F));
					builder.AddCubicBezier(new Vector2(15.1040001F, -15.5F), new Vector2(16F, -14.6040001F), new Vector2(16F, -13.5F));
					builder.AddLine(new Vector2(16F, 15.5F));
					builder.AddLine(new Vector2(-16F, 15.5F));
					builder.AddLine(new Vector2(-16F, -2.41899991F));
					builder.AddLine(new Vector2(-16F, -13.5F));
					builder.AddCubicBezier(new Vector2(-16F, -14.6040001F), new Vector2(-15.1040001F, -15.5F), new Vector2(-14F, -15.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - - Layer: tile Outlines 2
			// - - Transforms: tile Outlines 2 Offset:<-16, -27>
			CanvasGeometry Geometry_02()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-4F, -2.5F));
					builder.AddLine(new Vector2(-10F, -2.5F));
					builder.AddCubicBezier(new Vector2(-10.552F, -2.5F), new Vector2(-11F, -2.94799995F), new Vector2(-11F, -3.5F));
					builder.AddCubicBezier(new Vector2(-11F, -3.5F), new Vector2(-11.0310001F, -4.64099979F), new Vector2(-11F, -5.46099997F));
					builder.AddCubicBezier(new Vector2(-10.4060001F, -5.5630002F), new Vector2(-9.375F, -6.09399986F), new Vector2(-9.375F, -6.09399986F));
					builder.AddCubicBezier(new Vector2(-7.65600014F, -6.53200006F), new Vector2(-6.37599993F, -8.15600014F), new Vector2(-6.0630002F, -9.65600014F));
					builder.AddCubicBezier(new Vector2(-6.0630002F, -9.65600014F), new Vector2(-5.59299994F, -9.96800041F), new Vector2(-5.34399986F, -10.4980001F));
					builder.AddCubicBezier(new Vector2(-4.75F, -10.4980001F), new Vector2(-4F, -10.5F), new Vector2(-4F, -10.5F));
					builder.AddCubicBezier(new Vector2(-3.44799995F, -10.5F), new Vector2(-3F, -10.052F), new Vector2(-3F, -9.5F));
					builder.AddLine(new Vector2(-3F, -3.5F));
					builder.AddCubicBezier(new Vector2(-3F, -2.94799995F), new Vector2(-3.44799995F, -2.5F), new Vector2(-4F, -2.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					builder.BeginFigure(new Vector2(10F, -2.5F));
					builder.AddLine(new Vector2(4F, -2.5F));
					builder.AddCubicBezier(new Vector2(3.44799995F, -2.5F), new Vector2(3F, -2.94799995F), new Vector2(3F, -3.5F));
					builder.AddLine(new Vector2(3F, -9.5F));
					builder.AddCubicBezier(new Vector2(3F, -10.052F), new Vector2(3.44799995F, -10.5F), new Vector2(4F, -10.5F));
					builder.AddLine(new Vector2(10F, -10.5F));
					builder.AddCubicBezier(new Vector2(10.552F, -10.5F), new Vector2(11F, -10.052F), new Vector2(11F, -9.5F));
					builder.AddLine(new Vector2(11F, -3.5F));
					builder.AddCubicBezier(new Vector2(11F, -2.94799995F), new Vector2(10.552F, -2.5F), new Vector2(10F, -2.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					builder.BeginFigure(new Vector2(-4F, 10.5F));
					builder.AddLine(new Vector2(-10F, 10.5F));
					builder.AddCubicBezier(new Vector2(-10.552F, 10.5F), new Vector2(-11F, 10.052F), new Vector2(-11F, 9.5F));
					builder.AddLine(new Vector2(-11F, 3.5F));
					builder.AddCubicBezier(new Vector2(-11F, 2.94799995F), new Vector2(-10.552F, 2.5F), new Vector2(-10F, 2.5F));
					builder.AddLine(new Vector2(-4F, 2.5F));
					builder.AddCubicBezier(new Vector2(-3.44799995F, 2.5F), new Vector2(-3F, 2.94799995F), new Vector2(-3F, 3.5F));
					builder.AddLine(new Vector2(-3F, 9.5F));
					builder.AddCubicBezier(new Vector2(-3F, 10.052F), new Vector2(-3.44799995F, 10.5F), new Vector2(-4F, 10.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					builder.BeginFigure(new Vector2(10F, 10.5F));
					builder.AddLine(new Vector2(4F, 10.5F));
					builder.AddCubicBezier(new Vector2(3.44799995F, 10.5F), new Vector2(3F, 10.052F), new Vector2(3F, 9.5F));
					builder.AddLine(new Vector2(3F, 3.5F));
					builder.AddCubicBezier(new Vector2(3F, 2.94799995F), new Vector2(3.44799995F, 2.5F), new Vector2(4F, 2.5F));
					builder.AddLine(new Vector2(10F, 2.5F));
					builder.AddCubicBezier(new Vector2(10.552F, 2.5F), new Vector2(11F, 2.94799995F), new Vector2(11F, 3.5F));
					builder.AddLine(new Vector2(11F, 9.5F));
					builder.AddCubicBezier(new Vector2(11F, 10.052F), new Vector2(10.552F, 10.5F), new Vector2(10F, 10.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - - Layer: tile Outlines
			// - - Transforms: tile Outlines Offset:<-16, -27>
			CanvasGeometry Geometry_03()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-4F, -2.5F));
					builder.AddLine(new Vector2(-10F, -2.5F));
					builder.AddCubicBezier(new Vector2(-10.552F, -2.5F), new Vector2(-11F, -2.94799995F), new Vector2(-11F, -3.5F));
					builder.AddLine(new Vector2(-11F, -6.46099997F));
					builder.AddLine(new Vector2(-11F, -9.5F));
					builder.AddCubicBezier(new Vector2(-11F, -10.052F), new Vector2(-10.552F, -10.5F), new Vector2(-10F, -10.5F));
					builder.AddLine(new Vector2(-7.03200006F, -10.5F));
					builder.AddLine(new Vector2(-4F, -10.5F));
					builder.AddCubicBezier(new Vector2(-3.44799995F, -10.5F), new Vector2(-3F, -10.052F), new Vector2(-3F, -9.5F));
					builder.AddLine(new Vector2(-3F, -3.5F));
					builder.AddCubicBezier(new Vector2(-3F, -2.94799995F), new Vector2(-3.44799995F, -2.5F), new Vector2(-4F, -2.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					builder.BeginFigure(new Vector2(10F, -2.5F));
					builder.AddLine(new Vector2(4F, -2.5F));
					builder.AddCubicBezier(new Vector2(3.44799995F, -2.5F), new Vector2(3F, -2.94799995F), new Vector2(3F, -3.5F));
					builder.AddLine(new Vector2(3F, -9.5F));
					builder.AddCubicBezier(new Vector2(3F, -10.052F), new Vector2(3.44799995F, -10.5F), new Vector2(4F, -10.5F));
					builder.AddLine(new Vector2(10F, -10.5F));
					builder.AddCubicBezier(new Vector2(10.552F, -10.5F), new Vector2(11F, -10.052F), new Vector2(11F, -9.5F));
					builder.AddLine(new Vector2(11F, -3.5F));
					builder.AddCubicBezier(new Vector2(11F, -2.94799995F), new Vector2(10.552F, -2.5F), new Vector2(10F, -2.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					builder.BeginFigure(new Vector2(-4F, 10.5F));
					builder.AddLine(new Vector2(-10F, 10.5F));
					builder.AddCubicBezier(new Vector2(-10.552F, 10.5F), new Vector2(-11F, 10.052F), new Vector2(-11F, 9.5F));
					builder.AddLine(new Vector2(-11F, 3.5F));
					builder.AddCubicBezier(new Vector2(-11F, 2.94799995F), new Vector2(-10.552F, 2.5F), new Vector2(-10F, 2.5F));
					builder.AddLine(new Vector2(-4F, 2.5F));
					builder.AddCubicBezier(new Vector2(-3.44799995F, 2.5F), new Vector2(-3F, 2.94799995F), new Vector2(-3F, 3.5F));
					builder.AddLine(new Vector2(-3F, 9.5F));
					builder.AddCubicBezier(new Vector2(-3F, 10.052F), new Vector2(-3.44799995F, 10.5F), new Vector2(-4F, 10.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					builder.BeginFigure(new Vector2(10F, 10.5F));
					builder.AddLine(new Vector2(4F, 10.5F));
					builder.AddCubicBezier(new Vector2(3.44799995F, 10.5F), new Vector2(3F, 10.052F), new Vector2(3F, 9.5F));
					builder.AddLine(new Vector2(3F, 3.5F));
					builder.AddCubicBezier(new Vector2(3F, 2.94799995F), new Vector2(3.44799995F, 2.5F), new Vector2(4F, 2.5F));
					builder.AddLine(new Vector2(10F, 2.5F));
					builder.AddCubicBezier(new Vector2(10.552F, 2.5F), new Vector2(11F, 2.94799995F), new Vector2(11F, 3.5F));
					builder.AddLine(new Vector2(11F, 9.5F));
					builder.AddCubicBezier(new Vector2(11F, 10.052F), new Vector2(10.552F, 10.5F), new Vector2(10F, 10.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_04()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-18F, -43.625F));
					builder.AddCubicBezier(new Vector2(-18F, -43.625F), new Vector2(18F, -43.625F), new Vector2(18F, -43.625F));
					builder.AddCubicBezier(new Vector2(18F, -43.625F), new Vector2(18F, 11F), new Vector2(18F, 11F));
					builder.AddCubicBezier(new Vector2(18F, 11F), new Vector2(-18F, 11F), new Vector2(-18F, 11F));
					builder.AddCubicBezier(new Vector2(-18F, 11F), new Vector2(-18F, -43.625F), new Vector2(-18F, -43.625F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_05()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-18F, -11F));
					builder.AddCubicBezier(new Vector2(-18F, -11F), new Vector2(18F, -11F), new Vector2(18F, -11F));
					builder.AddCubicBezier(new Vector2(18F, -11F), new Vector2(18F, 11F), new Vector2(18F, 11F));
					builder.AddCubicBezier(new Vector2(18F, 11F), new Vector2(-18F, 11F), new Vector2(-18F, 11F));
					builder.AddCubicBezier(new Vector2(-18F, 11F), new Vector2(-18F, -11F), new Vector2(-18F, -11F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - Layer aggregator
			// - - Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
			CanvasGeometry Geometry_06()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-18F, -2F));
					builder.AddLine(new Vector2(18F, -2F));
					builder.AddLine(new Vector2(18F, 2F));
					builder.AddLine(new Vector2(-18F, 2F));
					builder.AddLine(new Vector2(-18F, -2F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_07()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(0F, -2F));
					builder.AddCubicBezier(new Vector2(-0.551999986F, -2F), new Vector2(-1F, -1.55200005F), new Vector2(-1F, -1F));
					builder.AddLine(new Vector2(-1F, 1F));
					builder.AddCubicBezier(new Vector2(-1F, 1.55200005F), new Vector2(-0.551999986F, 2F), new Vector2(0F, 2F));
					builder.AddCubicBezier(new Vector2(0.551999986F, 2F), new Vector2(1F, 1.55200005F), new Vector2(1F, 1F));
					builder.AddLine(new Vector2(1F, -1F));
					builder.AddCubicBezier(new Vector2(1F, -1.55200005F), new Vector2(0.551999986F, -2F), new Vector2(0F, -2F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_08()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(12F, -15.5629997F));
					builder.AddCubicBezier(new Vector2(12F, -15.5629997F), new Vector2(-18F, -15.6000004F), new Vector2(-18F, -15.6000004F));
					builder.AddCubicBezier(new Vector2(-18F, -15.6000004F), new Vector2(-18F, -15.625F), new Vector2(-18F, -15.625F));
					builder.AddCubicBezier(new Vector2(-18F, -15.625F), new Vector2(18F, -15.625F), new Vector2(18F, -15.625F));
					builder.AddCubicBezier(new Vector2(18F, -15.625F), new Vector2(18F, -15.6059999F), new Vector2(18F, -15.6059999F));
					builder.AddCubicBezier(new Vector2(18F, -15.6059999F), new Vector2(12F, -15.5629997F), new Vector2(12F, -15.5629997F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_09()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(12F, -3.5F));
					builder.AddCubicBezier(new Vector2(12F, -3.5F), new Vector2(-18F, -6.5250001F), new Vector2(-18F, -6.5250001F));
					builder.AddCubicBezier(new Vector2(-18F, -6.5250001F), new Vector2(-18F, -10.3129997F), new Vector2(-18F, -10.3129997F));
					builder.AddCubicBezier(new Vector2(-18F, -10.3129997F), new Vector2(18F, -10.3129997F), new Vector2(18F, -10.3129997F));
					builder.AddCubicBezier(new Vector2(18F, -10.3129997F), new Vector2(18F, -6.89400005F), new Vector2(18F, -6.89400005F));
					builder.AddCubicBezier(new Vector2(18F, -6.89400005F), new Vector2(12F, -3.5F), new Vector2(12F, -3.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_10()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(12F, 5F));
					builder.AddCubicBezier(new Vector2(12F, 5F), new Vector2(-18F, -1F), new Vector2(-18F, -1F));
					builder.AddCubicBezier(new Vector2(-18F, -1F), new Vector2(-18F, -5F), new Vector2(-18F, -5F));
					builder.AddCubicBezier(new Vector2(-18F, -5F), new Vector2(18F, -5F), new Vector2(18F, -5F));
					builder.AddCubicBezier(new Vector2(18F, -5F), new Vector2(18F, -2F), new Vector2(18F, -2F));
					builder.AddCubicBezier(new Vector2(18F, -2F), new Vector2(12F, 5F), new Vector2(12F, 5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_11()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.BeginFigure(new Vector2(16F, 11.5F));
					builder.AddCubicBezier(new Vector2(16F, 11.5F), new Vector2(-16F, 11.5F), new Vector2(-16F, 11.5F));
					builder.AddCubicBezier(new Vector2(-17.1040001F, 11.5F), new Vector2(-18F, 10.6040001F), new Vector2(-18F, 9.5F));
					builder.AddCubicBezier(new Vector2(-18F, 9.5F), new Vector2(-17.9689999F, -41.0320015F), new Vector2(-18F, -42.0629997F));
					builder.AddCubicBezier(new Vector2(-18.0310001F, -43.0940018F), new Vector2(-17.2189999F, -44.2820015F), new Vector2(-16.1560001F, -44.3129997F));
					builder.AddCubicBezier(new Vector2(-15.0930004F, -44.3440018F), new Vector2(15.6560001F, -44.3120003F), new Vector2(16.375F, -44.3120003F));
					builder.AddCubicBezier(new Vector2(17.0939999F, -44.3120003F), new Vector2(18F, -43.3440018F), new Vector2(18F, -42.125F));
					builder.AddCubicBezier(new Vector2(18F, -40.9059982F), new Vector2(18F, 9.5F), new Vector2(18F, 9.5F));
					builder.AddCubicBezier(new Vector2(18F, 10.6040001F), new Vector2(17.1040001F, 11.5F), new Vector2(16F, 11.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_12()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.BeginFigure(new Vector2(16F, 11.5F));
					builder.AddCubicBezier(new Vector2(16F, 11.5F), new Vector2(-16F, 11.5F), new Vector2(-16F, 11.5F));
					builder.AddCubicBezier(new Vector2(-17.1040001F, 11.5F), new Vector2(-18F, 10.6040001F), new Vector2(-18F, 9.5F));
					builder.AddCubicBezier(new Vector2(-18F, 9.5F), new Vector2(-18F, -11.5F), new Vector2(-18F, -11.5F));
					builder.AddCubicBezier(new Vector2(-18F, -11.5F), new Vector2(-17.7259998F, -11.5F), new Vector2(-17.7259998F, -11.5F));
					builder.AddCubicBezier(new Vector2(-17.7259998F, -11.5F), new Vector2(17.823F, -11.5F), new Vector2(17.823F, -11.5F));
					builder.AddCubicBezier(new Vector2(17.823F, -11.5F), new Vector2(18F, -11.5F), new Vector2(18F, -11.5F));
					builder.AddCubicBezier(new Vector2(18F, -11.5F), new Vector2(18F, 9.5F), new Vector2(18F, 9.5F));
					builder.AddCubicBezier(new Vector2(18F, 10.6040001F), new Vector2(17.1040001F, 11.5F), new Vector2(16F, 11.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_13()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.BeginFigure(new Vector2(-1.45700002F, -16.1830006F));
					builder.AddCubicBezier(new Vector2(-1.45700002F, -16.1830006F), new Vector2(1.47899997F, -16.184F), new Vector2(1.47899997F, -16.184F));
					builder.EndFigure(CanvasFigureLoop.Open);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_14()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.BeginFigure(new Vector2(-1.49199998F, -6.67299986F));
					builder.AddCubicBezier(new Vector2(-1.49199998F, -6.67299986F), new Vector2(1.44400001F, -6.38600016F), new Vector2(1.44400001F, -6.38600016F));
					builder.EndFigure(CanvasFigureLoop.Open);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_15()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.BeginFigure(new Vector2(-1.46800005F, -0.287999988F));
					builder.AddCubicBezier(new Vector2(-1.46800005F, -0.287999988F), new Vector2(1.46800005F, 0.287999988F), new Vector2(1.46800005F, 0.287999988F));
					builder.EndFigure(CanvasFigureLoop.Open);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_16()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.BeginFigure(new Vector2(-12.4259996F, -18.2689991F));
					builder.AddCubicBezier(new Vector2(-12.4259996F, -18.2689991F), new Vector2(4.93300009F, -18.2789993F), new Vector2(4.93300009F, -18.2789993F));
					builder.AddCubicBezier(new Vector2(5.61000013F, -18.2789993F), new Vector2(6.31799984F, -18.2789993F), new Vector2(6.8039999F, -18.2779999F));
					builder.AddCubicBezier(new Vector2(6.8039999F, -18.2779999F), new Vector2(12.4469995F, -18.2630005F), new Vector2(12.4469995F, -18.2630005F));
					builder.EndFigure(CanvasFigureLoop.Open);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_17()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.BeginFigure(new Vector2(-12.4610004F, -8.02299976F));
					builder.AddCubicBezier(new Vector2(-12.4610004F, -8.02299976F), new Vector2(4.89799976F, -6.046F), new Vector2(4.89799976F, -6.046F));
					builder.AddCubicBezier(new Vector2(5.57499981F, -5.96899986F), new Vector2(6.28299999F, -6.07299995F), new Vector2(6.76900005F, -6.31899977F));
					builder.AddCubicBezier(new Vector2(6.76900005F, -6.31899977F), new Vector2(12.4119997F, -9.17700005F), new Vector2(12.4119997F, -9.17700005F));
					builder.EndFigure(CanvasFigureLoop.Open);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_18()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.BeginFigure(new Vector2(-12.4359999F, -0.90200001F));
					builder.AddCubicBezier(new Vector2(-12.4359999F, -0.90200001F), new Vector2(4.92299986F, 3.06299996F), new Vector2(4.92299986F, 3.06299996F));
					builder.AddCubicBezier(new Vector2(5.5999999F, 3.21700001F), new Vector2(6.30800009F, 3.00999999F), new Vector2(6.79400015F, 2.51600003F));
					builder.AddCubicBezier(new Vector2(6.79400015F, 2.51600003F), new Vector2(12.4359999F, -3.21700001F), new Vector2(12.4359999F, -3.21700001F));
					builder.EndFigure(CanvasFigureLoop.Open);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - Layer aggregator
			// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
			CompositionColorBrush ColorBrush_AlmostHotPink_FFF183A4()
			{
				return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF1, 0x83, 0xA4));
			}

			// - - - Layer aggregator
			// - - Layer: cover2-fill Outlines
			// Transforms: cover2-fill Outlines Offset:<-18.25, 3.75>
			CompositionColorBrush ColorBrush_AlmostLavender_FFE2F1FF()
			{
				return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xE2, 0xF1, 0xFF));
			}

			// - - Layer aggregator
			// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
			CompositionColorBrush ColorBrush_AlmostLightPink_FFF7A0C7()
			{
				return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF7, 0xA0, 0xC7));
			}

			CompositionColorBrush ColorBrush_AlmostLightSlateGray_FF8D6C9F()
			{
				return (_colorBrush_AlmostLightSlateGray_FF8D6C9F == null)
					? _colorBrush_AlmostLightSlateGray_FF8D6C9F = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x8D, 0x6C, 0x9F))
					: _colorBrush_AlmostLightSlateGray_FF8D6C9F;
			}

			CompositionColorBrush ColorBrush_AlmostRosyBrown_FFC4929C()
			{
				return (_colorBrush_AlmostRosyBrown_FFC4929C == null)
					? _colorBrush_AlmostRosyBrown_FFC4929C = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xC4, 0x92, 0x9C))
					: _colorBrush_AlmostRosyBrown_FFC4929C;
			}

			CompositionColorBrush ColorBrush_AlmostSilver_FFD2A9AF()
			{
				return (_colorBrush_AlmostSilver_FFD2A9AF == null)
					? _colorBrush_AlmostSilver_FFD2A9AF = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xD2, 0xA9, 0xAF))
					: _colorBrush_AlmostSilver_FFD2A9AF;
			}

			// Layer aggregator
			// Layer: bar Outlines 2
			CompositionContainerShape ContainerShape_00()
			{
				if (_containerShape_00 != null) { return _containerShape_00; }
				var result = _containerShape_00 = _c.CreateContainerShape();
				result.Scale = new Vector2(0F, 0F);
				result.Shapes.Add(ContainerShape_01());
				return result;
			}

			// - Layer aggregator
			// Layer: bar Outlines 2
			CompositionContainerShape ContainerShape_01()
			{
				if (_containerShape_01 != null) { return _containerShape_01; }
				var result = _containerShape_01 = _c.CreateContainerShape();
				result.Offset = new Vector2(32F, 32F);
				// Transforms: bar Outlines 2 Offset:<-21, -32>
				result.Shapes.Add(SpriteShape_00());
				return result;
			}

			// Layer aggregator
			// Layer: bar Outlines
			CompositionContainerShape ContainerShape_02()
			{
				if (_containerShape_02 != null) { return _containerShape_02; }
				var result = _containerShape_02 = _c.CreateContainerShape();
				result.Shapes.Add(ContainerShape_03());
				return result;
			}

			// - Layer aggregator
			// Layer: bar Outlines
			CompositionContainerShape ContainerShape_03()
			{
				if (_containerShape_03 != null) { return _containerShape_03; }
				var result = _containerShape_03 = _c.CreateContainerShape();
				result.Offset = new Vector2(32F, 32F);
				// Transforms: bar Outlines Offset:<-21, -32>
				result.Shapes.Add(SpriteShape_01());
				return result;
			}

			// Layer aggregator
			// Layer: tile Outlines 2
			CompositionContainerShape ContainerShape_04()
			{
				if (_containerShape_04 != null) { return _containerShape_04; }
				var result = _containerShape_04 = _c.CreateContainerShape();
				result.Scale = new Vector2(0F, 0F);
				result.Shapes.Add(ContainerShape_05());
				return result;
			}

			// - Layer aggregator
			// Layer: tile Outlines 2
			CompositionContainerShape ContainerShape_05()
			{
				if (_containerShape_05 != null) { return _containerShape_05; }
				var result = _containerShape_05 = _c.CreateContainerShape();
				result.Offset = new Vector2(32F, 32F);
				// Transforms: tile Outlines 2 Offset:<-16, -27>
				result.Shapes.Add(SpriteShape_02());
				return result;
			}

			// Layer aggregator
			// Layer: tile Outlines
			CompositionContainerShape ContainerShape_06()
			{
				if (_containerShape_06 != null) { return _containerShape_06; }
				var result = _containerShape_06 = _c.CreateContainerShape();
				result.Shapes.Add(ContainerShape_07());
				return result;
			}

			// - Layer aggregator
			// Layer: tile Outlines
			CompositionContainerShape ContainerShape_07()
			{
				if (_containerShape_07 != null) { return _containerShape_07; }
				var result = _containerShape_07 = _c.CreateContainerShape();
				result.Offset = new Vector2(32F, 32F);
				// Transforms: tile Outlines Offset:<-16, -27>
				result.Shapes.Add(SpriteShape_03());
				return result;
			}

			// Layer aggregator
			CompositionContainerShape ContainerShape_08()
			{
				if (_containerShape_08 != null) { return _containerShape_08; }
				var result = _containerShape_08 = _c.CreateContainerShape();
				result.Offset = new Vector2(32F, 32F);
				var shapes = result.Shapes;
				// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
				shapes.Add(SpriteShape_04());
				// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
				shapes.Add(SpriteShape_05());
				// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
				shapes.Add(SpriteShape_06());
				// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
				shapes.Add(SpriteShape_07());
				// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
				shapes.Add(SpriteShape_08());
				// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
				shapes.Add(SpriteShape_09());
				// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
				shapes.Add(SpriteShape_10());
				// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
				shapes.Add(SpriteShape_11());
				return result;
			}

			// Layer aggregator
			// Layer: cover2-fill Outlines
			CompositionContainerShape ContainerShape_09()
			{
				if (_containerShape_09 != null) { return _containerShape_09; }
				var result = _containerShape_09 = _c.CreateContainerShape();
				result.Scale = new Vector2(0F, 0F);
				result.Shapes.Add(ContainerShape_10());
				return result;
			}

			// - Layer aggregator
			// Layer: cover2-fill Outlines
			CompositionContainerShape ContainerShape_10()
			{
				if (_containerShape_10 != null) { return _containerShape_10; }
				var result = _containerShape_10 = _c.CreateContainerShape();
				result.Offset = new Vector2(32F, 32F);
				// Transforms: cover2-fill Outlines Offset:<-18.25, 3.75>
				result.Shapes.Add(SpriteShape_12());
				return result;
			}

			// Layer aggregator
			CompositionContainerShape ContainerShape_11()
			{
				if (_containerShape_11 != null) { return _containerShape_11; }
				var result = _containerShape_11 = _c.CreateContainerShape();
				result.Offset = new Vector2(32F, 32F);
				// Transforms: cover1-outlines Outlines Offset:<-23, -1>
				result.Shapes.Add(SpriteShape_13());
				return result;
			}

			// Layer aggregator
			// Layer: cover2-outlines Outlines
			CompositionContainerShape ContainerShape_12()
			{
				if (_containerShape_12 != null) { return _containerShape_12; }
				var result = _containerShape_12 = _c.CreateContainerShape();
				result.Scale = new Vector2(0F, 0F);
				result.Shapes.Add(ContainerShape_13());
				return result;
			}

			// - Layer aggregator
			// Layer: cover2-outlines Outlines
			CompositionContainerShape ContainerShape_13()
			{
				if (_containerShape_13 != null) { return _containerShape_13; }
				var result = _containerShape_13 = _c.CreateContainerShape();
				result.Offset = new Vector2(32F, 32F);
				var shapes = result.Shapes;
				// Transforms: cover2-outlines Outlines Offset:<-14.958, 3.0010004>
				shapes.Add(SpriteShape_14());
				// Transforms: cover2-outlines Outlines Offset:<-14.958, 3.0010004>
				shapes.Add(SpriteShape_15());
				return result;
			}

			CompositionPath Path_00()
			{
				if (_path_00 != null) { return _path_00; }
				var result = _path_00 = new CompositionPath(Geometry_04());
				return result;
			}

			CompositionPath Path_01()
			{
				if (_path_01 != null) { return _path_01; }
				var result = _path_01 = new CompositionPath(Geometry_05());
				return result;
			}

			CompositionPath Path_02()
			{
				if (_path_02 != null) { return _path_02; }
				var result = _path_02 = new CompositionPath(Geometry_08());
				return result;
			}

			CompositionPath Path_03()
			{
				if (_path_03 != null) { return _path_03; }
				var result = _path_03 = new CompositionPath(Geometry_09());
				return result;
			}

			CompositionPath Path_04()
			{
				if (_path_04 != null) { return _path_04; }
				var result = _path_04 = new CompositionPath(Geometry_10());
				return result;
			}

			CompositionPath Path_05()
			{
				if (_path_05 != null) { return _path_05; }
				var result = _path_05 = new CompositionPath(Geometry_11());
				return result;
			}

			CompositionPath Path_06()
			{
				if (_path_06 != null) { return _path_06; }
				var result = _path_06 = new CompositionPath(Geometry_12());
				return result;
			}

			CompositionPath Path_07()
			{
				if (_path_07 != null) { return _path_07; }
				var result = _path_07 = new CompositionPath(Geometry_13());
				return result;
			}

			CompositionPath Path_08()
			{
				if (_path_08 != null) { return _path_08; }
				var result = _path_08 = new CompositionPath(Geometry_14());
				return result;
			}

			CompositionPath Path_09()
			{
				if (_path_09 != null) { return _path_09; }
				var result = _path_09 = new CompositionPath(Geometry_15());
				return result;
			}

			CompositionPath Path_10()
			{
				if (_path_10 != null) { return _path_10; }
				var result = _path_10 = new CompositionPath(Geometry_16());
				return result;
			}

			CompositionPath Path_11()
			{
				if (_path_11 != null) { return _path_11; }
				var result = _path_11 = new CompositionPath(Geometry_17());
				return result;
			}

			CompositionPath Path_12()
			{
				if (_path_12 != null) { return _path_12; }
				var result = _path_12 = new CompositionPath(Geometry_18());
				return result;
			}

			// - - - Layer aggregator
			// - - Layer: bar Outlines 2
			// Transforms: bar Outlines 2 Offset:<-21, -32>
			CompositionPathGeometry PathGeometry_00()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
			}

			// - - - Layer aggregator
			// - - Layer: bar Outlines
			// Transforms: bar Outlines Offset:<-21, -32>
			CompositionPathGeometry PathGeometry_01()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_01()));
			}

			// - - - Layer aggregator
			// - - Layer: tile Outlines 2
			// Transforms: tile Outlines 2 Offset:<-16, -27>
			CompositionPathGeometry PathGeometry_02()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_02()));
			}

			// - - - Layer aggregator
			// - - Layer: tile Outlines
			// Transforms: tile Outlines Offset:<-16, -27>
			CompositionPathGeometry PathGeometry_03()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_03()));
			}

			// - - Layer aggregator
			// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
			CompositionPathGeometry PathGeometry_04()
			{
				if (_pathGeometry_04 != null) { return _pathGeometry_04; }
				var result = _pathGeometry_04 = _c.CreatePathGeometry();
				return result;
			}

			// - - Layer aggregator
			// Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
			CompositionPathGeometry PathGeometry_05()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_06()));
			}

			CompositionPathGeometry PathGeometry_06()
			{
				return (_pathGeometry_06 == null)
					? _pathGeometry_06 = _c.CreatePathGeometry(new CompositionPath(Geometry_07()))
					: _pathGeometry_06;
			}

			// - - - Layer aggregator
			// - - Layer: cover2-fill Outlines
			// Transforms: cover2-fill Outlines Offset:<-18.25, 3.75>
			CompositionPathGeometry PathGeometry_07()
			{
				if (_pathGeometry_07 != null) { return _pathGeometry_07; }
				var result = _pathGeometry_07 = _c.CreatePathGeometry();
				return result;
			}

			// - - Layer aggregator
			// Transforms: cover1-outlines Outlines Offset:<-23, -1>
			CompositionPathGeometry PathGeometry_08()
			{
				if (_pathGeometry_08 != null) { return _pathGeometry_08; }
				var result = _pathGeometry_08 = _c.CreatePathGeometry();
				return result;
			}

			// - - - Layer aggregator
			// - - Layer: cover2-outlines Outlines
			// Transforms: cover2-outlines Outlines Offset:<-14.958, 3.0010004>
			CompositionPathGeometry PathGeometry_09()
			{
				if (_pathGeometry_09 != null) { return _pathGeometry_09; }
				var result = _pathGeometry_09 = _c.CreatePathGeometry();
				return result;
			}

			// - - - Layer aggregator
			// - - Layer: cover2-outlines Outlines
			// Transforms: cover2-outlines Outlines Offset:<-14.958, 3.0010004>
			CompositionPathGeometry PathGeometry_10()
			{
				if (_pathGeometry_10 != null) { return _pathGeometry_10; }
				var result = _pathGeometry_10 = _c.CreatePathGeometry();
				return result;
			}

			// - - Layer aggregator
			// - Layer: bar Outlines 2
			// Path 1
			CompositionSpriteShape SpriteShape_00()
			{
				// Offset:<0, -11.5>
				var geometry = PathGeometry_00();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, -11.5F), ColorBrush_AlmostRosyBrown_FFC4929C()); ;
				result.StrokeBrush = ColorBrush_AlmostLightSlateGray_FF8D6C9F();
				result.StrokeMiterLimit = 5F;
				result.StrokeThickness = 2F;
				return result;
			}

			// - - Layer aggregator
			// - Layer: bar Outlines
			// Path 1
			CompositionSpriteShape SpriteShape_01()
			{
				// Offset:<0, -11.5>
				var geometry = PathGeometry_01();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, -11.5F), ColorBrush_AlmostRosyBrown_FFC4929C()); ;
				result.StrokeBrush = ColorBrush_AlmostLightSlateGray_FF8D6C9F();
				result.StrokeMiterLimit = 5F;
				result.StrokeThickness = 2F;
				return result;
			}

			// - - Layer aggregator
			// - Layer: tile Outlines 2
			// ShapeGroup: Group 1 Offset:<16, 15.5>
			CompositionSpriteShape SpriteShape_02()
			{
				// Offset:<0, -11.5>
				var geometry = PathGeometry_02();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, -11.5F), ColorBrush_AlmostSilver_FFD2A9AF()); ;
				result.StrokeBrush = ColorBrush_AlmostLightSlateGray_FF8D6C9F();
				result.StrokeMiterLimit = 5F;
				result.StrokeThickness = 2F;
				return result;
			}

			// - - Layer aggregator
			// - Layer: tile Outlines
			// ShapeGroup: Group 1 Offset:<16, 15.5>
			CompositionSpriteShape SpriteShape_03()
			{
				// Offset:<0, -11.5>
				var geometry = PathGeometry_03();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, -11.5F), ColorBrush_AlmostSilver_FFD2A9AF()); ;
				result.StrokeBrush = ColorBrush_AlmostLightSlateGray_FF8D6C9F();
				result.StrokeMiterLimit = 5F;
				result.StrokeThickness = 2F;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_04()
			{
				// Offset:<0, 15>
				var geometry = PathGeometry_04();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, 15F), ColorBrush_AlmostLightPink_FFF7A0C7()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_05()
			{
				// Offset:<0, 24>
				var geometry = PathGeometry_05();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, 24F), ColorBrush_AlmostHotPink_FFF183A4()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_06()
			{
				// Offset:<-13, 22>
				var geometry = PathGeometry_06();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, -13F, 22F), ColorBrush_AlmostLightSlateGray_FF8D6C9F()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_07()
			{
				// Offset:<-8, 22>
				var geometry = PathGeometry_06();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, -8F, 22F), ColorBrush_AlmostLightSlateGray_FF8D6C9F()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_08()
			{
				// Offset:<-3, 22>
				var geometry = PathGeometry_06();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, -3F, 22F), ColorBrush_AlmostLightSlateGray_FF8D6C9F()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_09()
			{
				// Offset:<2, 22>
				var geometry = PathGeometry_06();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 2F, 22F), ColorBrush_AlmostLightSlateGray_FF8D6C9F()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_10()
			{
				// Offset:<7, 22>
				var geometry = PathGeometry_06();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 7F, 22F), ColorBrush_AlmostLightSlateGray_FF8D6C9F()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_11()
			{
				// Offset:<12, 22>
				var geometry = PathGeometry_06();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 12F, 22F), ColorBrush_AlmostLightSlateGray_FF8D6C9F()); ;
				return result;
			}

			// - - Layer aggregator
			// - Layer: cover2-fill Outlines
			// Path 1
			CompositionSpriteShape SpriteShape_12()
			{
				// Offset:<0, 9>
				var geometry = PathGeometry_07();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, 9F), ColorBrush_AlmostLavender_FFE2F1FF()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_13()
			{
				// Offset:<0, 15.5>
				var result = CreateSpriteShape(PathGeometry_08(), new Matrix3x2(1F, 0F, 0F, 1F, 0F, 15.5F)); ;
				result.StrokeBrush = ColorBrush_AlmostLightSlateGray_FF8D6C9F();
				result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
				result.StrokeMiterLimit = 2F;
				result.StrokeThickness = 2F;
				return result;
			}

			// - - Layer aggregator
			// - Layer: cover2-outlines Outlines
			// Path 1
			CompositionSpriteShape SpriteShape_14()
			{
				// Offset:<-12.49, 9.135>
				var result = CreateSpriteShape(PathGeometry_09(), new Matrix3x2(1F, 0F, 0F, 1F, -12.4899998F, 9.13500023F)); ;
				result.StrokeBrush = ColorBrush_AlmostLightSlateGray_FF8D6C9F();
				result.StrokeDashCap = CompositionStrokeCap.Round;
				result.StrokeStartCap = CompositionStrokeCap.Round;
				result.StrokeEndCap = CompositionStrokeCap.Round;
				result.StrokeMiterLimit = 5F;
				result.StrokeThickness = 2F;
				return result;
			}

			// - - Layer aggregator
			// - Layer: cover2-outlines Outlines
			// Path 1
			CompositionSpriteShape SpriteShape_15()
			{
				// Offset:<5.5629997, 11.217>
				var result = CreateSpriteShape(PathGeometry_10(), new Matrix3x2(1F, 0F, 0F, 1F, 5.56299973F, 11.217F)); ;
				result.StrokeBrush = ColorBrush_AlmostLightSlateGray_FF8D6C9F();
				result.StrokeDashCap = CompositionStrokeCap.Round;
				result.StrokeStartCap = CompositionStrokeCap.Round;
				result.StrokeEndCap = CompositionStrokeCap.Round;
				result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
				result.StrokeMiterLimit = 2F;
				result.StrokeThickness = 2F;
				return result;
			}

			// The root of the composition.
			ContainerVisual Root()
			{
				if (_root != null) { return _root; }
				var result = _root = _c.CreateContainerVisual();
				var propertySet = result.Properties;
				propertySet.InsertScalar("Progress", 0F);
				// Layer aggregator
				result.Children.InsertAtTop(ShapeVisual_0());
				return result;
			}

			CubicBezierEasingFunction CubicBezierEasingFunction_0()
			{
				return (_cubicBezierEasingFunction_0 == null)
					? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
					: _cubicBezierEasingFunction_0;
			}

			CubicBezierEasingFunction CubicBezierEasingFunction_1()
			{
				return (_cubicBezierEasingFunction_1 == null)
					? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F))
					: _cubicBezierEasingFunction_1;
			}

			// - - - Layer aggregator
			// - Transforms: cover1-fill Outlines Offset:<-18.25, 3.75>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_0()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_00(), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, Path_00(), HoldThenStepEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, Path_01(), CubicBezierEasingFunction_1());
				// Frame 19.
				result.InsertKeyFrame(0.678571403F, Path_01(), CubicBezierEasingFunction_1());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, Path_00(), CubicBezierEasingFunction_1());
				return result;
			}

			// - - - - Layer aggregator
			// - - - Layer: cover2-fill Outlines
			// - Transforms: cover2-fill Outlines Offset:<-18.25, 3.75>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_1()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_02(), StepThenHoldEasingFunction());
				// Frame 7.
				result.InsertKeyFrame(0.25F, Path_02(), HoldThenStepEasingFunction());
				// Frame 8.
				result.InsertKeyFrame(0.285714298F, Path_03(), CubicBezierEasingFunction_1());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, Path_04(), CubicBezierEasingFunction_1());
				// Frame 19.
				result.InsertKeyFrame(0.678571403F, Path_04(), CubicBezierEasingFunction_1());
				// Frame 20.
				result.InsertKeyFrame(0.714285731F, Path_03(), CubicBezierEasingFunction_1());
				// Frame 21.
				result.InsertKeyFrame(0.75F, Path_02(), CubicBezierEasingFunction_1());
				return result;
			}

			// - - - Layer aggregator
			// - Transforms: cover1-outlines Outlines Offset:<-23, -1>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_2()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_05(), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, Path_05(), HoldThenStepEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, Path_06(), CubicBezierEasingFunction_1());
				// Frame 19.
				result.InsertKeyFrame(0.678571403F, Path_06(), CubicBezierEasingFunction_1());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, Path_05(), CubicBezierEasingFunction_1());
				return result;
			}

			// - - - - Layer aggregator
			// - - - Layer: cover2-outlines Outlines
			// - Transforms: cover2-outlines Outlines Offset:<-14.958, 3.0010004>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_3()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_07(), StepThenHoldEasingFunction());
				// Frame 7.
				result.InsertKeyFrame(0.25F, Path_07(), HoldThenStepEasingFunction());
				// Frame 8.
				result.InsertKeyFrame(0.285714298F, Path_08(), CubicBezierEasingFunction_1());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, Path_09(), CubicBezierEasingFunction_1());
				// Frame 19.
				result.InsertKeyFrame(0.678571403F, Path_09(), CubicBezierEasingFunction_1());
				// Frame 20.
				result.InsertKeyFrame(0.714285731F, Path_08(), CubicBezierEasingFunction_1());
				// Frame 21.
				result.InsertKeyFrame(0.75F, Path_07(), CubicBezierEasingFunction_1());
				return result;
			}

			// - - - - Layer aggregator
			// - - - Layer: cover2-outlines Outlines
			// - Transforms: cover2-outlines Outlines Offset:<-14.958, 3.0010004>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_4()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_10(), StepThenHoldEasingFunction());
				// Frame 7.
				result.InsertKeyFrame(0.25F, Path_10(), HoldThenStepEasingFunction());
				// Frame 8.
				result.InsertKeyFrame(0.285714298F, Path_11(), CubicBezierEasingFunction_1());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, Path_12(), CubicBezierEasingFunction_1());
				// Frame 19.
				result.InsertKeyFrame(0.678571403F, Path_12(), CubicBezierEasingFunction_1());
				// Frame 20.
				result.InsertKeyFrame(0.714285731F, Path_11(), CubicBezierEasingFunction_1());
				// Frame 21.
				result.InsertKeyFrame(0.75F, Path_10(), CubicBezierEasingFunction_1());
				return result;
			}

			// Layer aggregator
			ShapeVisual ShapeVisual_0()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(64F, 64F);
				var shapes = result.Shapes;
				// Layer: bar Outlines 2
				shapes.Add(ContainerShape_00());
				// Layer: bar Outlines
				shapes.Add(ContainerShape_02());
				// Layer: tile Outlines 2
				shapes.Add(ContainerShape_04());
				// Layer: tile Outlines
				shapes.Add(ContainerShape_06());
				shapes.Add(ContainerShape_08());
				// Layer: cover2-fill Outlines
				shapes.Add(ContainerShape_09());
				shapes.Add(ContainerShape_11());
				// Layer: cover2-outlines Outlines
				shapes.Add(ContainerShape_12());
				return result;
			}

			StepEasingFunction HoldThenStepEasingFunction()
			{
				if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
				var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
				result.IsFinalStepSingleFrame = true;
				return result;
			}

			StepEasingFunction StepThenHoldEasingFunction()
			{
				if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
				var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
				result.IsInitialStepSingleFrame = true;
				return result;
			}

			// Scale
			Vector2KeyFrameAnimation ScaleVector2Animation()
			{
				// Frame 0.
				if (_scaleVector2Animation != null) { return _scaleVector2Animation; }
				var result = _scaleVector2Animation = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
				// Frame 11.
				result.InsertKeyFrame(0.392857134F, new Vector2(0.899999976F, 0.899999976F), CubicBezierEasingFunction_0());
				// Frame 13.
				result.InsertKeyFrame(0.464285702F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
				return result;
			}

			Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
			{
				// Frame 0.
				if (_shapeVisibilityAnimation_0 != null) { return _shapeVisibilityAnimation_0; }
				var result = _shapeVisibilityAnimation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
				// Frame 10.
				result.InsertKeyFrame(0.357142866F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
				return result;
			}

			Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
			{
				// Frame 0.
				if (_shapeVisibilityAnimation_1 != null) { return _shapeVisibilityAnimation_1; }
				var result = _shapeVisibilityAnimation_1 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
				// Frame 10.
				result.InsertKeyFrame(0.357142866F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
				return result;
			}

			Vector2KeyFrameAnimation ShapeVisibilityAnimation_2()
			{
				// Frame 0.
				if (_shapeVisibilityAnimation_2 != null) { return _shapeVisibilityAnimation_2; }
				var result = _shapeVisibilityAnimation_2 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
				// Frame 7.
				result.InsertKeyFrame(0.25F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
				// Frame 21.
				result.InsertKeyFrame(0.75F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
				return result;
			}

			internal ChocolateBar_AnimatedVisual(
				Compositor compositor
				)
			{
				_c = compositor;
				_reusableExpressionAnimation = compositor.CreateExpressionAnimation();
				Root();
			}

			public Visual RootVisual => _root;
			public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
			public Vector2 Size => new Vector2(64F, 64F);
			void IDisposable.Dispose() => _root?.Dispose();

			public void CreateAnimations()
			{
				_containerShape_00.StartAnimation("Scale", ShapeVisibilityAnimation_0(), AnimationController_0());
				_containerShape_01.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
				_containerShape_02.StartAnimation("Scale", ShapeVisibilityAnimation_1(), AnimationController_0());
				_containerShape_03.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
				_containerShape_04.StartAnimation("Scale", ShapeVisibilityAnimation_0(), AnimationController_0());
				_containerShape_05.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
				_containerShape_06.StartAnimation("Scale", ShapeVisibilityAnimation_1(), AnimationController_0());
				_containerShape_07.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
				_containerShape_08.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
				_containerShape_09.StartAnimation("Scale", ShapeVisibilityAnimation_2(), AnimationController_0());
				_containerShape_10.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
				_containerShape_11.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
				_containerShape_12.StartAnimation("Scale", ShapeVisibilityAnimation_2(), AnimationController_0());
				_containerShape_13.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
				_pathGeometry_04.StartAnimation("Path", PathKeyFrameAnimation_0(), AnimationController_0());
				_pathGeometry_07.StartAnimation("Path", PathKeyFrameAnimation_1(), AnimationController_0());
				_pathGeometry_08.StartAnimation("Path", PathKeyFrameAnimation_2(), AnimationController_0());
				_pathGeometry_09.StartAnimation("Path", PathKeyFrameAnimation_3(), AnimationController_0());
				_pathGeometry_10.StartAnimation("Path", PathKeyFrameAnimation_4(), AnimationController_0());
			}

			public void DestroyAnimations()
			{
				_containerShape_00.StopAnimation("Scale");
				_containerShape_01.StopAnimation("Scale");
				_containerShape_02.StopAnimation("Scale");
				_containerShape_03.StopAnimation("Scale");
				_containerShape_04.StopAnimation("Scale");
				_containerShape_05.StopAnimation("Scale");
				_containerShape_06.StopAnimation("Scale");
				_containerShape_07.StopAnimation("Scale");
				_containerShape_08.StopAnimation("Scale");
				_containerShape_09.StopAnimation("Scale");
				_containerShape_10.StopAnimation("Scale");
				_containerShape_11.StopAnimation("Scale");
				_containerShape_12.StopAnimation("Scale");
				_containerShape_13.StopAnimation("Scale");
				_pathGeometry_04.StopAnimation("Path");
				_pathGeometry_07.StopAnimation("Path");
				_pathGeometry_08.StopAnimation("Path");
				_pathGeometry_09.StopAnimation("Path");
				_pathGeometry_10.StopAnimation("Path");
			}

		}
	}
}
