//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.1.240821.1+077322fa26
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile Configure.json
//       
//       Input file:
//           Configure.json (307402 bytes created 17:46+02:00 Nov 17 2024)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   264 |
// |--------------------------+-------|
// | Expression animators     |     1 |
// | KeyFrame animators       |    35 |
// | Reference parameters     |     1 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     8 |
// |--------------------------+-------|
// | ContainerVisuals         |     9 |
// | ShapeVisuals             |    12 |
// |--------------------------+-------|
// | ContainerShapes          |     5 |
// | CompositionSpriteShapes  |    27 |
// |--------------------------+-------|
// | Brushes                  |    17 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     8 |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        administrative-tools
    // Frame rate:  24 fps
    // Frame count: 28
    // Duration:    1166.7 mS
    // _____________________________________________________________________________________________
    // |           Marker           |           Constant           | Frame |   mS   |   Progress   |
    // |____________________________|______________________________|_______|________|______________|
    // | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
    // | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
    // | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
    // | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
    // ---------------------------------------------------------------------------------------------
    sealed partial class Configure
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 1.167 seconds.
        internal const long c_durationTicks = 11666666;

        // Marker: NormalToPressed_Start.
        internal const float M_NormalToPressed_Start = 0F;

        // Marker: NormalToPressed_End.
        internal const float M_NormalToPressed_End = 0.323214293F;

        // Marker: PointerOverToPressed_Start.
        internal const float M_PointerOverToPressed_Start = 0.323214293F;

        // Marker: PointerOverToPressed_End.
        internal const float M_PointerOverToPressed_End = 0.680357158F;

        // Marker: PressedToNormal_Start.
        internal const float M_PressedToNormal_Start = 0.716071427F;

        // Marker: PressedToNormal_End.
        internal const float M_PressedToNormal_End = 1F;

        // Marker: PressedToPointerOver_Start.
        internal const float M_PressedToPointerOver_Start = 1F;

        // Marker: PressedToPointerOver_End.
        internal const float M_PressedToPointerOver_End = 1F;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new Configure_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 28d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 24d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(11666666);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 28d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "NormalToPressed_Start", 0d },
                { "NormalToPressed_End", 0.323214285714286 },
                { "PointerOverToPressed_Start", 0.323214285714286 },
                { "PointerOverToPressed_End", 0.680357142857143 },
                { "PressedToNormal_Start", 0.716071428571429 },
                { "PressedToNormal_End", 1d },
                { "PressedToPointerOver_Start", 1d },
                { "PressedToPointerOver_End", 1d },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed partial class Configure_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 11666666;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CompositionColorBrush _colorBrush_AlmostBlueViolet_FF6C18FF;
            CompositionColorBrush _colorBrush_AlmostMediumBlue_FF2100C4;
            CompositionContainerShape _containerShape_0;
            CompositionContainerShape _containerShape_1;
            CompositionContainerShape _containerShape_2;
            CompositionContainerShape _containerShape_3;
            CompositionContainerShape _containerShape_4;
            CompositionEffectFactory _effectFactory;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPath _path_2;
            CompositionPath _path_3;
            CompositionPath _path_4;
            CompositionPath _path_5;
            CompositionPath _path_6;
            CompositionPath _path_7;
            CompositionPathGeometry _pathGeometry_03;
            CompositionPathGeometry _pathGeometry_04;
            CompositionPathGeometry _pathGeometry_05;
            CompositionPathGeometry _pathGeometry_06;
            CompositionPathGeometry _pathGeometry_07;
            CompositionPathGeometry _pathGeometry_08;
            CompositionPathGeometry _pathGeometry_09;
            CompositionPathGeometry _pathGeometry_10;
            CompositionPathGeometry _pathGeometry_11;
            CompositionPathGeometry _pathGeometry_12;
            CompositionSpriteShape _spriteShape_03;
            CompositionSpriteShape _spriteShape_05;
            CompositionSpriteShape _spriteShape_06;
            CompositionSpriteShape _spriteShape_09;
            CompositionSpriteShape _spriteShape_11;
            CompositionSpriteShape _spriteShape_12;
            CompositionSpriteShape _spriteShape_15;
            CompositionSpriteShape _spriteShape_16;
            CompositionSpriteShape _spriteShape_17;
            CompositionSpriteShape _spriteShape_18;
            CompositionSpriteShape _spriteShape_21;
            CompositionSpriteShape _spriteShape_22;
            CompositionSpriteShape _spriteShape_23;
            CompositionSpriteShape _spriteShape_24;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            ShapeVisual _shapeVisual_01;
            ShapeVisual _shapeVisual_02;
            ShapeVisual _shapeVisual_04;
            ShapeVisual _shapeVisual_05;
            ShapeVisual _shapeVisual_07;
            ShapeVisual _shapeVisual_08;
            ShapeVisual _shapeVisual_10;
            ShapeVisual _shapeVisual_11;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _scaleVector2Animation_0;
            Vector2KeyFrameAnimation _scaleVector2Animation_1;
            Vector2KeyFrameAnimation _scaleVector2Animation_2;
            Vector2KeyFrameAnimation _scaleVector2Animation_3;
            Vector2KeyFrameAnimation _shapeVisibilityAnimation_4;
            Vector2KeyFrameAnimation _shapeVisibilityAnimation_6;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
            {
                var result = _c.CreateBooleanKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue);
                return result;
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            // Shape tree root for layer: overlay 1
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_0()
            {
                // Frame 0.
                var result = CreateBooleanKeyFrameAnimation(0F, true);
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, false);
                return result;
            }

            // Shape tree root for layer: mask 1
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_1()
            {
                // Frame 0.
                var result = CreateBooleanKeyFrameAnimation(0F, true);
                // Frame 7.
                result.InsertKeyFrame(0.25F, false);
                return result;
            }

            // Shape tree root for layer: overlay 2
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_2()
            {
                // Frame 0.
                var result = CreateBooleanKeyFrameAnimation(0F, true);
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, false);
                return result;
            }

            // Shape tree root for layer: mask 2
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_3()
            {
                // Frame 0.
                var result = CreateBooleanKeyFrameAnimation(0F, true);
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, false);
                return result;
            }

            // Shape tree root for layer: overlay 3
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_4()
            {
                // Frame 0.
                var result = CreateBooleanKeyFrameAnimation(0F, false);
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, true);
                return result;
            }

            // Shape tree root for layer: mask 3
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_5()
            {
                // Frame 0.
                var result = CreateBooleanKeyFrameAnimation(0F, false);
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, true);
                return result;
            }

            // Shape tree root for layer: overlay 4
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_6()
            {
                // Frame 0.
                var result = CreateBooleanKeyFrameAnimation(0F, false);
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, true);
                return result;
            }

            // Shape tree root for layer: mask 4
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_7()
            {
                // Frame 0.
                var result = CreateBooleanKeyFrameAnimation(0F, false);
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, true);
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 13 Offset:<24, 24>
            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(20F, 4F));
                    builder.AddLine(new Vector2(20F, -4F));
                    builder.AddLine(new Vector2(16.507F, -4F));
                    builder.AddCubicBezier(new Vector2(16.0879993F, -5.73400021F), new Vector2(15.4040003F, -7.36100006F), new Vector2(14.4989996F, -8.84200001F));
                    builder.AddLine(new Vector2(16.9710007F, -11.3140001F));
                    builder.AddLine(new Vector2(11.3140001F, -16.9710007F));
                    builder.AddLine(new Vector2(8.84300041F, -14.4989996F));
                    builder.AddCubicBezier(new Vector2(7.36100006F, -15.4040003F), new Vector2(5.73400021F, -16.0879993F), new Vector2(4F, -16.507F));
                    builder.AddLine(new Vector2(4F, -20F));
                    builder.AddLine(new Vector2(-4F, -20F));
                    builder.AddLine(new Vector2(-4F, -16.507F));
                    builder.AddCubicBezier(new Vector2(-5.73400021F, -16.0879993F), new Vector2(-7.36100006F, -15.4040003F), new Vector2(-8.84200001F, -14.4989996F));
                    builder.AddLine(new Vector2(-11.3140001F, -16.9710007F));
                    builder.AddLine(new Vector2(-16.9710007F, -11.3140001F));
                    builder.AddLine(new Vector2(-14.4989996F, -8.84200001F));
                    builder.AddCubicBezier(new Vector2(-15.4040003F, -7.36100006F), new Vector2(-16.0879993F, -5.73400021F), new Vector2(-16.507F, -4F));
                    builder.AddLine(new Vector2(-20F, -4F));
                    builder.AddLine(new Vector2(-20F, 4F));
                    builder.AddLine(new Vector2(-16.507F, 4F));
                    builder.AddCubicBezier(new Vector2(-16.0879993F, 5.73400021F), new Vector2(-15.4049997F, 7.36100006F), new Vector2(-14.5F, 8.84200001F));
                    builder.AddLine(new Vector2(-16.9710007F, 11.3129997F));
                    builder.AddLine(new Vector2(-11.3140001F, 16.9699993F));
                    builder.AddLine(new Vector2(-8.84300041F, 14.4989996F));
                    builder.AddCubicBezier(new Vector2(-7.36100006F, 15.4040003F), new Vector2(-5.73400021F, 16.0879993F), new Vector2(-4F, 16.507F));
                    builder.AddLine(new Vector2(-4F, 20F));
                    builder.AddLine(new Vector2(4F, 20F));
                    builder.AddLine(new Vector2(4F, 16.507F));
                    builder.AddCubicBezier(new Vector2(5.73400021F, 16.0879993F), new Vector2(7.36100006F, 15.4040003F), new Vector2(8.84300041F, 14.4989996F));
                    builder.AddLine(new Vector2(11.3140001F, 16.9710007F));
                    builder.AddLine(new Vector2(16.9710007F, 11.3129997F));
                    builder.AddLine(new Vector2(14.4989996F, 8.84300041F));
                    builder.AddCubicBezier(new Vector2(15.4040003F, 7.36100006F), new Vector2(16.0879993F, 5.73400021F), new Vector2(16.507F, 4F));
                    builder.AddLine(new Vector2(20F, 4F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 13 Offset:<24, 24>
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -8.61699963F));
                    builder.AddCubicBezier(new Vector2(4.75899982F, -8.61699963F), new Vector2(8.61699963F, -4.75899982F), new Vector2(8.61699963F, 0F));
                    builder.AddCubicBezier(new Vector2(8.61699963F, 4.75899982F), new Vector2(4.75899982F, 8.61699963F), new Vector2(0F, 8.61699963F));
                    builder.AddCubicBezier(new Vector2(-4.75899982F, 8.61699963F), new Vector2(-8.61699963F, 4.75899982F), new Vector2(-8.61699963F, 0F));
                    builder.AddCubicBezier(new Vector2(-8.61699963F, -4.75899982F), new Vector2(-4.75899982F, -8.61699963F), new Vector2(0F, -8.61699963F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - - ShapeGroup: Group 11 Offset:<36, 36>
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-12F, -12F));
                    builder.AddLine(new Vector2(12F, -12F));
                    builder.AddLine(new Vector2(12F, 12F));
                    builder.AddLine(new Vector2(-12F, 12F));
                    builder.AddLine(new Vector2(-12F, -12F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.700999975F, 2.8670001F));
                    builder.AddCubicBezier(new Vector2(0.700999975F, 2.8670001F), new Vector2(-2.88000011F, -0.753000021F), new Vector2(-2.88000011F, -0.753000021F));
                    builder.AddCubicBezier(new Vector2(-2.88000011F, -0.753000021F), new Vector2(-0.75F, -2.8670001F), new Vector2(-0.75F, -2.8670001F));
                    builder.AddCubicBezier(new Vector2(-0.75F, -2.8670001F), new Vector2(2.88000011F, 0.79400003F), new Vector2(2.88000011F, 0.79400003F));
                    builder.AddCubicBezier(new Vector2(2.88000011F, 0.79400003F), new Vector2(0.700999975F, 2.8670001F), new Vector2(0.700999975F, 2.8670001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.700999975F, 2.8670001F));
                    builder.AddCubicBezier(new Vector2(0.700999975F, 2.8670001F), new Vector2(0.70599997F, 2.86400008F), new Vector2(0.70599997F, 2.86400008F));
                    builder.AddCubicBezier(new Vector2(0.70599997F, 2.86400008F), new Vector2(2.8829999F, 0.796999991F), new Vector2(2.8829999F, 0.796999991F));
                    builder.AddCubicBezier(new Vector2(2.8829999F, 0.796999991F), new Vector2(2.88000011F, 0.79400003F), new Vector2(2.88000011F, 0.79400003F));
                    builder.AddCubicBezier(new Vector2(2.88000011F, 0.79400003F), new Vector2(0.700999975F, 2.8670001F), new Vector2(0.700999975F, 2.8670001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.55299997F, 3.56599998F));
                    builder.AddCubicBezier(new Vector2(-1.55299997F, 3.56599998F), new Vector2(-3.66100001F, 1.43200004F), new Vector2(-3.66100001F, 1.43200004F));
                    builder.AddCubicBezier(new Vector2(-3.66100001F, 1.43200004F), new Vector2(1.59300005F, -3.56599998F), new Vector2(1.59300005F, -3.56599998F));
                    builder.AddCubicBezier(new Vector2(1.59300005F, -3.56599998F), new Vector2(3.66100001F, -1.39300001F), new Vector2(3.66100001F, -1.39300001F));
                    builder.AddCubicBezier(new Vector2(3.66100001F, -1.39300001F), new Vector2(-1.55299997F, 3.56599998F), new Vector2(-1.55299997F, 3.56599998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(3.65899992F, -1.39400005F));
                    builder.AddCubicBezier(new Vector2(3.65899992F, -1.39400005F), new Vector2(1.59599996F, -3.56399989F), new Vector2(1.59599996F, -3.56399989F));
                    builder.AddCubicBezier(new Vector2(1.59599996F, -3.56399989F), new Vector2(1.59300005F, -3.56599998F), new Vector2(1.59300005F, -3.56599998F));
                    builder.AddCubicBezier(new Vector2(1.59300005F, -3.56599998F), new Vector2(3.66100001F, -1.39300001F), new Vector2(3.66100001F, -1.39300001F));
                    builder.AddCubicBezier(new Vector2(3.66100001F, -1.39300001F), new Vector2(3.65899992F, -1.39400005F), new Vector2(3.65899992F, -1.39400005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-4F, -1F));
                    builder.AddLine(new Vector2(4F, -1F));
                    builder.AddLine(new Vector2(4F, 1F));
                    builder.AddLine(new Vector2(-4F, 1F));
                    builder.AddLine(new Vector2(-4F, -1F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-2F, -1F));
                    builder.AddLine(new Vector2(2F, -1F));
                    builder.AddLine(new Vector2(2F, 1F));
                    builder.AddLine(new Vector2(-2F, 1F));
                    builder.AddLine(new Vector2(-2F, -1F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-2.87700009F, -0.755999982F));
                    builder.AddCubicBezier(new Vector2(-2.87700009F, -0.755999982F), new Vector2(-2.88000011F, -0.753000021F), new Vector2(-2.88000011F, -0.753000021F));
                    builder.AddCubicBezier(new Vector2(-2.88000011F, -0.753000021F), new Vector2(-0.75F, -2.8670001F), new Vector2(-0.75F, -2.8670001F));
                    builder.AddCubicBezier(new Vector2(-0.75F, -2.8670001F), new Vector2(-0.757000029F, -2.86599994F), new Vector2(-0.757000029F, -2.86599994F));
                    builder.AddCubicBezier(new Vector2(-0.757000029F, -2.86599994F), new Vector2(-2.87700009F, -0.755999982F), new Vector2(-2.87700009F, -0.755999982F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.55299997F, 3.56599998F));
                    builder.AddCubicBezier(new Vector2(-1.55299997F, 3.56599998F), new Vector2(-3.66100001F, 1.43200004F), new Vector2(-3.66100001F, 1.43200004F));
                    builder.AddCubicBezier(new Vector2(-3.66100001F, 1.43200004F), new Vector2(-3.66300011F, 1.42999995F), new Vector2(-3.66300011F, 1.42999995F));
                    builder.AddCubicBezier(new Vector2(-3.66300011F, 1.42999995F), new Vector2(-1.55400002F, 3.56599998F), new Vector2(-1.55400002F, 3.56599998F));
                    builder.AddCubicBezier(new Vector2(-1.55400002F, 3.56599998F), new Vector2(-1.55299997F, 3.56599998F), new Vector2(-1.55299997F, 3.56599998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-2.87899995F, -0.751999974F));
                    builder.AddCubicBezier(new Vector2(-2.87899995F, -0.751999974F), new Vector2(-2.88000011F, -0.753000021F), new Vector2(-2.88000011F, -0.753000021F));
                    builder.AddCubicBezier(new Vector2(-2.88000011F, -0.753000021F), new Vector2(-0.75F, -2.8670001F), new Vector2(-0.75F, -2.8670001F));
                    builder.AddCubicBezier(new Vector2(-0.75F, -2.8670001F), new Vector2(-0.749000013F, -2.86599994F), new Vector2(-0.749000013F, -2.86599994F));
                    builder.AddCubicBezier(new Vector2(-0.749000013F, -2.86599994F), new Vector2(-2.87899995F, -0.751999974F), new Vector2(-2.87899995F, -0.751999974F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.55299997F, 3.56599998F));
                    builder.AddCubicBezier(new Vector2(-1.55299997F, 3.56599998F), new Vector2(-3.66100001F, 1.43200004F), new Vector2(-3.66100001F, 1.43200004F));
                    builder.AddCubicBezier(new Vector2(-3.66100001F, 1.43200004F), new Vector2(-3.65700006F, 1.43400002F), new Vector2(-3.65700006F, 1.43400002F));
                    builder.AddCubicBezier(new Vector2(-3.65700006F, 1.43400002F), new Vector2(-1.54200006F, 3.57599998F), new Vector2(-1.54200006F, 3.57599998F));
                    builder.AddCubicBezier(new Vector2(-1.54200006F, 3.57599998F), new Vector2(-1.55299997F, 3.56599998F), new Vector2(-1.55299997F, 3.56599998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostBlueViolet_FF6C18FF()
            {
                return (_colorBrush_AlmostBlueViolet_FF6C18FF == null)
                    ? _colorBrush_AlmostBlueViolet_FF6C18FF = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x6C, 0x18, 0xFF))
                    : _colorBrush_AlmostBlueViolet_FF6C18FF;
            }

            // - - Layer aggregator
            // ShapeGroup: Group 13 Offset:<24, 24>
            CompositionColorBrush ColorBrush_AlmostLightSkyBlue_FF7CEBF5()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x7C, 0xEB, 0xF5));
            }

            CompositionColorBrush ColorBrush_AlmostMediumBlue_FF2100C4()
            {
                return (_colorBrush_AlmostMediumBlue_FF2100C4 == null)
                    ? _colorBrush_AlmostMediumBlue_FF2100C4 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x21, 0x00, 0xC4))
                    : _colorBrush_AlmostMediumBlue_FF2100C4;
            }

            // - Layer aggregator
            // ShapeGroup: Group 11 Offset:<36, 36>
            CompositionColorBrush ColorBrush_AlmostMediumOrchid_FFA649FF()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xA6, 0x49, 0xFF));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 13 Offset:<24, 24>
            CompositionColorBrush ColorBrush_AlmostTurquoise_FF3CD9EB()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x3C, 0xD9, 0xEB));
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_0()
            {
                if (_containerShape_0 != null) { return _containerShape_0; }
                var result = _containerShape_0 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(24F, 24F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 13 Offset:<24, 24>
                shapes.Add(SpriteShape_00());
                // ShapeGroup: Group 13 Offset:<24, 24>
                shapes.Add(SpriteShape_01());
                return result;
            }

            // Layer aggregator
            // Layer: line checkmark 2
            CompositionContainerShape ContainerShape_1()
            {
                if (_containerShape_1 != null) { return _containerShape_1; }
                var result = _containerShape_1 = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: Group 7 Offset:<31.466, 30.479>
                shapes.Add(SpriteShape_04());
                // ShapeGroup: Group 10
                shapes.Add(SpriteShape_05());
                // ShapeGroup: Group 2
                shapes.Add(SpriteShape_06());
                return result;
            }

            // Layer aggregator
            // Layer: line checkmark 4
            CompositionContainerShape ContainerShape_2()
            {
                if (_containerShape_2 != null) { return _containerShape_2; }
                var result = _containerShape_2 = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // Offset:<0, 10>
                shapes.Add(SpriteShape_10());
                // Offset:<0, 10>
                shapes.Add(SpriteShape_11());
                // Offset:<0, 10>
                shapes.Add(SpriteShape_12());
                return result;
            }

            // Layer aggregator
            // Layer: text 3
            CompositionContainerShape ContainerShape_3()
            {
                if (_containerShape_3 != null) { return _containerShape_3; }
                var result = _containerShape_3 = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 10
                shapes.Add(SpriteShape_17());
                // ShapeGroup: Group 2
                shapes.Add(SpriteShape_18());
                return result;
            }

            // Layer aggregator
            // Layer: text 4
            CompositionContainerShape ContainerShape_4()
            {
                if (_containerShape_4 != null) { return _containerShape_4; }
                var result = _containerShape_4 = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                // Offset:<0, 10>
                shapes.Add(SpriteShape_23());
                // Offset:<0, 10>
                shapes.Add(SpriteShape_24());
                return result;
            }

            CompositionEffectBrush EffectBrush_0()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            CompositionEffectBrush EffectBrush_1()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_2());
                result.SetSourceParameter("source", SurfaceBrush_3());
                return result;
            }

            CompositionEffectBrush EffectBrush_2()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_4());
                result.SetSourceParameter("source", SurfaceBrush_5());
                return result;
            }

            CompositionEffectBrush EffectBrush_3()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_6());
                result.SetSourceParameter("source", SurfaceBrush_7());
                return result;
            }

            CompositionEffectFactory EffectFactory()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                if (_effectFactory != null) { return _effectFactory; }
                var result = _effectFactory = _c.CreateEffectFactory(compositeEffect);
                return result;
            }

            CompositionPath Path_0()
            {
                if (_path_0 != null) { return _path_0; }
                var result = _path_0 = new CompositionPath(Geometry_03());
                return result;
            }

            CompositionPath Path_1()
            {
                if (_path_1 != null) { return _path_1; }
                var result = _path_1 = new CompositionPath(Geometry_04());
                return result;
            }

            CompositionPath Path_2()
            {
                if (_path_2 != null) { return _path_2; }
                var result = _path_2 = new CompositionPath(Geometry_05());
                return result;
            }

            CompositionPath Path_3()
            {
                if (_path_3 != null) { return _path_3; }
                var result = _path_3 = new CompositionPath(Geometry_06());
                return result;
            }

            CompositionPath Path_4()
            {
                if (_path_4 != null) { return _path_4; }
                var result = _path_4 = new CompositionPath(Geometry_09());
                return result;
            }

            CompositionPath Path_5()
            {
                if (_path_5 != null) { return _path_5; }
                var result = _path_5 = new CompositionPath(Geometry_10());
                return result;
            }

            CompositionPath Path_6()
            {
                if (_path_6 != null) { return _path_6; }
                var result = _path_6 = new CompositionPath(Geometry_11());
                return result;
            }

            CompositionPath Path_7()
            {
                if (_path_7 != null) { return _path_7; }
                var result = _path_7 = new CompositionPath(Geometry_12());
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Group 13 Offset:<24, 24>
            CompositionPathGeometry PathGeometry_00()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 13 Offset:<24, 24>
            CompositionPathGeometry PathGeometry_01()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_01()));
            }

            // - Layer aggregator
            // ShapeGroup: Group 11 Offset:<36, 36>
            CompositionPathGeometry PathGeometry_02()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_02()));
            }

            CompositionPathGeometry PathGeometry_03()
            {
                if (_pathGeometry_03 != null) { return _pathGeometry_03; }
                var result = _pathGeometry_03 = _c.CreatePathGeometry();
                return result;
            }

            CompositionPathGeometry PathGeometry_04()
            {
                if (_pathGeometry_04 != null) { return _pathGeometry_04; }
                var result = _pathGeometry_04 = _c.CreatePathGeometry();
                return result;
            }

            CompositionPathGeometry PathGeometry_05()
            {
                return (_pathGeometry_05 == null)
                    ? _pathGeometry_05 = _c.CreatePathGeometry(new CompositionPath(Geometry_07()))
                    : _pathGeometry_05;
            }

            CompositionPathGeometry PathGeometry_06()
            {
                return (_pathGeometry_06 == null)
                    ? _pathGeometry_06 = _c.CreatePathGeometry(new CompositionPath(Geometry_08()))
                    : _pathGeometry_06;
            }

            CompositionPathGeometry PathGeometry_07()
            {
                if (_pathGeometry_07 != null) { return _pathGeometry_07; }
                var result = _pathGeometry_07 = _c.CreatePathGeometry();
                return result;
            }

            CompositionPathGeometry PathGeometry_08()
            {
                if (_pathGeometry_08 != null) { return _pathGeometry_08; }
                var result = _pathGeometry_08 = _c.CreatePathGeometry();
                return result;
            }

            CompositionPathGeometry PathGeometry_09()
            {
                if (_pathGeometry_09 != null) { return _pathGeometry_09; }
                var result = _pathGeometry_09 = _c.CreatePathGeometry();
                return result;
            }

            CompositionPathGeometry PathGeometry_10()
            {
                if (_pathGeometry_10 != null) { return _pathGeometry_10; }
                var result = _pathGeometry_10 = _c.CreatePathGeometry();
                return result;
            }

            CompositionPathGeometry PathGeometry_11()
            {
                if (_pathGeometry_11 != null) { return _pathGeometry_11; }
                var result = _pathGeometry_11 = _c.CreatePathGeometry();
                return result;
            }

            CompositionPathGeometry PathGeometry_12()
            {
                if (_pathGeometry_12 != null) { return _pathGeometry_12; }
                var result = _pathGeometry_12 = _c.CreatePathGeometry();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<24, 24>
                var geometry = PathGeometry_00();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 24F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<24, 24>
                var geometry = PathGeometry_01();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 24F), ColorBrush_AlmostLightSkyBlue_FF7CEBF5());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<36, 36>
                var geometry = PathGeometry_02();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 36F, 36F), ColorBrush_AlmostMediumOrchid_FFA649FF());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<29.212, 31.179>
                var geometry = PathGeometry_03();
                if (_spriteShape_03 != null) { return _spriteShape_03; }
                var result = _spriteShape_03 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 29.2119999F, 31.1790009F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 2
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<31.466, 30.479>
                var geometry = PathGeometry_04();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 31.4659996F, 30.4790001F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 2
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                if (_spriteShape_05 != null) { return _spriteShape_05; }
                var result = _spriteShape_05 = _c.CreateSpriteShape(PathGeometry_05());
                result.CenterPoint = new Vector2(4F, 0F);
                result.Offset = new Vector2(42F, 29F);
                result.FillBrush = ColorBrush_AlmostBlueViolet_FF6C18FF();
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 2
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                if (_spriteShape_06 != null) { return _spriteShape_06; }
                var result = _spriteShape_06 = _c.CreateSpriteShape(PathGeometry_06());
                result.CenterPoint = new Vector2(2F, 0F);
                result.Offset = new Vector2(40F, 33F);
                result.FillBrush = ColorBrush_AlmostBlueViolet_FF6C18FF();
                return result;
            }

            // Shape tree root for layer: overlay 1
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<29.212, 31.179>
                var geometry = PathGeometry_03();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 29.2119999F, 31.1790009F), ColorBrush_AlmostMediumBlue_FF2100C4());;
                return result;
            }

            // Shape tree root for layer: mask 1
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<31.466, 30.479>
                var geometry = PathGeometry_04();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 31.4659996F, 30.4790001F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<29.212, 41.179>
                var geometry = PathGeometry_07();
                if (_spriteShape_09 != null) { return _spriteShape_09; }
                var result = _spriteShape_09 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 29.2119999F, 41.1790009F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 4
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<31.466, 40.479>
                var geometry = PathGeometry_08();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 31.4659996F, 40.4790001F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 4
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<0, 10>
                var geometry = PathGeometry_05();
                if (_spriteShape_11 != null) { return _spriteShape_11; }
                var result = _spriteShape_11 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, 10F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                result.CenterPoint = new Vector2(4F, 0F);
                result.Offset = new Vector2(42F, 29F);
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 4
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<0, 10>
                var geometry = PathGeometry_06();
                if (_spriteShape_12 != null) { return _spriteShape_12; }
                var result = _spriteShape_12 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, 10F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                result.CenterPoint = new Vector2(2F, 0F);
                result.Offset = new Vector2(40F, 33F);
                return result;
            }

            // Shape tree root for layer: overlay 2
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<29.212, 41.179>
                var geometry = PathGeometry_07();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 29.2119999F, 41.1790009F), ColorBrush_AlmostMediumBlue_FF2100C4());;
                return result;
            }

            // Shape tree root for layer: mask 2
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                // Offset:<31.466, 40.479>
                var geometry = PathGeometry_08();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 31.4659996F, 40.4790001F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_15()
            {
                // Offset:<29.212, 31.179>
                var geometry = PathGeometry_09();
                if (_spriteShape_15 != null) { return _spriteShape_15; }
                var result = _spriteShape_15 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 29.2119999F, 31.1790009F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                result.Scale = new Vector2(0F, 0F);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_16()
            {
                // Offset:<31.466, 30.479>
                var geometry = PathGeometry_10();
                if (_spriteShape_16 != null) { return _spriteShape_16; }
                var result = _spriteShape_16 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 31.4659996F, 30.4790001F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                result.Scale = new Vector2(0F, 0F);
                return result;
            }

            // - Layer aggregator
            // Layer: text 3
            // Path 1
            CompositionSpriteShape SpriteShape_17()
            {
                if (_spriteShape_17 != null) { return _spriteShape_17; }
                var result = _spriteShape_17 = _c.CreateSpriteShape(PathGeometry_05());
                result.CenterPoint = new Vector2(-4F, 0F);
                result.Offset = new Vector2(42F, 29F);
                result.FillBrush = ColorBrush_AlmostBlueViolet_FF6C18FF();
                return result;
            }

            // - Layer aggregator
            // Layer: text 3
            // Path 1
            CompositionSpriteShape SpriteShape_18()
            {
                if (_spriteShape_18 != null) { return _spriteShape_18; }
                var result = _spriteShape_18 = _c.CreateSpriteShape(PathGeometry_06());
                result.CenterPoint = new Vector2(-2F, 0F);
                result.Offset = new Vector2(40F, 33F);
                result.FillBrush = ColorBrush_AlmostBlueViolet_FF6C18FF();
                return result;
            }

            // Shape tree root for layer: overlay 3
            // Path 1
            CompositionSpriteShape SpriteShape_19()
            {
                // Offset:<29.212, 31.179>
                var geometry = PathGeometry_09();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 29.2119999F, 31.1790009F), ColorBrush_AlmostMediumBlue_FF2100C4());;
                return result;
            }

            // Shape tree root for layer: mask 3
            // Path 1
            CompositionSpriteShape SpriteShape_20()
            {
                // Offset:<31.466, 30.479>
                var geometry = PathGeometry_10();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 31.4659996F, 30.4790001F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_21()
            {
                // Offset:<29.212, 41.179>
                var geometry = PathGeometry_11();
                if (_spriteShape_21 != null) { return _spriteShape_21; }
                var result = _spriteShape_21 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 29.2119999F, 41.1790009F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                result.Scale = new Vector2(0F, 0F);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_22()
            {
                // Offset:<31.466, 40.479>
                var geometry = PathGeometry_12();
                if (_spriteShape_22 != null) { return _spriteShape_22; }
                var result = _spriteShape_22 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 31.4659996F, 40.4790001F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                result.Scale = new Vector2(0F, 0F);
                return result;
            }

            // - Layer aggregator
            // Layer: text 4
            // Path 1
            CompositionSpriteShape SpriteShape_23()
            {
                // Offset:<0, 10>
                var geometry = PathGeometry_05();
                if (_spriteShape_23 != null) { return _spriteShape_23; }
                var result = _spriteShape_23 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, 10F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                result.CenterPoint = new Vector2(-4F, 0F);
                result.Offset = new Vector2(42F, 29F);
                return result;
            }

            // - Layer aggregator
            // Layer: text 4
            // Path 1
            CompositionSpriteShape SpriteShape_24()
            {
                // Offset:<0, 10>
                var geometry = PathGeometry_06();
                if (_spriteShape_24 != null) { return _spriteShape_24; }
                var result = _spriteShape_24 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0F, 10F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                result.CenterPoint = new Vector2(-2F, 0F);
                result.Offset = new Vector2(40F, 33F);
                return result;
            }

            // Shape tree root for layer: overlay 4
            // Path 1
            CompositionSpriteShape SpriteShape_25()
            {
                // Offset:<29.212, 41.179>
                var geometry = PathGeometry_11();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 29.2119999F, 41.1790009F), ColorBrush_AlmostMediumBlue_FF2100C4());;
                return result;
            }

            // Shape tree root for layer: mask 4
            // Path 1
            CompositionSpriteShape SpriteShape_26()
            {
                // Offset:<31.466, 40.479>
                var geometry = PathGeometry_12();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 31.4659996F, 40.4790001F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionSurfaceBrush SurfaceBrush_2()
            {
                return _c.CreateSurfaceBrush(VisualSurface_2());
            }

            CompositionSurfaceBrush SurfaceBrush_3()
            {
                return _c.CreateSurfaceBrush(VisualSurface_3());
            }

            CompositionSurfaceBrush SurfaceBrush_4()
            {
                return _c.CreateSurfaceBrush(VisualSurface_4());
            }

            CompositionSurfaceBrush SurfaceBrush_5()
            {
                return _c.CreateSurfaceBrush(VisualSurface_5());
            }

            CompositionSurfaceBrush SurfaceBrush_6()
            {
                return _c.CreateSurfaceBrush(VisualSurface_6());
            }

            CompositionSurfaceBrush SurfaceBrush_7()
            {
                return _c.CreateSurfaceBrush(VisualSurface_7());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_2()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_2();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_3()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_3();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_4()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_4();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_5()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_5();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_6()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_6();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_7()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_7();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: overlay 1
                result.Children.InsertAtTop(ShapeVisual_01());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 1
                result.Children.InsertAtTop(ShapeVisual_02());
                return result;
            }

            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: overlay 2
                result.Children.InsertAtTop(ShapeVisual_04());
                return result;
            }

            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 2
                result.Children.InsertAtTop(ShapeVisual_05());
                return result;
            }

            ContainerVisual ContainerVisual_4()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: overlay 3
                result.Children.InsertAtTop(ShapeVisual_07());
                return result;
            }

            ContainerVisual ContainerVisual_5()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 3
                result.Children.InsertAtTop(ShapeVisual_08());
                return result;
            }

            ContainerVisual ContainerVisual_6()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: overlay 4
                result.Children.InsertAtTop(ShapeVisual_10());
                return result;
            }

            ContainerVisual ContainerVisual_7()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 4
                result.Children.InsertAtTop(ShapeVisual_11());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_00());
                children.InsertAtTop(SpriteVisual_0());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_03());
                children.InsertAtTop(SpriteVisual_1());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_06());
                children.InsertAtTop(SpriteVisual_2());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_09());
                children.InsertAtTop(SpriteVisual_3());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return (_cubicBezierEasingFunction_1 == null)
                    ? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 0.833000004F))
                    : _cubicBezierEasingFunction_1;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return (_cubicBezierEasingFunction_2 == null)
                    ? _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_2;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, Path_0(), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, Path_1(), CubicBezierEasingFunction_1());
                return result;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_2(), StepThenHoldEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, Path_2(), HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.25F, Path_3(), CubicBezierEasingFunction_2());
                return result;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_2()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
                // Frame 4.
                result.InsertKeyFrame(0.142857149F, Path_0(), HoldThenStepEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, Path_1(), CubicBezierEasingFunction_1());
                return result;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_3()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_2(), StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, Path_2(), HoldThenStepEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, Path_3(), CubicBezierEasingFunction_2());
                return result;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_4()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_4(), StepThenHoldEasingFunction());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, Path_4(), HoldThenStepEasingFunction());
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, Path_0(), CubicBezierEasingFunction_1());
                return result;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_5()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_5(), StepThenHoldEasingFunction());
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, Path_5(), HoldThenStepEasingFunction());
                // Frame 21.
                result.InsertKeyFrame(0.75F, Path_2(), CubicBezierEasingFunction_2());
                return result;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_6()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_6(), StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, Path_6(), HoldThenStepEasingFunction());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, Path_0(), CubicBezierEasingFunction_1());
                return result;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_7()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_7(), StepThenHoldEasingFunction());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, Path_7(), HoldThenStepEasingFunction());
                // Frame 24.
                result.InsertKeyFrame(0.857142866F, Path_2(), CubicBezierEasingFunction_2());
                return result;
            }

            // - Layer aggregator
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_90()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, 0F, HoldThenStepEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, -3F, CubicBezierEasingFunction_0());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, 93F, CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, 90F, CubicBezierEasingFunction_0());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_00()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_0());
                // ShapeGroup: Group 11 Offset:<36, 36>
                shapes.Add(SpriteShape_02());
                // Layer: line checkmark 1
                shapes.Add(SpriteShape_03());
                // Layer: line checkmark 2
                shapes.Add(ContainerShape_1());
                return result;
            }

            // Shape tree root for layer: overlay 1
            ShapeVisual ShapeVisual_01()
            {
                if (_shapeVisual_01 != null) { return _shapeVisual_01; }
                var result = _shapeVisual_01 = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 8 Offset:<29.212, 31.179>
                result.Shapes.Add(SpriteShape_07());
                return result;
            }

            // Shape tree root for layer: mask 1
            ShapeVisual ShapeVisual_02()
            {
                if (_shapeVisual_02 != null) { return _shapeVisual_02; }
                var result = _shapeVisual_02 = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 7 Offset:<31.466, 30.479>
                result.Shapes.Add(SpriteShape_08());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_03()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                var shapes = result.Shapes;
                // Layer: line checkmark 3
                shapes.Add(SpriteShape_09());
                // Layer: line checkmark 4
                shapes.Add(ContainerShape_2());
                return result;
            }

            // Shape tree root for layer: overlay 2
            ShapeVisual ShapeVisual_04()
            {
                if (_shapeVisual_04 != null) { return _shapeVisual_04; }
                var result = _shapeVisual_04 = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // Offset:<0, 10>
                result.Shapes.Add(SpriteShape_13());
                return result;
            }

            // Shape tree root for layer: mask 2
            ShapeVisual ShapeVisual_05()
            {
                if (_shapeVisual_05 != null) { return _shapeVisual_05; }
                var result = _shapeVisual_05 = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // Offset:<0, 10>
                result.Shapes.Add(SpriteShape_14());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_06()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                var shapes = result.Shapes;
                // Layer: line checkmark 5
                shapes.Add(SpriteShape_15());
                // Layer: line checkmark 6
                shapes.Add(SpriteShape_16());
                // Layer: text 3
                shapes.Add(ContainerShape_3());
                return result;
            }

            // Shape tree root for layer: overlay 3
            ShapeVisual ShapeVisual_07()
            {
                if (_shapeVisual_07 != null) { return _shapeVisual_07; }
                var result = _shapeVisual_07 = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 8 Offset:<29.212, 31.179>
                result.Shapes.Add(SpriteShape_19());
                return result;
            }

            // Shape tree root for layer: mask 3
            ShapeVisual ShapeVisual_08()
            {
                if (_shapeVisual_08 != null) { return _shapeVisual_08; }
                var result = _shapeVisual_08 = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 7 Offset:<31.466, 30.479>
                result.Shapes.Add(SpriteShape_20());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_09()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                var shapes = result.Shapes;
                // Layer: line checkmark 7
                shapes.Add(SpriteShape_21());
                // Layer: line checkmark 8
                shapes.Add(SpriteShape_22());
                // Layer: text 4
                shapes.Add(ContainerShape_4());
                return result;
            }

            // Shape tree root for layer: overlay 4
            ShapeVisual ShapeVisual_10()
            {
                if (_shapeVisual_10 != null) { return _shapeVisual_10; }
                var result = _shapeVisual_10 = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(48F, 48F);
                // Offset:<0, 10>
                result.Shapes.Add(SpriteShape_25());
                return result;
            }

            // Shape tree root for layer: mask 4
            ShapeVisual ShapeVisual_11()
            {
                if (_shapeVisual_11 != null) { return _shapeVisual_11; }
                var result = _shapeVisual_11 = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(48F, 48F);
                // Offset:<0, 10>
                result.Shapes.Add(SpriteShape_26());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_0();
                return result;
            }

            SpriteVisual SpriteVisual_1()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_1();
                return result;
            }

            SpriteVisual SpriteVisual_2()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_2();
                return result;
            }

            SpriteVisual SpriteVisual_3()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_3();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                // Frame 0.
                if (_scaleVector2Animation_0 != null) { return _scaleVector2Animation_0; }
                var result = _scaleVector2Animation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.25F, new Vector2(0F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                // Frame 0.
                if (_scaleVector2Animation_1 != null) { return _scaleVector2Animation_1; }
                var result = _scaleVector2Animation_1 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                // Frame 4.
                result.InsertKeyFrame(0.142857149F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, new Vector2(0F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_2()
            {
                // Frame 0.
                if (_scaleVector2Animation_2 != null) { return _scaleVector2Animation_2; }
                var result = _scaleVector2Animation_2 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 1F), StepThenHoldEasingFunction());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(0F, 1F), HoldThenStepEasingFunction());
                // Frame 21.
                result.InsertKeyFrame(0.75F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_3()
            {
                // Frame 0.
                if (_scaleVector2Animation_3 != null) { return _scaleVector2Animation_3; }
                var result = _scaleVector2Animation_3 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 1F), StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, new Vector2(0F, 1F), HoldThenStepEasingFunction());
                // Frame 24.
                result.InsertKeyFrame(0.857142866F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 1
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 2
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.25F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 3
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 4
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_3()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            Vector2KeyFrameAnimation ShapeVisibilityAnimation_4()
            {
                // Frame 0.
                if (_shapeVisibilityAnimation_4 != null) { return _shapeVisibilityAnimation_4; }
                var result = _shapeVisibilityAnimation_4 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 6
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_5()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                return result;
            }

            Vector2KeyFrameAnimation ShapeVisibilityAnimation_6()
            {
                // Frame 0.
                if (_shapeVisibilityAnimation_6 != null) { return _shapeVisibilityAnimation_6; }
                var result = _shapeVisibilityAnimation_6 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                return result;
            }

            // - Layer aggregator
            // Layer: line checkmark 8
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_7()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                return result;
            }

            internal Configure_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(48F, 48F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_0.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_90(), AnimationController_0());
                _containerShape_1.StartAnimation("Scale", ShapeVisibilityAnimation_1(), AnimationController_0());
                _containerShape_2.StartAnimation("Scale", ShapeVisibilityAnimation_3(), AnimationController_0());
                _containerShape_3.StartAnimation("Scale", ShapeVisibilityAnimation_4(), AnimationController_0());
                _containerShape_4.StartAnimation("Scale", ShapeVisibilityAnimation_6(), AnimationController_0());
                _pathGeometry_03.StartAnimation("Path", PathKeyFrameAnimation_0(), AnimationController_0());
                _pathGeometry_04.StartAnimation("Path", PathKeyFrameAnimation_1(), AnimationController_0());
                _pathGeometry_07.StartAnimation("Path", PathKeyFrameAnimation_2(), AnimationController_0());
                _pathGeometry_08.StartAnimation("Path", PathKeyFrameAnimation_3(), AnimationController_0());
                _pathGeometry_09.StartAnimation("Path", PathKeyFrameAnimation_4(), AnimationController_0());
                _pathGeometry_10.StartAnimation("Path", PathKeyFrameAnimation_5(), AnimationController_0());
                _pathGeometry_11.StartAnimation("Path", PathKeyFrameAnimation_6(), AnimationController_0());
                _pathGeometry_12.StartAnimation("Path", PathKeyFrameAnimation_7(), AnimationController_0());
                _spriteShape_03.StartAnimation("Scale", ShapeVisibilityAnimation_0(), AnimationController_0());
                _spriteShape_05.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _spriteShape_06.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _spriteShape_09.StartAnimation("Scale", ShapeVisibilityAnimation_2(), AnimationController_0());
                _spriteShape_11.StartAnimation("Scale", ScaleVector2Animation_1(), AnimationController_0());
                _spriteShape_12.StartAnimation("Scale", ScaleVector2Animation_1(), AnimationController_0());
                _spriteShape_15.StartAnimation("Scale", ShapeVisibilityAnimation_4(), AnimationController_0());
                _spriteShape_16.StartAnimation("Scale", ShapeVisibilityAnimation_5(), AnimationController_0());
                _spriteShape_17.StartAnimation("Scale", ScaleVector2Animation_2(), AnimationController_0());
                _spriteShape_18.StartAnimation("Scale", ScaleVector2Animation_2(), AnimationController_0());
                _spriteShape_21.StartAnimation("Scale", ShapeVisibilityAnimation_6(), AnimationController_0());
                _spriteShape_22.StartAnimation("Scale", ShapeVisibilityAnimation_7(), AnimationController_0());
                _spriteShape_23.StartAnimation("Scale", ScaleVector2Animation_3(), AnimationController_0());
                _spriteShape_24.StartAnimation("Scale", ScaleVector2Animation_3(), AnimationController_0());
                _shapeVisual_01.StartAnimation("IsVisible", IsVisibleBooleanAnimation_0(), AnimationController_0());
                _shapeVisual_02.StartAnimation("IsVisible", IsVisibleBooleanAnimation_1(), AnimationController_0());
                _shapeVisual_04.StartAnimation("IsVisible", IsVisibleBooleanAnimation_2(), AnimationController_0());
                _shapeVisual_05.StartAnimation("IsVisible", IsVisibleBooleanAnimation_3(), AnimationController_0());
                _shapeVisual_07.StartAnimation("IsVisible", IsVisibleBooleanAnimation_4(), AnimationController_0());
                _shapeVisual_08.StartAnimation("IsVisible", IsVisibleBooleanAnimation_5(), AnimationController_0());
                _shapeVisual_10.StartAnimation("IsVisible", IsVisibleBooleanAnimation_6(), AnimationController_0());
                _shapeVisual_11.StartAnimation("IsVisible", IsVisibleBooleanAnimation_7(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _containerShape_0.StopAnimation("RotationAngleInDegrees");
                _containerShape_1.StopAnimation("Scale");
                _containerShape_2.StopAnimation("Scale");
                _containerShape_3.StopAnimation("Scale");
                _containerShape_4.StopAnimation("Scale");
                _pathGeometry_03.StopAnimation("Path");
                _pathGeometry_04.StopAnimation("Path");
                _pathGeometry_07.StopAnimation("Path");
                _pathGeometry_08.StopAnimation("Path");
                _pathGeometry_09.StopAnimation("Path");
                _pathGeometry_10.StopAnimation("Path");
                _pathGeometry_11.StopAnimation("Path");
                _pathGeometry_12.StopAnimation("Path");
                _spriteShape_03.StopAnimation("Scale");
                _spriteShape_05.StopAnimation("Scale");
                _spriteShape_06.StopAnimation("Scale");
                _spriteShape_09.StopAnimation("Scale");
                _spriteShape_11.StopAnimation("Scale");
                _spriteShape_12.StopAnimation("Scale");
                _spriteShape_15.StopAnimation("Scale");
                _spriteShape_16.StopAnimation("Scale");
                _spriteShape_17.StopAnimation("Scale");
                _spriteShape_18.StopAnimation("Scale");
                _spriteShape_21.StopAnimation("Scale");
                _spriteShape_22.StopAnimation("Scale");
                _spriteShape_23.StopAnimation("Scale");
                _spriteShape_24.StopAnimation("Scale");
                _shapeVisual_01.StopAnimation("IsVisible");
                _shapeVisual_02.StopAnimation("IsVisible");
                _shapeVisual_04.StopAnimation("IsVisible");
                _shapeVisual_05.StopAnimation("IsVisible");
                _shapeVisual_07.StopAnimation("IsVisible");
                _shapeVisual_08.StopAnimation("IsVisible");
                _shapeVisual_10.StopAnimation("IsVisible");
                _shapeVisual_11.StopAnimation("IsVisible");
            }

        }
    }
}
