//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.2.250604.1+b02a3ee244
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile kawaii.json
//       
//       Input file:
//           kawaii.json (593944 bytes created 22:16+03:00 Jul 24 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   144 |
// |--------------------------+-------|
// | Expression animators     |     1 |
// | KeyFrame animators       |    21 |
// | Reference parameters     |     1 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |    13 |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     5 |
// | CompositionSpriteShapes  |    16 |
// |--------------------------+-------|
// | Brushes                  |     5 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        kawaii
    // Frame rate:  24 fps
    // Frame count: 28
    // Duration:    1166.7 mS
    // _____________________________________________________________________________________________
    // |           Marker           |           Constant           | Frame |   mS   |   Progress   |
    // |____________________________|______________________________|_______|________|______________|
    // | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
    // | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
    // | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
    // | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
    // ---------------------------------------------------------------------------------------------
    sealed partial class Kawaii
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 1.167 seconds.
        internal const long c_durationTicks = 11666666;

        // Marker: NormalToPressed_Start.
        internal const float M_NormalToPressed_Start = 0F;

        // Marker: NormalToPressed_End.
        internal const float M_NormalToPressed_End = 0.323214293F;

        // Marker: PointerOverToPressed_Start.
        internal const float M_PointerOverToPressed_Start = 0.323214293F;

        // Marker: PointerOverToPressed_End.
        internal const float M_PointerOverToPressed_End = 0.680357158F;

        // Marker: PressedToNormal_Start.
        internal const float M_PressedToNormal_Start = 0.716071427F;

        // Marker: PressedToNormal_End.
        internal const float M_PressedToNormal_End = 1F;

        // Marker: PressedToPointerOver_Start.
        internal const float M_PressedToPointerOver_Start = 1F;

        // Marker: PressedToPointerOver_End.
        internal const float M_PressedToPointerOver_End = 1F;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new Kawaii_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 28d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 24d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(11666666);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 28d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "NormalToPressed_Start", 0d },
                { "NormalToPressed_End", 0.323214285714286 },
                { "PointerOverToPressed_Start", 0.323214285714286 },
                { "PointerOverToPressed_End", 0.680357142857143 },
                { "PressedToNormal_Start", 0.716071428571429 },
                { "PressedToNormal_End", 1d },
                { "PressedToPointerOver_Start", 1d },
                { "PressedToPointerOver_End", 1d },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed partial class Kawaii_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 11666666;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CompositionColorBrush _colorBrush_AlmostDarkSlateGray_FF263238;
            CompositionColorBrush _colorBrush_AlmostGainsboro_FFDDE5E8;
            CompositionColorBrush _colorBrush_AlmostPink_FFF8BBD0;
            CompositionColorBrush _colorBrush_AlmostSilver_FFB0BEC5;
            CompositionContainerShape _containerShape_0;
            CompositionContainerShape _containerShape_1;
            CompositionContainerShape _containerShape_2;
            CompositionContainerShape _containerShape_3;
            CompositionContainerShape _containerShape_4;
            CompositionPath _path_00;
            CompositionPath _path_01;
            CompositionPath _path_02;
            CompositionPath _path_03;
            CompositionPath _path_04;
            CompositionPath _path_05;
            CompositionPath _path_06;
            CompositionPath _path_07;
            CompositionPath _path_08;
            CompositionPath _path_09;
            CompositionPath _path_10;
            CompositionPath _path_11;
            CompositionPath _path_12;
            CompositionPath _path_13;
            CompositionPath _path_14;
            CompositionPath _path_15;
            CompositionPath _path_16;
            CompositionPath _path_17;
            CompositionPath _path_18;
            CompositionPath _path_19;
            CompositionPath _path_20;
            CompositionPath _path_21;
            CompositionPath _path_22;
            CompositionPath _path_23;
            CompositionPath _path_24;
            CompositionPath _path_25;
            CompositionPath _path_26;
            CompositionPath _path_27;
            CompositionPath _path_28;
            CompositionPath _path_29;
            CompositionPath _path_30;
            CompositionPath _path_31;
            CompositionPath _path_32;
            CompositionPathGeometry _pathGeometry_00;
            CompositionPathGeometry _pathGeometry_01;
            CompositionPathGeometry _pathGeometry_02;
            CompositionPathGeometry _pathGeometry_03;
            CompositionPathGeometry _pathGeometry_06;
            CompositionPathGeometry _pathGeometry_07;
            CompositionPathGeometry _pathGeometry_08;
            CompositionPathGeometry _pathGeometry_10;
            CompositionPathGeometry _pathGeometry_11;
            CompositionPathGeometry _pathGeometry_12;
            CompositionPathGeometry _pathGeometry_13;
            CompositionPathGeometry _pathGeometry_14;
            CompositionPathGeometry _pathGeometry_15;
            CompositionSpriteShape _spriteShape_04;
            CompositionSpriteShape _spriteShape_05;
            CompositionSpriteShape _spriteShape_07;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            CubicBezierEasingFunction _cubicBezierEasingFunction_4;
            CubicBezierEasingFunction _cubicBezierEasingFunction_5;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation_0;
            Vector2KeyFrameAnimation _offsetVector2Animation_1;
            Vector2KeyFrameAnimation _scaleVector2Animation;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.5F, 9.5F));
                    builder.AddCubicBezier(new Vector2(4.5F, 9.5F), new Vector2(4.5F, -0.5F), new Vector2(4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(4.5F, -0.5F), new Vector2(4.5F, -10.5F), new Vector2(0.5F, -10.5F));
                    builder.AddCubicBezier(new Vector2(-3.5F, -10.5F), new Vector2(-4.5F, -4.5F), new Vector2(-4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(-4.5F, 1.5F), new Vector2(-3.5F, 10.5F), new Vector2(-3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(-3.5F, 10.5F), new Vector2(4.5F, 9.5F), new Vector2(4.5F, 9.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 2
            // - - - ShapeGroup: Group 2 Offset:<17.5, 11.5>
            // - Path
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.55000019F, 11.2810001F));
                    builder.AddCubicBezier(new Vector2(4.55000019F, 11.2810001F), new Vector2(3.68099999F, 4.04699993F), new Vector2(4.32999992F, 0.193000004F));
                    builder.AddCubicBezier(new Vector2(4.71299982F, -2.26200008F), new Vector2(6.16200018F, -9.14599991F), new Vector2(2.39299989F, -10.0810003F));
                    builder.AddCubicBezier(new Vector2(-1.37600005F, -11.0159998F), new Vector2(-4.00899982F, -5.04799986F), new Vector2(-4.43599987F, -2.079F));
                    builder.AddCubicBezier(new Vector2(-4.86299992F, 0.889999986F), new Vector2(-3.5F, 10.5F), new Vector2(-3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(-3.5F, 10.5F), new Vector2(4.55000019F, 11.2810001F), new Vector2(4.55000019F, 11.2810001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 2
            // - - - ShapeGroup: Group 2 Offset:<17.5, 11.5>
            // - Path
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.56899977F, 10.8129997F));
                    builder.AddCubicBezier(new Vector2(4.56899977F, 10.8129997F), new Vector2(4.5F, -0.5F), new Vector2(4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(4.26399994F, -3.84800005F), new Vector2(3.36199999F, -10.6260004F), new Vector2(-0.563000023F, -10.3970003F));
                    builder.AddCubicBezier(new Vector2(-4.78599977F, -10.151F), new Vector2(-4.5F, -4.5F), new Vector2(-4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(-4.5F, 1.5F), new Vector2(-3.5F, 10.5F), new Vector2(-3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(-3.5F, 10.5F), new Vector2(4.56899977F, 10.8129997F), new Vector2(4.56899977F, 10.8129997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.5F, 10.8269997F));
                    builder.AddCubicBezier(new Vector2(4.5F, 10.8269997F), new Vector2(4.5F, -0.5F), new Vector2(4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(4.5F, -0.5F), new Vector2(4.5F, -10.5F), new Vector2(0.5F, -10.5F));
                    builder.AddCubicBezier(new Vector2(-3.5F, -10.5F), new Vector2(-4.5F, -4.5F), new Vector2(-4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(-4.5F, 1.5F), new Vector2(-3.5F, 10.5F), new Vector2(-3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(-3.5F, 10.5F), new Vector2(4.5F, 10.8269997F), new Vector2(4.5F, 10.8269997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 2
            // - - - ShapeGroup: Group 2 Offset:<17.5, 11.5>
            // - Path
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.5999999F, 10.9989996F));
                    builder.AddCubicBezier(new Vector2(4.5999999F, 10.9989996F), new Vector2(4.5F, -0.5F), new Vector2(4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(4.38199997F, -2.17400002F), new Vector2(3.93099999F, -10.5620003F), new Vector2(-0.0309999995F, -10.448F));
                    builder.AddCubicBezier(new Vector2(-4.14300013F, -10.3249998F), new Vector2(-4.5F, -4.5F), new Vector2(-4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(-4.5F, 1.5F), new Vector2(-3.5F, 10.5F), new Vector2(-3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(-3.5F, 10.5F), new Vector2(4.5999999F, 10.9989996F), new Vector2(4.5999999F, 10.9989996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 2
            // - - - ShapeGroup: Group 2 Offset:<17.5, 11.5>
            // - Path
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.56500006F, 11.1520004F));
                    builder.AddCubicBezier(new Vector2(4.56500006F, 11.1520004F), new Vector2(4.5F, -0.5F), new Vector2(4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(4.30700016F, -3.24099994F), new Vector2(3.56900001F, -10.6020002F), new Vector2(-0.370000005F, -10.415F));
                    builder.AddCubicBezier(new Vector2(-4.55299997F, -10.2139997F), new Vector2(-4.5F, -4.5F), new Vector2(-4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(-4.5F, 1.5F), new Vector2(-3.5F, 10.5F), new Vector2(-3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(-3.5F, 10.5F), new Vector2(4.56500006F, 11.1520004F), new Vector2(4.56500006F, 11.1520004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 2
            // - - - ShapeGroup: Group 2 Offset:<17.5, 11.5>
            // - Path
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.5619998F, 11.1969995F));
                    builder.AddCubicBezier(new Vector2(4.5619998F, 11.1969995F), new Vector2(4.5F, -0.5F), new Vector2(4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(4.26399994F, -3.84800005F), new Vector2(3.36199999F, -10.6260004F), new Vector2(-0.563000023F, -10.3970003F));
                    builder.AddCubicBezier(new Vector2(-4.78599977F, -10.151F), new Vector2(-4.5F, -4.5F), new Vector2(-4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(-4.5F, 1.5F), new Vector2(-3.5F, 10.5F), new Vector2(-3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(-3.5F, 10.5F), new Vector2(4.5619998F, 11.1969995F), new Vector2(4.5619998F, 11.1969995F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -8F));
                    builder.AddCubicBezier(new Vector2(0.899999976F, -8F), new Vector2(2F, -6.0999999F), new Vector2(2F, -2F));
                    builder.AddCubicBezier(new Vector2(2F, -2F), new Vector2(2F, 8F), new Vector2(2F, 8F));
                    builder.AddCubicBezier(new Vector2(2F, 8F), new Vector2(-1F, 8F), new Vector2(-1F, 8F));
                    builder.AddCubicBezier(new Vector2(-1F, 8F), new Vector2(-2F, -0.699999988F), new Vector2(-2F, -3F));
                    builder.AddCubicBezier(new Vector2(-2F, -4.9000001F), new Vector2(-2F, -8F), new Vector2(0F, -8F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 2
            // - - - ShapeGroup: Group 1 Offset:<18, 13>
            // - Path
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.79400003F, -7.73500013F));
                    builder.AddCubicBezier(new Vector2(2.73000002F, -6.99700022F), new Vector2(2.07399988F, -3.96799994F), new Vector2(1.85099995F, -1.59200001F));
                    builder.AddCubicBezier(new Vector2(1.62800002F, 0.783999979F), new Vector2(2.09299994F, 9.29800034F), new Vector2(2.09299994F, 9.29800034F));
                    builder.AddCubicBezier(new Vector2(2.09299994F, 9.29800034F), new Vector2(-0.907000005F, 9.29800034F), new Vector2(-0.907000005F, 9.29800034F));
                    builder.AddCubicBezier(new Vector2(-0.907000005F, 9.29800034F), new Vector2(-2.29399991F, -0.875F), new Vector2(-1.96599996F, -3.15199995F));
                    builder.AddCubicBezier(new Vector2(-1.69500005F, -5.03299999F), new Vector2(-1.12899995F, -8.28499985F), new Vector2(0.79400003F, -7.73500013F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 2
            // - - - ShapeGroup: Group 1 Offset:<18, 13>
            // - Path
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.06299996F, -7.89699984F));
                    builder.AddCubicBezier(new Vector2(-0.163000003F, -7.89699984F), new Vector2(1.89300001F, -6.82000017F), new Vector2(2F, -2F));
                    builder.AddCubicBezier(new Vector2(2F, -2F), new Vector2(2.08800006F, 8.63799953F), new Vector2(2.08800006F, 8.63799953F));
                    builder.AddCubicBezier(new Vector2(2.08800006F, 8.63799953F), new Vector2(-0.912F, 8.63799953F), new Vector2(-0.912F, 8.63799953F));
                    builder.AddCubicBezier(new Vector2(-0.912F, 8.63799953F), new Vector2(-2F, -0.699999988F), new Vector2(-2F, -3F));
                    builder.AddCubicBezier(new Vector2(-2F, -4.9000001F), new Vector2(-3.06299996F, -7.89699984F), new Vector2(-1.06299996F, -7.89699984F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -8F));
                    builder.AddCubicBezier(new Vector2(0.899999976F, -8F), new Vector2(2F, -6.0999999F), new Vector2(2F, -2F));
                    builder.AddCubicBezier(new Vector2(2F, -2F), new Vector2(2.04399991F, 8.56200027F), new Vector2(2.04399991F, 8.56200027F));
                    builder.AddCubicBezier(new Vector2(2.04399991F, 8.56200027F), new Vector2(-0.95599997F, 8.56200027F), new Vector2(-0.95599997F, 8.56200027F));
                    builder.AddCubicBezier(new Vector2(-0.95599997F, 8.56200027F), new Vector2(-2F, -0.699999988F), new Vector2(-2F, -3F));
                    builder.AddCubicBezier(new Vector2(-2F, -4.9000001F), new Vector2(-2F, -8F), new Vector2(0F, -8F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 2
            // - - - ShapeGroup: Group 1 Offset:<18, 13>
            // - Path
            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.531000018F, -7.94799995F));
                    builder.AddCubicBezier(new Vector2(0.368999988F, -7.94799995F), new Vector2(1.94700003F, -6.46000004F), new Vector2(2F, -2F));
                    builder.AddCubicBezier(new Vector2(2F, -2F), new Vector2(2.0150001F, 8.66699982F), new Vector2(2.0150001F, 8.66699982F));
                    builder.AddCubicBezier(new Vector2(2.0150001F, 8.66699982F), new Vector2(-0.985000014F, 8.66699982F), new Vector2(-0.985000014F, 8.66699982F));
                    builder.AddCubicBezier(new Vector2(-0.985000014F, 8.66699982F), new Vector2(-2F, -0.699999988F), new Vector2(-2F, -3F));
                    builder.AddCubicBezier(new Vector2(-2F, -4.9000001F), new Vector2(-2.5309999F, -7.94799995F), new Vector2(-0.531000018F, -7.94799995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 2
            // - - - ShapeGroup: Group 1 Offset:<18, 13>
            // - Path
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.870000005F, -7.91499996F));
                    builder.AddCubicBezier(new Vector2(0.0299999993F, -7.91499996F), new Vector2(1.91299999F, -6.68900013F), new Vector2(2F, -2F));
                    builder.AddCubicBezier(new Vector2(2F, -2F), new Vector2(2.0769999F, 9.2329998F), new Vector2(2.0769999F, 9.2329998F));
                    builder.AddCubicBezier(new Vector2(2.0769999F, 9.2329998F), new Vector2(-0.922999978F, 9.2329998F), new Vector2(-0.922999978F, 9.2329998F));
                    builder.AddCubicBezier(new Vector2(-0.922999978F, 9.2329998F), new Vector2(-2F, -0.699999988F), new Vector2(-2F, -3F));
                    builder.AddCubicBezier(new Vector2(-2F, -4.9000001F), new Vector2(-2.86999989F, -7.91499996F), new Vector2(-0.870000005F, -7.91499996F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 2
            // - - - ShapeGroup: Group 1 Offset:<18, 13>
            // - Path
            CanvasGeometry Geometry_13()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.06299996F, -7.89699984F));
                    builder.AddCubicBezier(new Vector2(-0.163000003F, -7.89699984F), new Vector2(1.89300001F, -6.82000017F), new Vector2(2F, -2F));
                    builder.AddCubicBezier(new Vector2(2F, -2F), new Vector2(2.01600003F, 9.43400002F), new Vector2(2.01600003F, 9.43400002F));
                    builder.AddCubicBezier(new Vector2(2.01600003F, 9.43400002F), new Vector2(-0.984000027F, 9.43400002F), new Vector2(-0.984000027F, 9.43400002F));
                    builder.AddCubicBezier(new Vector2(-0.984000027F, 9.43400002F), new Vector2(-2F, -0.699999988F), new Vector2(-2F, -3F));
                    builder.AddCubicBezier(new Vector2(-2F, -4.9000001F), new Vector2(-3.06299996F, -7.89699984F), new Vector2(-1.06299996F, -7.89699984F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_14()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-4.5F, 9.5F));
                    builder.AddCubicBezier(new Vector2(-4.5F, 9.5F), new Vector2(-4.5F, -0.5F), new Vector2(-4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-4.5F, -0.5F), new Vector2(-4.5F, -10.5F), new Vector2(-0.5F, -10.5F));
                    builder.AddCubicBezier(new Vector2(3.5F, -10.5F), new Vector2(4.5F, -4.5F), new Vector2(4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(4.5F, 1.5F), new Vector2(3.5F, 10.5F), new Vector2(3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(3.5F, 10.5F), new Vector2(-4.5F, 9.5F), new Vector2(-4.5F, 9.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 1
            // - - - ShapeGroup: Group 2 Offset:<30.5, 11.5>
            // - Path
            CanvasGeometry Geometry_15()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-4.64099979F, 11.2139997F));
                    builder.AddCubicBezier(new Vector2(-4.64099979F, 11.2139997F), new Vector2(-3.69099998F, 4.04099989F), new Vector2(-4.29199982F, 0.305999994F));
                    builder.AddCubicBezier(new Vector2(-4.89300013F, -3.4289999F), new Vector2(-6.35200024F, -9.15400028F), new Vector2(-2.52900004F, -10.1619997F));
                    builder.AddCubicBezier(new Vector2(1.29400003F, -11.1700001F), new Vector2(3.91899991F, -5.1329999F), new Vector2(4.41699982F, -2.17499995F));
                    builder.AddCubicBezier(new Vector2(4.91499996F, 0.782999992F), new Vector2(3.5F, 10.5F), new Vector2(3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(3.5F, 10.5F), new Vector2(-4.64099979F, 11.2139997F), new Vector2(-4.64099979F, 11.2139997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 1
            // - - - ShapeGroup: Group 2 Offset:<30.5, 11.5>
            // - Path
            CanvasGeometry Geometry_16()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-4.45200014F, 10.5229998F));
                    builder.AddCubicBezier(new Vector2(-4.45200014F, 10.5229998F), new Vector2(-4.5F, -0.5F), new Vector2(-4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-4.57299995F, -5.87300014F), new Vector2(-1.45599997F, -11.6260004F), new Vector2(1.64499998F, -10.8719997F));
                    builder.AddCubicBezier(new Vector2(5.80800009F, -9.85999966F), new Vector2(4.5F, -4.5F), new Vector2(4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(4.5F, 1.5F), new Vector2(3.5F, 10.5F), new Vector2(3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(3.5F, 10.5F), new Vector2(-4.45200014F, 10.5229998F), new Vector2(-4.45200014F, 10.5229998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_17()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-4.59700012F, 10.4639997F));
                    builder.AddCubicBezier(new Vector2(-4.59700012F, 10.4639997F), new Vector2(-4.5F, -0.5F), new Vector2(-4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-4.5F, -0.5F), new Vector2(-4.5F, -10.5F), new Vector2(-0.5F, -10.5F));
                    builder.AddCubicBezier(new Vector2(3.5F, -10.5F), new Vector2(4.5F, -4.5F), new Vector2(4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(4.5F, 1.5F), new Vector2(3.5F, 10.5F), new Vector2(3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(3.5F, 10.5F), new Vector2(-4.59700012F, 10.4639997F), new Vector2(-4.59700012F, 10.4639997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 1
            // - - - ShapeGroup: Group 2 Offset:<30.5, 11.5>
            // - Path
            CanvasGeometry Geometry_18()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-4.61600018F, 10.9379997F));
                    builder.AddCubicBezier(new Vector2(-4.61600018F, 10.9379997F), new Vector2(-4.5F, -0.5F), new Vector2(-4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-4.53700018F, -3.18700004F), new Vector2(-2.97799993F, -11.0629997F), new Vector2(0.572000027F, -10.6859999F));
                    builder.AddCubicBezier(new Vector2(4.65299988F, -10.1800003F), new Vector2(4.5F, -4.5F), new Vector2(4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(4.5F, 1.5F), new Vector2(3.5F, 10.5F), new Vector2(3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(3.5F, 10.5F), new Vector2(-4.61600018F, 10.9379997F), new Vector2(-4.61600018F, 10.9379997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 1
            // - - - ShapeGroup: Group 2 Offset:<30.5, 11.5>
            // - Path
            CanvasGeometry Geometry_19()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-4.59000015F, 11.1700001F));
                    builder.AddCubicBezier(new Vector2(-4.59000015F, 11.1700001F), new Vector2(-4.5F, -0.5F), new Vector2(-4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-4.55999994F, -4.89799976F), new Vector2(-2.0079999F, -11.4219999F), new Vector2(1.25600004F, -10.8050003F));
                    builder.AddCubicBezier(new Vector2(5.38899994F, -9.97700024F), new Vector2(4.5F, -4.5F), new Vector2(4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(4.5F, 1.5F), new Vector2(3.5F, 10.5F), new Vector2(3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(3.5F, 10.5F), new Vector2(-4.59000015F, 11.1700001F), new Vector2(-4.59000015F, 11.1700001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 1
            // - - - ShapeGroup: Group 2 Offset:<30.5, 11.5>
            // - Path
            CanvasGeometry Geometry_20()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-4.65799999F, 11.0240002F));
                    builder.AddCubicBezier(new Vector2(-4.65799999F, 11.0240002F), new Vector2(-4.5F, -0.5F), new Vector2(-4.5F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-4.57299995F, -5.87300014F), new Vector2(-1.45599997F, -11.6260004F), new Vector2(1.64499998F, -10.8719997F));
                    builder.AddCubicBezier(new Vector2(5.80800009F, -9.85999966F), new Vector2(4.5F, -4.5F), new Vector2(4.5F, -1.5F));
                    builder.AddCubicBezier(new Vector2(4.5F, 1.5F), new Vector2(3.5F, 10.5F), new Vector2(3.5F, 10.5F));
                    builder.AddCubicBezier(new Vector2(3.5F, 10.5F), new Vector2(-4.65799999F, 11.0240002F), new Vector2(-4.65799999F, 11.0240002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_21()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -8F));
                    builder.AddCubicBezier(new Vector2(2F, -8F), new Vector2(2F, -4.9000001F), new Vector2(2F, -3F));
                    builder.AddCubicBezier(new Vector2(2F, -0.699999988F), new Vector2(1F, 8F), new Vector2(1F, 8F));
                    builder.AddCubicBezier(new Vector2(1F, 8F), new Vector2(-2F, 8F), new Vector2(-2F, 8F));
                    builder.AddCubicBezier(new Vector2(-2F, 8F), new Vector2(-2F, -2F), new Vector2(-2F, -2F));
                    builder.AddCubicBezier(new Vector2(-2F, -6.0999999F), new Vector2(-0.899999976F, -8F), new Vector2(0F, -8F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 1
            // - - - ShapeGroup: Group 1 Offset:<30, 13>
            // - Path
            CanvasGeometry Geometry_22()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.915000021F, -7.8210001F));
                    builder.AddCubicBezier(new Vector2(1.00600004F, -8.37800026F), new Vector2(1.64199996F, -5.05100012F), new Vector2(1.95799994F, -3.17700005F));
                    builder.AddCubicBezier(new Vector2(2.33999991F, -0.908999979F), new Vector2(0.963F, 9.17700005F), new Vector2(0.963F, 9.17700005F));
                    builder.AddCubicBezier(new Vector2(0.963F, 9.17700005F), new Vector2(-2.03699994F, 9.17700005F), new Vector2(-2.03699994F, 9.17700005F));
                    builder.AddCubicBezier(new Vector2(-2.03699994F, 9.17700005F), new Vector2(-1.31700003F, 1.03400004F), new Vector2(-1.82000005F, -1.52600002F));
                    builder.AddCubicBezier(new Vector2(-2.32299995F, -4.08599997F), new Vector2(-2.69499993F, -7.21000004F), new Vector2(-0.915000021F, -7.8210001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 1
            // - - - ShapeGroup: Group 1 Offset:<30, 13>
            // - Path
            CanvasGeometry Geometry_23()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.995999992F, -8.54100037F));
                    builder.AddCubicBezier(new Vector2(2.91199994F, -7.96700001F), new Vector2(2F, -4.9000001F), new Vector2(2F, -3F));
                    builder.AddCubicBezier(new Vector2(2F, -0.699999988F), new Vector2(0.934000015F, 8.60000038F), new Vector2(0.934000015F, 8.60000038F));
                    builder.AddCubicBezier(new Vector2(0.934000015F, 8.60000038F), new Vector2(-2.06599998F, 8.60000038F), new Vector2(-2.06599998F, 8.60000038F));
                    builder.AddCubicBezier(new Vector2(-2.06599998F, 8.60000038F), new Vector2(-2F, -2F), new Vector2(-2F, -2F));
                    builder.AddCubicBezier(new Vector2(-2F, -6.0999999F), new Vector2(0.134000003F, -8.79899979F), new Vector2(0.995999992F, -8.54100037F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_24()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -8F));
                    builder.AddCubicBezier(new Vector2(2F, -8F), new Vector2(2F, -4.9000001F), new Vector2(2F, -3F));
                    builder.AddCubicBezier(new Vector2(2F, -0.699999988F), new Vector2(0.888000011F, 8.54800034F), new Vector2(0.888000011F, 8.54800034F));
                    builder.AddCubicBezier(new Vector2(0.888000011F, 8.54800034F), new Vector2(-2.11199999F, 8.54800034F), new Vector2(-2.11199999F, 8.54800034F));
                    builder.AddCubicBezier(new Vector2(-2.11199999F, 8.54800034F), new Vector2(-2F, -2F), new Vector2(-2F, -2F));
                    builder.AddCubicBezier(new Vector2(-2F, -6.0999999F), new Vector2(-0.899999976F, -8F), new Vector2(0F, -8F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 1
            // - - - ShapeGroup: Group 1 Offset:<30, 13>
            // - Path
            CanvasGeometry Geometry_25()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.497999996F, -8.27000046F));
                    builder.AddCubicBezier(new Vector2(2.45600009F, -7.9829998F), new Vector2(2F, -4.9000001F), new Vector2(2F, -3F));
                    builder.AddCubicBezier(new Vector2(2F, -0.699999988F), new Vector2(0.875999987F, 8.74499989F), new Vector2(0.875999987F, 8.74499989F));
                    builder.AddCubicBezier(new Vector2(0.875999987F, 8.74499989F), new Vector2(-2.12400007F, 8.74499989F), new Vector2(-2.12400007F, 8.74499989F));
                    builder.AddCubicBezier(new Vector2(-2.12400007F, 8.74499989F), new Vector2(-2F, -2F), new Vector2(-2F, -2F));
                    builder.AddCubicBezier(new Vector2(-2F, -6.0999999F), new Vector2(-0.382999986F, -8.39900017F), new Vector2(0.497999996F, -8.27000046F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 1
            // - - - ShapeGroup: Group 1 Offset:<30, 13>
            // - Path
            CanvasGeometry Geometry_26()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.814999998F, -8.44299984F));
                    builder.AddCubicBezier(new Vector2(2.74600005F, -7.97300005F), new Vector2(2F, -4.9000001F), new Vector2(2F, -3F));
                    builder.AddCubicBezier(new Vector2(2F, -0.699999988F), new Vector2(0.917999983F, 9.08199978F), new Vector2(0.917999983F, 9.08199978F));
                    builder.AddCubicBezier(new Vector2(0.917999983F, 9.08199978F), new Vector2(-2.08200002F, 9.08199978F), new Vector2(-2.08200002F, 9.08199978F));
                    builder.AddCubicBezier(new Vector2(-2.08200002F, 9.08199978F), new Vector2(-2F, -2F), new Vector2(-2F, -2F));
                    builder.AddCubicBezier(new Vector2(-2F, -6.0999999F), new Vector2(-0.0540000014F, -8.65499973F), new Vector2(0.814999998F, -8.44299984F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - ShapeGroup: Group 1
            // - - - ShapeGroup: Group 1 Offset:<30, 13>
            // - Path
            CanvasGeometry Geometry_27()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.995999992F, -8.54100037F));
                    builder.AddCubicBezier(new Vector2(2.91199994F, -7.96700001F), new Vector2(2F, -4.9000001F), new Vector2(2F, -3F));
                    builder.AddCubicBezier(new Vector2(2F, -0.699999988F), new Vector2(0.930000007F, 9.31700039F), new Vector2(0.930000007F, 9.31700039F));
                    builder.AddCubicBezier(new Vector2(0.930000007F, 9.31700039F), new Vector2(-2.06999993F, 9.31700039F), new Vector2(-2.06999993F, 9.31700039F));
                    builder.AddCubicBezier(new Vector2(-2.06999993F, 9.31700039F), new Vector2(-2F, -2F), new Vector2(-2F, -2F));
                    builder.AddCubicBezier(new Vector2(-2F, -6.0999999F), new Vector2(0.134000003F, -8.79899979F), new Vector2(0.995999992F, -8.54100037F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - - ShapeGroup: Group 1
            CanvasGeometry Geometry_28()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -13.0120001F));
                    builder.AddCubicBezier(new Vector2(-6.4000001F, -13.0120001F), new Vector2(-16F, -11.9119997F), new Vector2(-16F, 1.08800006F));
                    builder.AddCubicBezier(new Vector2(-16F, 14.0880003F), new Vector2(0F, 12.9879999F), new Vector2(0F, 12.9879999F));
                    builder.AddCubicBezier(new Vector2(0F, 12.9879999F), new Vector2(16F, 14.0880003F), new Vector2(16F, 1.08800006F));
                    builder.AddCubicBezier(new Vector2(16F, -11.9119997F), new Vector2(6.4000001F, -13.0120001F), new Vector2(0F, -13.0120001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - - Transforms: jowls
            // - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_29()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_30(), Geometry_31() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - Layer aggregator
            // - - - Transforms: jowls
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_30()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-8.5F, 11F));
                    builder.AddCubicBezier(new Vector2(-9.88099957F, 11F), new Vector2(-11F, 12.1190004F), new Vector2(-11F, 13.5F));
                    builder.AddCubicBezier(new Vector2(-11F, 14.8809996F), new Vector2(-9.88099957F, 16F), new Vector2(-8.5F, 16F));
                    builder.AddCubicBezier(new Vector2(-7.11899996F, 16F), new Vector2(-6F, 14.8809996F), new Vector2(-6F, 13.5F));
                    builder.AddCubicBezier(new Vector2(-6F, 12.1190004F), new Vector2(-7.11899996F, 11F), new Vector2(-8.5F, 11F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - - Transforms: jowls
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_31()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(8.5F, 11F));
                    builder.AddCubicBezier(new Vector2(7.11899996F, 11F), new Vector2(6F, 12.1190004F), new Vector2(6F, 13.5F));
                    builder.AddCubicBezier(new Vector2(6F, 14.8809996F), new Vector2(7.11899996F, 16F), new Vector2(8.5F, 16F));
                    builder.AddCubicBezier(new Vector2(9.88099957F, 16F), new Vector2(11F, 14.8809996F), new Vector2(11F, 13.5F));
                    builder.AddCubicBezier(new Vector2(11F, 12.1190004F), new Vector2(9.88099957F, 11F), new Vector2(8.5F, 11F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_32()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1F, -1.37600005F));
                    builder.AddCubicBezier(new Vector2(-1F, -1.37600005F), new Vector2(-1F, 0.375999987F), new Vector2(-1F, 0.375999987F));
                    builder.AddCubicBezier(new Vector2(-1F, 0.875999987F), new Vector2(-0.5F, 1.37600005F), new Vector2(0F, 1.37600005F));
                    builder.AddCubicBezier(new Vector2(0.5F, 1.37600005F), new Vector2(1F, 0.875999987F), new Vector2(1F, 0.375999987F));
                    builder.AddCubicBezier(new Vector2(1F, 0.375999987F), new Vector2(1F, -1.37600005F), new Vector2(1F, -1.37600005F));
                    builder.AddCubicBezier(new Vector2(1F, -1.37600005F), new Vector2(-1F, -1.37600005F), new Vector2(-1F, -1.37600005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_33()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1F, -1.37600005F));
                    builder.AddCubicBezier(new Vector2(-1F, -1.37600005F), new Vector2(-1F, -1.296F), new Vector2(-1F, -1.296F));
                    builder.AddCubicBezier(new Vector2(-1F, -0.796000004F), new Vector2(-0.5F, -0.296000004F), new Vector2(0F, -0.296000004F));
                    builder.AddCubicBezier(new Vector2(0.5F, -0.296000004F), new Vector2(1F, -0.796000004F), new Vector2(1F, -1.296F));
                    builder.AddCubicBezier(new Vector2(1F, -1.296F), new Vector2(1F, -1.37600005F), new Vector2(1F, -1.37600005F));
                    builder.AddCubicBezier(new Vector2(1F, -1.37600005F), new Vector2(-1F, -1.37600005F), new Vector2(-1F, -1.37600005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_34()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-4.03200006F, -1.34300005F));
                    builder.AddCubicBezier(new Vector2(-4.03200006F, -1.34300005F), new Vector2(-4.03200006F, -1.01800001F), new Vector2(-4.03200006F, -1.01800001F));
                    builder.AddCubicBezier(new Vector2(-4.03200006F, 0.998000026F), new Vector2(-2.01600003F, 3.01399994F), new Vector2(0F, 3.01399994F));
                    builder.AddCubicBezier(new Vector2(2.01600003F, 3.01399994F), new Vector2(4.03200006F, 0.998000026F), new Vector2(4.03200006F, -1.01800001F));
                    builder.AddCubicBezier(new Vector2(4.03200006F, -1.01800001F), new Vector2(4.03200006F, -1.34300005F), new Vector2(4.03200006F, -1.34300005F));
                    builder.AddCubicBezier(new Vector2(4.03200006F, -1.34300005F), new Vector2(-4.03200006F, -1.34300005F), new Vector2(-4.03200006F, -1.34300005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_35()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_36(), Geometry_37() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            CanvasGeometry Geometry_36()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-7F, 8F));
                    builder.AddCubicBezier(new Vector2(-8.10499954F, 8F), new Vector2(-9F, 8.89500046F), new Vector2(-9F, 10F));
                    builder.AddCubicBezier(new Vector2(-9F, 11.1049995F), new Vector2(-8.10499954F, 12F), new Vector2(-7F, 12F));
                    builder.AddCubicBezier(new Vector2(-5.89499998F, 12F), new Vector2(-5F, 11.1049995F), new Vector2(-5F, 10F));
                    builder.AddCubicBezier(new Vector2(-5F, 8.89500046F), new Vector2(-5.89499998F, 8F), new Vector2(-7F, 8F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_37()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(7F, 8F));
                    builder.AddCubicBezier(new Vector2(5.89499998F, 8F), new Vector2(5F, 8.89500046F), new Vector2(5F, 10F));
                    builder.AddCubicBezier(new Vector2(5F, 11.1049995F), new Vector2(5.89499998F, 12F), new Vector2(7F, 12F));
                    builder.AddCubicBezier(new Vector2(8.10499954F, 12F), new Vector2(9F, 11.1049995F), new Vector2(9F, 10F));
                    builder.AddCubicBezier(new Vector2(9F, 8.89500046F), new Vector2(8.10499954F, 8F), new Vector2(7F, 8F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_38()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_39(), Geometry_40() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            CanvasGeometry Geometry_39()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-7F, 8.81299973F));
                    builder.AddCubicBezier(new Vector2(-8.34599972F, 8.81299973F), new Vector2(-9.43799973F, 9.52600002F), new Vector2(-9.43799973F, 10.4060001F));
                    builder.AddCubicBezier(new Vector2(-9.43799973F, 11.2860003F), new Vector2(-8.34599972F, 12F), new Vector2(-7F, 12F));
                    builder.AddCubicBezier(new Vector2(-5.65399981F, 12F), new Vector2(-4.5630002F, 11.2860003F), new Vector2(-4.5630002F, 10.4060001F));
                    builder.AddCubicBezier(new Vector2(-4.5630002F, 9.52600002F), new Vector2(-5.65399981F, 8.81299973F), new Vector2(-7F, 8.81299973F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_40()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(7F, 8.81299973F));
                    builder.AddCubicBezier(new Vector2(5.65399981F, 8.81299973F), new Vector2(4.5630002F, 9.52600002F), new Vector2(4.5630002F, 10.4060001F));
                    builder.AddCubicBezier(new Vector2(4.5630002F, 11.2860003F), new Vector2(5.65399981F, 12F), new Vector2(7F, 12F));
                    builder.AddCubicBezier(new Vector2(8.34599972F, 12F), new Vector2(9.43799973F, 11.2860003F), new Vector2(9.43799973F, 10.4060001F));
                    builder.AddCubicBezier(new Vector2(9.43799973F, 9.52600002F), new Vector2(8.34599972F, 8.81299973F), new Vector2(7F, 8.81299973F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_41()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_42(), Geometry_43() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            CanvasGeometry Geometry_42()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-7F, 5.5F));
                    builder.AddCubicBezier(new Vector2(-8.10499954F, 5.5F), new Vector2(-9F, 6.95499992F), new Vector2(-9F, 8.75F));
                    builder.AddCubicBezier(new Vector2(-9F, 10.5450001F), new Vector2(-8.10499954F, 12F), new Vector2(-7F, 12F));
                    builder.AddCubicBezier(new Vector2(-5.89499998F, 12F), new Vector2(-5F, 10.5450001F), new Vector2(-5F, 8.75F));
                    builder.AddCubicBezier(new Vector2(-5F, 6.95499992F), new Vector2(-5.89499998F, 5.5F), new Vector2(-7F, 5.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_43()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(7F, 5.5F));
                    builder.AddCubicBezier(new Vector2(5.89499998F, 5.5F), new Vector2(5F, 6.95499992F), new Vector2(5F, 8.75F));
                    builder.AddCubicBezier(new Vector2(5F, 10.5450001F), new Vector2(5.89499998F, 12F), new Vector2(7F, 12F));
                    builder.AddCubicBezier(new Vector2(8.10499954F, 12F), new Vector2(9F, 10.5450001F), new Vector2(9F, 8.75F));
                    builder.AddCubicBezier(new Vector2(9F, 6.95499992F), new Vector2(8.10499954F, 5.5F), new Vector2(7F, 5.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_44()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_45(), Geometry_46() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            CanvasGeometry Geometry_45()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-7F, 6.375F));
                    builder.AddCubicBezier(new Vector2(-8.10499954F, 6.375F), new Vector2(-9F, 7.63500023F), new Vector2(-9F, 9.18799973F));
                    builder.AddCubicBezier(new Vector2(-9F, 10.7410002F), new Vector2(-8.10499954F, 12F), new Vector2(-7F, 12F));
                    builder.AddCubicBezier(new Vector2(-5.89499998F, 12F), new Vector2(-5F, 10.7410002F), new Vector2(-5F, 9.18799973F));
                    builder.AddCubicBezier(new Vector2(-5F, 7.63500023F), new Vector2(-5.89499998F, 6.375F), new Vector2(-7F, 6.375F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_46()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(7F, 6.375F));
                    builder.AddCubicBezier(new Vector2(5.89499998F, 6.375F), new Vector2(5F, 7.63500023F), new Vector2(5F, 9.18799973F));
                    builder.AddCubicBezier(new Vector2(5F, 10.7410002F), new Vector2(5.89499998F, 12F), new Vector2(7F, 12F));
                    builder.AddCubicBezier(new Vector2(8.10499954F, 12F), new Vector2(9F, 10.7410002F), new Vector2(9F, 9.18799973F));
                    builder.AddCubicBezier(new Vector2(9F, 7.63500023F), new Vector2(8.10499954F, 6.375F), new Vector2(7F, 6.375F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_47()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(2F, 1F));
                    builder.AddCubicBezier(new Vector2(2F, 1F), new Vector2(0.999000013F, 1F), new Vector2(0.412999988F, 0.291000009F));
                    builder.AddCubicBezier(new Vector2(0.171000004F, -0.00200000009F), new Vector2(0F, -0.414999992F), new Vector2(0F, -1F));
                    builder.AddCubicBezier(new Vector2(0F, -1F), new Vector2(0F, -0.26699999F), new Vector2(-0.444000006F, 0.31099999F));
                    builder.AddCubicBezier(new Vector2(-0.73299998F, 0.688000023F), new Vector2(-1.21099997F, 1F), new Vector2(-2F, 1F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_48()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(4.3130002F, 1F));
                    builder.AddCubicBezier(new Vector2(4.3130002F, 1F), new Vector2(1.48399997F, 1.63999999F), new Vector2(0.412999988F, 0.291000009F));
                    builder.AddCubicBezier(new Vector2(0.177000001F, -0.00600000005F), new Vector2(0F, -0.414999992F), new Vector2(0F, -1F));
                    builder.AddCubicBezier(new Vector2(0F, -1F), new Vector2(0.0209999997F, -0.25F), new Vector2(-0.444000006F, 0.31099999F));
                    builder.AddCubicBezier(new Vector2(-1.23500001F, 1.26499999F), new Vector2(-3.54699993F, 1.125F), new Vector2(-4.34399986F, 1F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<24, 35>
            CanvasGeometry Geometry_49()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1F, 0F));
                    builder.AddCubicBezier(new Vector2(-1F, 0F), new Vector2(-1F, -1F), new Vector2(0F, -1F));
                    builder.AddCubicBezier(new Vector2(1F, -1F), new Vector2(1F, 0F), new Vector2(1F, 0F));
                    builder.AddLine(new Vector2(0F, 1F));
                    builder.AddLine(new Vector2(-1F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_50()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-1.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-1.5F, 0F), new Vector2(1.5F, 0F), new Vector2(1.5F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_51()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-3.125F, 0F));
                    builder.AddCubicBezier(new Vector2(-3.125F, 0F), new Vector2(1.5F, 0F), new Vector2(1.5F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_52()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-1F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-1F, -0.5F), new Vector2(1F, 0.5F), new Vector2(1F, 0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_53()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-1F, -1.46599996F));
                    builder.AddCubicBezier(new Vector2(-1F, -1.46599996F), new Vector2(1F, 0.5F), new Vector2(1F, 0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_54()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-2.625F, -0.5F));
                    builder.AddCubicBezier(new Vector2(-2.625F, -0.5F), new Vector2(1F, 0.5F), new Vector2(1F, 0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_55()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-1F, 0.5F));
                    builder.AddCubicBezier(new Vector2(-1F, 0.5F), new Vector2(1F, -0.5F), new Vector2(1F, -0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_56()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-1F, 1.63600004F));
                    builder.AddCubicBezier(new Vector2(-1F, 1.63600004F), new Vector2(1F, -0.5F), new Vector2(1F, -0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_57()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-2.625F, 0.5F));
                    builder.AddCubicBezier(new Vector2(-2.625F, 0.5F), new Vector2(1F, -0.5F), new Vector2(1F, -0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_58()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(1.5F, 0F));
                    builder.AddCubicBezier(new Vector2(1.5F, 0F), new Vector2(-1.5F, 0F), new Vector2(-1.5F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_59()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(3.875F, 0F));
                    builder.AddCubicBezier(new Vector2(3.875F, 0F), new Vector2(-1.5F, 0F), new Vector2(-1.5F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_60()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(1F, 0.5F));
                    builder.AddCubicBezier(new Vector2(1F, 0.5F), new Vector2(-1F, -0.5F), new Vector2(-1F, -0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_61()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(1F, 1.63600004F));
                    builder.AddCubicBezier(new Vector2(1F, 1.63600004F), new Vector2(-1F, -0.5F), new Vector2(-1F, -0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_62()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(3.375F, 0.5F));
                    builder.AddCubicBezier(new Vector2(3.375F, 0.5F), new Vector2(-1F, -0.5F), new Vector2(-1F, -0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_63()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(1F, -0.5F));
                    builder.AddCubicBezier(new Vector2(1F, -0.5F), new Vector2(-1F, 0.5F), new Vector2(-1F, 0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_64()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(1F, -1.46599996F));
                    builder.AddCubicBezier(new Vector2(1F, -1.46599996F), new Vector2(-1F, 0.5F), new Vector2(-1F, 0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_65()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(3.375F, -0.5F));
                    builder.AddCubicBezier(new Vector2(3.375F, -0.5F), new Vector2(-1F, 0.5F), new Vector2(-1F, 0.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostDarkSlateGray_FF263238()
            {
                return (_colorBrush_AlmostDarkSlateGray_FF263238 == null)
                    ? _colorBrush_AlmostDarkSlateGray_FF263238 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x26, 0x32, 0x38))
                    : _colorBrush_AlmostDarkSlateGray_FF263238;
            }

            CompositionColorBrush ColorBrush_AlmostGainsboro_FFDDE5E8()
            {
                return (_colorBrush_AlmostGainsboro_FFDDE5E8 == null)
                    ? _colorBrush_AlmostGainsboro_FFDDE5E8 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xDD, 0xE5, 0xE8))
                    : _colorBrush_AlmostGainsboro_FFDDE5E8;
            }

            // - - Layer aggregator
            // Transforms: mouth Offset:<24, 38.624>
            CompositionColorBrush ColorBrush_AlmostHotPink_FFF48FB1()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF4, 0x8F, 0xB1));
            }

            CompositionColorBrush ColorBrush_AlmostPink_FFF8BBD0()
            {
                return (_colorBrush_AlmostPink_FFF8BBD0 == null)
                    ? _colorBrush_AlmostPink_FFF8BBD0 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF8, 0xBB, 0xD0))
                    : _colorBrush_AlmostPink_FFF8BBD0;
            }

            CompositionColorBrush ColorBrush_AlmostSilver_FFB0BEC5()
            {
                return (_colorBrush_AlmostSilver_FFB0BEC5 == null)
                    ? _colorBrush_AlmostSilver_FFB0BEC5 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xB0, 0xBE, 0xC5))
                    : _colorBrush_AlmostSilver_FFB0BEC5;
            }

            // Layer aggregator
            // ShapeGroup: Group 2
            CompositionContainerShape ContainerShape_0()
            {
                if (_containerShape_0 != null) { return _containerShape_0; }
                var result = _containerShape_0 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(18.375F, 23.4379997F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 2 Offset:<17.5, 11.5>
                shapes.Add(SpriteShape_00());
                // ShapeGroup: Group 1 Offset:<18, 13>
                shapes.Add(SpriteShape_01());
                return result;
            }

            // Layer aggregator
            // ShapeGroup: Group 1
            CompositionContainerShape ContainerShape_1()
            {
                if (_containerShape_1 != null) { return _containerShape_1; }
                var result = _containerShape_1 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(29.625F, 24.5F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 2 Offset:<30.5, 11.5>
                shapes.Add(SpriteShape_02());
                // ShapeGroup: Group 1 Offset:<30, 13>
                shapes.Add(SpriteShape_03());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_2()
            {
                if (_containerShape_2 != null) { return _containerShape_2; }
                var result = _containerShape_2 = _c.CreateContainerShape();
                // Transforms: mouth Offset:<24, 38.624>
                result.Shapes.Add(SpriteShape_06());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_3()
            {
                if (_containerShape_3 != null) { return _containerShape_3; }
                var result = _containerShape_3 = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: Group 2 Offset:<24, 36>
                shapes.Add(SpriteShape_08());
                // ShapeGroup: Group 1 Offset:<24, 35>
                shapes.Add(SpriteShape_09());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_4()
            {
                if (_containerShape_4 != null) { return _containerShape_4; }
                var result = _containerShape_4 = _c.CreateContainerShape();
                result.Offset = new Vector2(24F, 32.5340004F);
                var shapes = result.Shapes;
                // Transforms: whiskers Offset:<-24, -32.534>
                shapes.Add(SpriteShape_10());
                // Transforms: whiskers Offset:<-24, -32.534>
                shapes.Add(SpriteShape_11());
                // Transforms: whiskers Offset:<-24, -32.534>
                shapes.Add(SpriteShape_12());
                // Transforms: whiskers Offset:<-24, -32.534>
                shapes.Add(SpriteShape_13());
                // Transforms: whiskers Offset:<-24, -32.534>
                shapes.Add(SpriteShape_14());
                // Transforms: whiskers Offset:<-24, -32.534>
                shapes.Add(SpriteShape_15());
                return result;
            }

            CompositionPath Path_00()
            {
                if (_path_00 != null) { return _path_00; }
                var result = _path_00 = new CompositionPath(Geometry_00());
                return result;
            }

            CompositionPath Path_01()
            {
                if (_path_01 != null) { return _path_01; }
                var result = _path_01 = new CompositionPath(Geometry_03());
                return result;
            }

            CompositionPath Path_02()
            {
                if (_path_02 != null) { return _path_02; }
                var result = _path_02 = new CompositionPath(Geometry_07());
                return result;
            }

            CompositionPath Path_03()
            {
                if (_path_03 != null) { return _path_03; }
                var result = _path_03 = new CompositionPath(Geometry_10());
                return result;
            }

            CompositionPath Path_04()
            {
                if (_path_04 != null) { return _path_04; }
                var result = _path_04 = new CompositionPath(Geometry_14());
                return result;
            }

            CompositionPath Path_05()
            {
                if (_path_05 != null) { return _path_05; }
                var result = _path_05 = new CompositionPath(Geometry_17());
                return result;
            }

            CompositionPath Path_06()
            {
                if (_path_06 != null) { return _path_06; }
                var result = _path_06 = new CompositionPath(Geometry_21());
                return result;
            }

            CompositionPath Path_07()
            {
                if (_path_07 != null) { return _path_07; }
                var result = _path_07 = new CompositionPath(Geometry_24());
                return result;
            }

            CompositionPath Path_08()
            {
                if (_path_08 != null) { return _path_08; }
                var result = _path_08 = new CompositionPath(Geometry_32());
                return result;
            }

            CompositionPath Path_09()
            {
                if (_path_09 != null) { return _path_09; }
                var result = _path_09 = new CompositionPath(Geometry_33());
                return result;
            }

            CompositionPath Path_10()
            {
                if (_path_10 != null) { return _path_10; }
                var result = _path_10 = new CompositionPath(Geometry_34());
                return result;
            }

            CompositionPath Path_11()
            {
                if (_path_11 != null) { return _path_11; }
                var result = _path_11 = new CompositionPath(Geometry_35());
                return result;
            }

            CompositionPath Path_12()
            {
                if (_path_12 != null) { return _path_12; }
                var result = _path_12 = new CompositionPath(Geometry_38());
                return result;
            }

            CompositionPath Path_13()
            {
                if (_path_13 != null) { return _path_13; }
                var result = _path_13 = new CompositionPath(Geometry_41());
                return result;
            }

            CompositionPath Path_14()
            {
                if (_path_14 != null) { return _path_14; }
                var result = _path_14 = new CompositionPath(Geometry_44());
                return result;
            }

            CompositionPath Path_15()
            {
                if (_path_15 != null) { return _path_15; }
                var result = _path_15 = new CompositionPath(Geometry_47());
                return result;
            }

            CompositionPath Path_16()
            {
                if (_path_16 != null) { return _path_16; }
                var result = _path_16 = new CompositionPath(Geometry_48());
                return result;
            }

            CompositionPath Path_17()
            {
                if (_path_17 != null) { return _path_17; }
                var result = _path_17 = new CompositionPath(Geometry_50());
                return result;
            }

            CompositionPath Path_18()
            {
                if (_path_18 != null) { return _path_18; }
                var result = _path_18 = new CompositionPath(Geometry_51());
                return result;
            }

            CompositionPath Path_19()
            {
                if (_path_19 != null) { return _path_19; }
                var result = _path_19 = new CompositionPath(Geometry_52());
                return result;
            }

            CompositionPath Path_20()
            {
                if (_path_20 != null) { return _path_20; }
                var result = _path_20 = new CompositionPath(Geometry_53());
                return result;
            }

            CompositionPath Path_21()
            {
                if (_path_21 != null) { return _path_21; }
                var result = _path_21 = new CompositionPath(Geometry_54());
                return result;
            }

            CompositionPath Path_22()
            {
                if (_path_22 != null) { return _path_22; }
                var result = _path_22 = new CompositionPath(Geometry_55());
                return result;
            }

            CompositionPath Path_23()
            {
                if (_path_23 != null) { return _path_23; }
                var result = _path_23 = new CompositionPath(Geometry_56());
                return result;
            }

            CompositionPath Path_24()
            {
                if (_path_24 != null) { return _path_24; }
                var result = _path_24 = new CompositionPath(Geometry_57());
                return result;
            }

            CompositionPath Path_25()
            {
                if (_path_25 != null) { return _path_25; }
                var result = _path_25 = new CompositionPath(Geometry_58());
                return result;
            }

            CompositionPath Path_26()
            {
                if (_path_26 != null) { return _path_26; }
                var result = _path_26 = new CompositionPath(Geometry_59());
                return result;
            }

            CompositionPath Path_27()
            {
                if (_path_27 != null) { return _path_27; }
                var result = _path_27 = new CompositionPath(Geometry_60());
                return result;
            }

            CompositionPath Path_28()
            {
                if (_path_28 != null) { return _path_28; }
                var result = _path_28 = new CompositionPath(Geometry_61());
                return result;
            }

            CompositionPath Path_29()
            {
                if (_path_29 != null) { return _path_29; }
                var result = _path_29 = new CompositionPath(Geometry_62());
                return result;
            }

            CompositionPath Path_30()
            {
                if (_path_30 != null) { return _path_30; }
                var result = _path_30 = new CompositionPath(Geometry_63());
                return result;
            }

            CompositionPath Path_31()
            {
                if (_path_31 != null) { return _path_31; }
                var result = _path_31 = new CompositionPath(Geometry_64());
                return result;
            }

            CompositionPath Path_32()
            {
                if (_path_32 != null) { return _path_32; }
                var result = _path_32 = new CompositionPath(Geometry_65());
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: Group 2
            // ShapeGroup: Group 2 Offset:<17.5, 11.5>
            CompositionPathGeometry PathGeometry_00()
            {
                if (_pathGeometry_00 != null) { return _pathGeometry_00; }
                var result = _pathGeometry_00 = _c.CreatePathGeometry();
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: Group 2
            // ShapeGroup: Group 1 Offset:<18, 13>
            CompositionPathGeometry PathGeometry_01()
            {
                if (_pathGeometry_01 != null) { return _pathGeometry_01; }
                var result = _pathGeometry_01 = _c.CreatePathGeometry();
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: Group 1
            // ShapeGroup: Group 2 Offset:<30.5, 11.5>
            CompositionPathGeometry PathGeometry_02()
            {
                if (_pathGeometry_02 != null) { return _pathGeometry_02; }
                var result = _pathGeometry_02 = _c.CreatePathGeometry();
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: Group 1
            // ShapeGroup: Group 1 Offset:<30, 13>
            CompositionPathGeometry PathGeometry_03()
            {
                if (_pathGeometry_03 != null) { return _pathGeometry_03; }
                var result = _pathGeometry_03 = _c.CreatePathGeometry();
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: Group 1
            CompositionPathGeometry PathGeometry_04()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_28()));
            }

            // - Layer aggregator
            // Transforms: jowls
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_05()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_29()));
            }

            // - - Layer aggregator
            // Transforms: mouth Offset:<24, 38.624>
            CompositionPathGeometry PathGeometry_06()
            {
                if (_pathGeometry_06 != null) { return _pathGeometry_06; }
                var result = _pathGeometry_06 = _c.CreatePathGeometry();
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: Group 1
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_07()
            {
                if (_pathGeometry_07 != null) { return _pathGeometry_07; }
                var result = _pathGeometry_07 = _c.CreatePathGeometry();
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Group 2 Offset:<24, 36>
            CompositionPathGeometry PathGeometry_08()
            {
                if (_pathGeometry_08 != null) { return _pathGeometry_08; }
                var result = _pathGeometry_08 = _c.CreatePathGeometry();
                return result;
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<24, 35>
            CompositionPathGeometry PathGeometry_09()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_49()));
            }

            // - - Layer aggregator
            // Transforms: whiskers Offset:<-24, -32.534>
            CompositionPathGeometry PathGeometry_10()
            {
                if (_pathGeometry_10 != null) { return _pathGeometry_10; }
                var result = _pathGeometry_10 = _c.CreatePathGeometry();
                return result;
            }

            // - - Layer aggregator
            // Transforms: whiskers Offset:<-24, -32.534>
            CompositionPathGeometry PathGeometry_11()
            {
                if (_pathGeometry_11 != null) { return _pathGeometry_11; }
                var result = _pathGeometry_11 = _c.CreatePathGeometry();
                return result;
            }

            // - - Layer aggregator
            // Transforms: whiskers Offset:<-24, -32.534>
            CompositionPathGeometry PathGeometry_12()
            {
                if (_pathGeometry_12 != null) { return _pathGeometry_12; }
                var result = _pathGeometry_12 = _c.CreatePathGeometry();
                return result;
            }

            // - - Layer aggregator
            // Transforms: whiskers Offset:<-24, -32.534>
            CompositionPathGeometry PathGeometry_13()
            {
                if (_pathGeometry_13 != null) { return _pathGeometry_13; }
                var result = _pathGeometry_13 = _c.CreatePathGeometry();
                return result;
            }

            // - - Layer aggregator
            // Transforms: whiskers Offset:<-24, -32.534>
            CompositionPathGeometry PathGeometry_14()
            {
                if (_pathGeometry_14 != null) { return _pathGeometry_14; }
                var result = _pathGeometry_14 = _c.CreatePathGeometry();
                return result;
            }

            // - - Layer aggregator
            // Transforms: whiskers Offset:<-24, -32.534>
            CompositionPathGeometry PathGeometry_15()
            {
                if (_pathGeometry_15 != null) { return _pathGeometry_15; }
                var result = _pathGeometry_15 = _c.CreatePathGeometry();
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: Group 2
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<17.5, 11.5>
                var geometry = PathGeometry_00();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 17.5F, 11.5F), ColorBrush_AlmostGainsboro_FFDDE5E8());;
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: Group 2
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<18, 13>
                var geometry = PathGeometry_01();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 18F, 13F), ColorBrush_AlmostPink_FFF8BBD0());;
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: Group 1
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<30.5, 11.5>
                var geometry = PathGeometry_02();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 30.5F, 11.5F), ColorBrush_AlmostGainsboro_FFDDE5E8());;
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: Group 1
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<30, 13>
                var geometry = PathGeometry_03();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 30F, 13F), ColorBrush_AlmostPink_FFF8BBD0());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                if (_spriteShape_04 != null) { return _spriteShape_04; }
                var result = _spriteShape_04 = _c.CreateSpriteShape(PathGeometry_04());
                result.Offset = new Vector2(24F, 32.5340004F);
                result.FillBrush = ColorBrush_AlmostGainsboro_FFDDE5E8();
                return result;
            }

            // Layer aggregator
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                if (_spriteShape_05 != null) { return _spriteShape_05; }
                var result = _spriteShape_05 = _c.CreateSpriteShape(PathGeometry_05());
                result.FillBrush = ColorBrush_AlmostPink_FFF8BBD0();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<24, 38.624>
                var geometry = PathGeometry_06();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 38.6240005F), ColorBrush_AlmostHotPink_FFF48FB1());;
                return result;
            }

            // Layer aggregator
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                if (_spriteShape_07 != null) { return _spriteShape_07; }
                var result = _spriteShape_07 = _c.CreateSpriteShape(PathGeometry_07());
                result.FillBrush = ColorBrush_AlmostDarkSlateGray_FF263238();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<24, 36>
                var result = CreateSpriteShape(PathGeometry_08(), new Matrix3x2(1F, 0F, 0F, 1F, 24F, 36F));;
                result.StrokeBrush = ColorBrush_AlmostSilver_FFB0BEC5();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<24, 35>
                var geometry = PathGeometry_09();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 35F), ColorBrush_AlmostDarkSlateGray_FF263238());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<-16.5, 2.4659996>
                var result = CreateSpriteShape(PathGeometry_10(), new Matrix3x2(1F, 0F, 0F, 1F, -16.5F, 2.4659996F));;
                result.StrokeBrush = ColorBrush_AlmostSilver_FFB0BEC5();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<-16, -1.0340004>
                var result = CreateSpriteShape(PathGeometry_11(), new Matrix3x2(1F, 0F, 0F, 1F, -16F, -1.0340004F));;
                result.StrokeBrush = ColorBrush_AlmostSilver_FFB0BEC5();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<-16, 5.9659996>
                var result = CreateSpriteShape(PathGeometry_12(), new Matrix3x2(1F, 0F, 0F, 1F, -16F, 5.9659996F));;
                result.StrokeBrush = ColorBrush_AlmostSilver_FFB0BEC5();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<16.5, 2.4659996>
                var result = CreateSpriteShape(PathGeometry_13(), new Matrix3x2(1F, 0F, 0F, 1F, 16.5F, 2.4659996F));;
                result.StrokeBrush = ColorBrush_AlmostSilver_FFB0BEC5();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                // Offset:<16, 5.9659996>
                var result = CreateSpriteShape(PathGeometry_14(), new Matrix3x2(1F, 0F, 0F, 1F, 16F, 5.9659996F));;
                result.StrokeBrush = ColorBrush_AlmostSilver_FFB0BEC5();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_15()
            {
                // Offset:<16, -1.0340004>
                var result = CreateSpriteShape(PathGeometry_15(), new Matrix3x2(1F, 0F, 0F, 1F, 16F, -1.0340004F));;
                result.StrokeBrush = ColorBrush_AlmostSilver_FFB0BEC5();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 2F;
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return (_cubicBezierEasingFunction_1 == null)
                    ? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 0.833000004F))
                    : _cubicBezierEasingFunction_1;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return (_cubicBezierEasingFunction_2 == null)
                    ? _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F))
                    : _cubicBezierEasingFunction_2;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return (_cubicBezierEasingFunction_3 == null)
                    ? _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_3;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_4()
            {
                return (_cubicBezierEasingFunction_4 == null)
                    ? _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_4;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_5()
            {
                return (_cubicBezierEasingFunction_5 == null)
                    ? _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.333000004F), new Vector2(0.666999996F, 0.666999996F))
                    : _cubicBezierEasingFunction_5;
            }

            // - - - Layer aggregator
            // - - ShapeGroup: Group 2
            // - ShapeGroup: Group 2 Offset:<17.5, 11.5>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_00()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_00(), StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, Path_00(), HoldThenStepEasingFunction());
                // Frame 9.
                result.InsertKeyFrame(0.321428567F, new CompositionPath(Geometry_01()), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new CompositionPath(Geometry_02()), CubicBezierEasingFunction_0());
                // Frame 13.
                result.InsertKeyFrame(0.464285702F, Path_01(), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, Path_01(), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, new CompositionPath(Geometry_04()), CubicBezierEasingFunction_1());
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, new CompositionPath(Geometry_05()), CubicBezierEasingFunction_2());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, new CompositionPath(Geometry_06()), CubicBezierEasingFunction_3());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, Path_00(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - - ShapeGroup: Group 2
            // - ShapeGroup: Group 1 Offset:<18, 13>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_01()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_02(), StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, Path_02(), HoldThenStepEasingFunction());
                // Frame 9.
                result.InsertKeyFrame(0.321428567F, new CompositionPath(Geometry_08()), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new CompositionPath(Geometry_09()), CubicBezierEasingFunction_0());
                // Frame 13.
                result.InsertKeyFrame(0.464285702F, Path_03(), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, Path_03(), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, new CompositionPath(Geometry_11()), CubicBezierEasingFunction_1());
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, new CompositionPath(Geometry_12()), CubicBezierEasingFunction_2());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, new CompositionPath(Geometry_13()), CubicBezierEasingFunction_3());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, Path_02(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - - ShapeGroup: Group 1
            // - ShapeGroup: Group 2 Offset:<30.5, 11.5>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_02()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_04(), StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, Path_04(), HoldThenStepEasingFunction());
                // Frame 9.
                result.InsertKeyFrame(0.321428567F, new CompositionPath(Geometry_15()), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new CompositionPath(Geometry_16()), CubicBezierEasingFunction_0());
                // Frame 13.
                result.InsertKeyFrame(0.464285702F, Path_05(), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, Path_05(), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, new CompositionPath(Geometry_18()), CubicBezierEasingFunction_1());
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, new CompositionPath(Geometry_19()), CubicBezierEasingFunction_2());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, new CompositionPath(Geometry_20()), CubicBezierEasingFunction_3());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, Path_04(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - - ShapeGroup: Group 1
            // - ShapeGroup: Group 1 Offset:<30, 13>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_03()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_06(), StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, Path_06(), HoldThenStepEasingFunction());
                // Frame 9.
                result.InsertKeyFrame(0.321428567F, new CompositionPath(Geometry_22()), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new CompositionPath(Geometry_23()), CubicBezierEasingFunction_0());
                // Frame 13.
                result.InsertKeyFrame(0.464285702F, Path_07(), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, Path_07(), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, new CompositionPath(Geometry_25()), CubicBezierEasingFunction_1());
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, new CompositionPath(Geometry_26()), CubicBezierEasingFunction_2());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, new CompositionPath(Geometry_27()), CubicBezierEasingFunction_3());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, Path_06(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: mouth Offset:<24, 38.624>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_04()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_08(), StepThenHoldEasingFunction());
                // Frame 4.
                result.InsertKeyFrame(0.142857149F, Path_08(), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, Path_09(), CubicBezierEasingFunction_0());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, Path_10(), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, Path_10(), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.821428597F, Path_09(), CubicBezierEasingFunction_0());
                // Frame 24.
                result.InsertKeyFrame(0.857142866F, Path_08(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: Group 1
            // Path 2+Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_05()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_11(), StepThenHoldEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, Path_11(), HoldThenStepEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, Path_12(), CubicBezierEasingFunction_0());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, Path_13(), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, Path_14(), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, Path_14(), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, Path_13(), CubicBezierEasingFunction_0());
                // Frame 24.
                result.InsertKeyFrame(0.857142866F, Path_12(), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, Path_11(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - ShapeGroup: Group 2 Offset:<24, 36>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_06()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_15(), StepThenHoldEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, Path_15(), HoldThenStepEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, Path_16(), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, Path_16(), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.821428597F, Path_15(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: whiskers Offset:<-24, -32.534>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_07()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_17(), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, Path_17(), HoldThenStepEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, Path_17(), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, Path_18(), CubicBezierEasingFunction_0());
                // Frame 12.
                result.InsertKeyFrame(0.428571433F, Path_17(), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, Path_17(), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, Path_18(), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, Path_17(), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, Path_17(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: whiskers Offset:<-24, -32.534>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_08()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_19(), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, Path_19(), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, Path_20(), CubicBezierEasingFunction_0());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, Path_19(), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, Path_21(), CubicBezierEasingFunction_0());
                // Frame 12.
                result.InsertKeyFrame(0.428571433F, Path_19(), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, Path_19(), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, Path_21(), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, Path_19(), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.821428597F, Path_20(), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, Path_19(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: whiskers Offset:<-24, -32.534>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_09()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_22(), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, Path_22(), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, Path_23(), CubicBezierEasingFunction_0());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, Path_22(), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, Path_24(), CubicBezierEasingFunction_0());
                // Frame 12.
                result.InsertKeyFrame(0.428571433F, Path_22(), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, Path_22(), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, Path_24(), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, Path_22(), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.821428597F, Path_23(), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, Path_22(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: whiskers Offset:<-24, -32.534>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_10()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_25(), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, Path_25(), HoldThenStepEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, Path_25(), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, Path_26(), CubicBezierEasingFunction_0());
                // Frame 12.
                result.InsertKeyFrame(0.428571433F, Path_25(), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, Path_25(), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, Path_26(), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, Path_25(), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, Path_25(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: whiskers Offset:<-24, -32.534>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_11()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_27(), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, Path_27(), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, Path_28(), CubicBezierEasingFunction_0());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, Path_27(), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, Path_29(), CubicBezierEasingFunction_0());
                // Frame 12.
                result.InsertKeyFrame(0.428571433F, Path_27(), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, Path_27(), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, Path_29(), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, Path_27(), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.821428597F, Path_28(), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, Path_27(), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: whiskers Offset:<-24, -32.534>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_12()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_30(), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, Path_30(), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, Path_31(), CubicBezierEasingFunction_0());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, Path_30(), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, Path_32(), CubicBezierEasingFunction_0());
                // Frame 12.
                result.InsertKeyFrame(0.428571433F, Path_30(), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, Path_30(), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, Path_32(), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, Path_30(), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.821428597F, Path_31(), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, Path_30(), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: Group 2
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, 0F, HoldThenStepEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, 6F, CubicBezierEasingFunction_0());
                // Frame 9.
                result.InsertKeyFrame(0.321428567F, -20F, CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, -15F, CubicBezierEasingFunction_4());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, -15F, CubicBezierEasingFunction_4());
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, -20F, CubicBezierEasingFunction_4());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, 6F, CubicBezierEasingFunction_4());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, 0F, CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: Group 1
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, 0F, HoldThenStepEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, -6F, CubicBezierEasingFunction_0());
                // Frame 9.
                result.InsertKeyFrame(0.321428567F, 20F, CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, 15F, CubicBezierEasingFunction_4());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, 15F, CubicBezierEasingFunction_4());
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, 20F, CubicBezierEasingFunction_4());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, -6F, CubicBezierEasingFunction_4());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, 0F, CubicBezierEasingFunction_0());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 2
                shapes.Add(ContainerShape_0());
                // ShapeGroup: Group 1
                shapes.Add(ContainerShape_1());
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_04());
                // Transforms: jowls
                shapes.Add(SpriteShape_05());
                shapes.Add(ContainerShape_2());
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_07());
                shapes.Add(ContainerShape_3());
                shapes.Add(ContainerShape_4());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                if (_offsetVector2Animation_0 != null) { return _offsetVector2Animation_0; }
                var result = _offsetVector2Animation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(24F, 24F), StepThenHoldEasingFunction());
                // Frame 4.
                result.InsertKeyFrame(0.142857149F, new Vector2(24F, 24F), HoldThenStepEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, new Vector2(24F, 20.625F), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, new Vector2(24F, 20.625F), CubicBezierEasingFunction_5());
                // Frame 24.
                result.InsertKeyFrame(0.857142866F, new Vector2(24F, 24F), CubicBezierEasingFunction_0());
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                if (_offsetVector2Animation_1 != null) { return _offsetVector2Animation_1; }
                var result = _offsetVector2Animation_1 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 4.
                result.InsertKeyFrame(0.142857149F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, new Vector2(0F, -1.81200004F), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, new Vector2(0F, -1.81200004F), CubicBezierEasingFunction_5());
                // Frame 24.
                result.InsertKeyFrame(0.857142866F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation()
            {
                // Frame 0.
                if (_scaleVector2Animation != null) { return _scaleVector2Animation; }
                var result = _scaleVector2Animation = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, new Vector2(0.899999976F, 1.10000002F), CubicBezierEasingFunction_0());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, new Vector2(1.10000002F, 0.899999976F), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, new Vector2(1.10000002F, 0.899999976F), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.821428597F, new Vector2(0.899999976F, 1.10000002F), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            internal Kawaii_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(48F, 48F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_0.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_0(), AnimationController_0());
                _containerShape_1.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_1(), AnimationController_0());
                _containerShape_2.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _containerShape_3.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _containerShape_4.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
                _pathGeometry_00.StartAnimation("Path", PathKeyFrameAnimation_00(), AnimationController_0());
                _pathGeometry_01.StartAnimation("Path", PathKeyFrameAnimation_01(), AnimationController_0());
                _pathGeometry_02.StartAnimation("Path", PathKeyFrameAnimation_02(), AnimationController_0());
                _pathGeometry_03.StartAnimation("Path", PathKeyFrameAnimation_03(), AnimationController_0());
                _pathGeometry_06.StartAnimation("Path", PathKeyFrameAnimation_04(), AnimationController_0());
                _pathGeometry_07.StartAnimation("Path", PathKeyFrameAnimation_05(), AnimationController_0());
                _pathGeometry_08.StartAnimation("Path", PathKeyFrameAnimation_06(), AnimationController_0());
                _pathGeometry_10.StartAnimation("Path", PathKeyFrameAnimation_07(), AnimationController_0());
                _pathGeometry_11.StartAnimation("Path", PathKeyFrameAnimation_08(), AnimationController_0());
                _pathGeometry_12.StartAnimation("Path", PathKeyFrameAnimation_09(), AnimationController_0());
                _pathGeometry_13.StartAnimation("Path", PathKeyFrameAnimation_10(), AnimationController_0());
                _pathGeometry_14.StartAnimation("Path", PathKeyFrameAnimation_11(), AnimationController_0());
                _pathGeometry_15.StartAnimation("Path", PathKeyFrameAnimation_12(), AnimationController_0());
                _spriteShape_04.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
                _spriteShape_05.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _spriteShape_07.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _containerShape_0.StopAnimation("RotationAngleInDegrees");
                _containerShape_1.StopAnimation("RotationAngleInDegrees");
                _containerShape_2.StopAnimation("Offset");
                _containerShape_3.StopAnimation("Offset");
                _containerShape_4.StopAnimation("Scale");
                _pathGeometry_00.StopAnimation("Path");
                _pathGeometry_01.StopAnimation("Path");
                _pathGeometry_02.StopAnimation("Path");
                _pathGeometry_03.StopAnimation("Path");
                _pathGeometry_06.StopAnimation("Path");
                _pathGeometry_07.StopAnimation("Path");
                _pathGeometry_08.StopAnimation("Path");
                _pathGeometry_10.StopAnimation("Path");
                _pathGeometry_11.StopAnimation("Path");
                _pathGeometry_12.StopAnimation("Path");
                _pathGeometry_13.StopAnimation("Path");
                _pathGeometry_14.StopAnimation("Path");
                _pathGeometry_15.StopAnimation("Path");
                _spriteShape_04.StopAnimation("Scale");
                _spriteShape_05.StopAnimation("Offset");
                _spriteShape_07.StopAnimation("Offset");
            }

        }
    }
}
