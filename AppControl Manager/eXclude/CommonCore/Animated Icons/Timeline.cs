//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.1.240821.1+077322fa26
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile Timeline.json
//       
//       Input file:
//           Timeline.json (183578 bytes created 17:10+02:00 Nov 17 2024)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   196 |
// |--------------------------+-------|
// | Expression animators     |     1 |
// | KeyFrame animators       |    16 |
// | Reference parameters     |     1 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     2 |
// |--------------------------+-------|
// | ContainerVisuals         |     9 |
// | ShapeVisuals             |     9 |
// |--------------------------+-------|
// | ContainerShapes          |    10 |
// | CompositionSpriteShapes  |    17 |
// |--------------------------+-------|
// | Brushes                  |    15 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     8 |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        timeline
    // Frame rate:  24 fps
    // Frame count: 28
    // Duration:    1166.7 mS
    // _____________________________________________________________________________________________
    // |           Marker           |           Constant           | Frame |   mS   |   Progress   |
    // |____________________________|______________________________|_______|________|______________|
    // | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
    // | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
    // | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
    // | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
    // ---------------------------------------------------------------------------------------------
    sealed partial class Timeline
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 1.167 seconds.
        internal const long c_durationTicks = 11666666;

        // Marker: NormalToPressed_Start.
        internal const float M_NormalToPressed_Start = 0F;

        // Marker: NormalToPressed_End.
        internal const float M_NormalToPressed_End = 0.323214293F;

        // Marker: PointerOverToPressed_Start.
        internal const float M_PointerOverToPressed_Start = 0.323214293F;

        // Marker: PointerOverToPressed_End.
        internal const float M_PointerOverToPressed_End = 0.680357158F;

        // Marker: PressedToNormal_Start.
        internal const float M_PressedToNormal_Start = 0.716071427F;

        // Marker: PressedToNormal_End.
        internal const float M_PressedToNormal_End = 1F;

        // Marker: PressedToPointerOver_Start.
        internal const float M_PressedToPointerOver_Start = 1F;

        // Marker: PressedToPointerOver_End.
        internal const float M_PressedToPointerOver_End = 1F;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new Timeline_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 28d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 24d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(11666666);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 28d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "NormalToPressed_Start", 0d },
                { "NormalToPressed_End", 0.323214285714286 },
                { "PointerOverToPressed_Start", 0.323214285714286 },
                { "PointerOverToPressed_End", 0.680357142857143 },
                { "PressedToNormal_Start", 0.716071428571429 },
                { "PressedToNormal_End", 1d },
                { "PressedToPointerOver_Start", 1d },
                { "PressedToPointerOver_End", 1d },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed partial class Timeline_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 11666666;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CompositionColorBrush _colorBrush_AlmostBlueViolet_FF6C18FF;
            CompositionColorBrush _colorBrush_AlmostMediumBlue_FF2100C4;
            CompositionColorBrush _colorBrush_AlmostTurquoise_FF3CD9EB;
            CompositionContainerShape _containerShape_0;
            CompositionContainerShape _containerShape_1;
            CompositionContainerShape _containerShape_2;
            CompositionContainerShape _containerShape_3;
            CompositionContainerShape _containerShape_4;
            CompositionContainerShape _containerShape_5;
            CompositionContainerShape _containerShape_6;
            CompositionContainerShape _containerShape_7;
            CompositionContainerShape _containerShape_8;
            CompositionContainerShape _containerShape_9;
            CompositionEffectFactory _effectFactory;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPathGeometry _pathGeometry_0;
            CompositionPathGeometry _pathGeometry_1;
            CompositionPathGeometry _pathGeometry_2;
            CompositionPathGeometry _pathGeometry_3;
            CompositionPathGeometry _pathGeometry_4;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation_0;
            Vector2KeyFrameAnimation _offsetVector2Animation_1;
            Vector2KeyFrameAnimation _scaleVector2Animation_0;
            Vector2KeyFrameAnimation _scaleVector2Animation_1;
            Vector2KeyFrameAnimation _scaleVector2Animation_2;
            Vector2KeyFrameAnimation _scaleVector2Animation_3;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-2F, -19F));
                    builder.AddLine(new Vector2(2F, -19F));
                    builder.AddLine(new Vector2(2F, 19F));
                    builder.AddLine(new Vector2(-2F, 19F));
                    builder.AddLine(new Vector2(-2F, -19F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -4F));
                    builder.AddCubicBezier(new Vector2(2.20900011F, -4F), new Vector2(4F, -2.20900011F), new Vector2(4F, 0F));
                    builder.AddCubicBezier(new Vector2(4F, 2.20900011F), new Vector2(2.20900011F, 4F), new Vector2(0F, 4F));
                    builder.AddCubicBezier(new Vector2(-2.20900011F, 4F), new Vector2(-4F, 2.20900011F), new Vector2(-4F, 0F));
                    builder.AddCubicBezier(new Vector2(-4F, -2.20900011F), new Vector2(-2.20900011F, -4F), new Vector2(0F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-5.55000019F, -5F));
                    builder.AddLine(new Vector2(-10.4499998F, 0F));
                    builder.AddLine(new Vector2(-5.55000019F, 5F));
                    builder.AddLine(new Vector2(10.4499998F, 5F));
                    builder.AddLine(new Vector2(10.4499998F, -5F));
                    builder.AddLine(new Vector2(-5.55000019F, -5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-9.05000019F, -5F));
                    builder.AddCubicBezier(new Vector2(-9.05000019F, -5F), new Vector2(-13.9499998F, 0F), new Vector2(-13.9499998F, 0F));
                    builder.AddCubicBezier(new Vector2(-13.9499998F, 0F), new Vector2(-9.05000019F, 5F), new Vector2(-9.05000019F, 5F));
                    builder.AddCubicBezier(new Vector2(-9.05000019F, 5F), new Vector2(13.9499998F, 5F), new Vector2(13.9499998F, 5F));
                    builder.AddCubicBezier(new Vector2(13.9499998F, 5F), new Vector2(13.9499998F, -5F), new Vector2(13.9499998F, -5F));
                    builder.AddCubicBezier(new Vector2(13.9499998F, -5F), new Vector2(-9.05000019F, -5F), new Vector2(-9.05000019F, -5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - Transforms: arrow 2
            // - Path
            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-9.05000019F, -5F));
                    builder.AddCubicBezier(new Vector2(-9.05000019F, -5F), new Vector2(-13.9499998F, 0F), new Vector2(-13.9499998F, 0F));
                    builder.AddCubicBezier(new Vector2(-13.9499998F, 0F), new Vector2(-9.05000019F, 5F), new Vector2(-9.05000019F, 5F));
                    builder.AddCubicBezier(new Vector2(-9.05000019F, 5F), new Vector2(6.88700008F, 5F), new Vector2(6.88700008F, 5F));
                    builder.AddCubicBezier(new Vector2(6.88700008F, 5F), new Vector2(6.88700008F, -5F), new Vector2(6.88700008F, -5F));
                    builder.AddCubicBezier(new Vector2(6.88700008F, -5F), new Vector2(-9.05000019F, -5F), new Vector2(-9.05000019F, -5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_5()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-5.55000019F, -5F));
                    builder.AddCubicBezier(new Vector2(-5.55000019F, -5F), new Vector2(-10.4499998F, 0F), new Vector2(-10.4499998F, 0F));
                    builder.AddCubicBezier(new Vector2(-10.4499998F, 0F), new Vector2(-5.55000019F, 5F), new Vector2(-5.55000019F, 5F));
                    builder.AddCubicBezier(new Vector2(-5.55000019F, 5F), new Vector2(10.4499998F, 5F), new Vector2(10.4499998F, 5F));
                    builder.AddCubicBezier(new Vector2(10.4499998F, 5F), new Vector2(10.4499998F, -5F), new Vector2(10.4499998F, -5F));
                    builder.AddCubicBezier(new Vector2(10.4499998F, -5F), new Vector2(-5.55000019F, -5F), new Vector2(-5.55000019F, -5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - Transforms: arrow 3
            // - Path
            CanvasGeometry Geometry_6()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-5.55000019F, -5F));
                    builder.AddCubicBezier(new Vector2(-5.55000019F, -5F), new Vector2(-10.4499998F, 0F), new Vector2(-10.4499998F, 0F));
                    builder.AddCubicBezier(new Vector2(-10.4499998F, 0F), new Vector2(-5.55000019F, 5F), new Vector2(-5.55000019F, 5F));
                    builder.AddCubicBezier(new Vector2(-5.55000019F, 5F), new Vector2(17.4500008F, 4.98000002F), new Vector2(17.4500008F, 4.98000002F));
                    builder.AddCubicBezier(new Vector2(17.4500008F, 4.98000002F), new Vector2(17.4500008F, -5.01999998F), new Vector2(17.4500008F, -5.01999998F));
                    builder.AddCubicBezier(new Vector2(17.4500008F, -5.01999998F), new Vector2(-5.55000019F, -5F), new Vector2(-5.55000019F, -5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostBlueViolet_FF6C18FF()
            {
                return (_colorBrush_AlmostBlueViolet_FF6C18FF == null)
                    ? _colorBrush_AlmostBlueViolet_FF6C18FF = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x6C, 0x18, 0xFF))
                    : _colorBrush_AlmostBlueViolet_FF6C18FF;
            }

            CompositionColorBrush ColorBrush_AlmostMediumBlue_FF2100C4()
            {
                return (_colorBrush_AlmostMediumBlue_FF2100C4 == null)
                    ? _colorBrush_AlmostMediumBlue_FF2100C4 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x21, 0x00, 0xC4))
                    : _colorBrush_AlmostMediumBlue_FF2100C4;
            }

            CompositionColorBrush ColorBrush_AlmostTurquoise_FF3CD9EB()
            {
                return (_colorBrush_AlmostTurquoise_FF3CD9EB == null)
                    ? _colorBrush_AlmostTurquoise_FF3CD9EB = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x3C, 0xD9, 0xEB))
                    : _colorBrush_AlmostTurquoise_FF3CD9EB;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_0()
            {
                if (_containerShape_0 != null) { return _containerShape_0; }
                var result = _containerShape_0 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(9F, 11F);
                // ShapeGroup: Group 7 Offset:<9, 11>
                result.Shapes.Add(SpriteShape_01());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_1()
            {
                if (_containerShape_1 != null) { return _containerShape_1; }
                var result = _containerShape_1 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(15.1000004F, 11F);
                // ShapeGroup: Group 2 Offset:<25.55, 11>
                result.Shapes.Add(SpriteShape_02());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_2()
            {
                if (_containerShape_2 != null) { return _containerShape_2; }
                var result = _containerShape_2 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(9F, 24F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 9 Offset:<9, 24>
                shapes.Add(SpriteShape_03());
                // Transforms: arrow 2
                shapes.Add(SpriteShape_04());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_3()
            {
                if (_containerShape_3 != null) { return _containerShape_3; }
                var result = _containerShape_3 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(9F, 37F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 8 Offset:<9, 37>
                shapes.Add(SpriteShape_05());
                // Transforms: arrow 3
                shapes.Add(SpriteShape_06());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_4()
            {
                if (_containerShape_4 != null) { return _containerShape_4; }
                var result = _containerShape_4 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(9F, 37F);
                // ShapeGroup: Group 8 Offset:<9, 37>
                result.Shapes.Add(SpriteShape_07());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_5()
            {
                if (_containerShape_5 != null) { return _containerShape_5; }
                var result = _containerShape_5 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(15.1000004F, 37F);
                // ShapeGroup: Group 1 Offset:<25.55, 37>
                result.Shapes.Add(SpriteShape_08());
                return result;
            }

            // Shape tree root for layer: mask
            CompositionContainerShape ContainerShape_6()
            {
                if (_containerShape_6 != null) { return _containerShape_6; }
                var result = _containerShape_6 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(9F, 11F);
                // ShapeGroup: Group 7 Offset:<9, 11>
                result.Shapes.Add(SpriteShape_10());
                return result;
            }

            // Shape tree root for layer: mask 2
            CompositionContainerShape ContainerShape_7()
            {
                if (_containerShape_7 != null) { return _containerShape_7; }
                var result = _containerShape_7 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(9F, 24F);
                // ShapeGroup: Group 9 Offset:<9, 24>
                result.Shapes.Add(SpriteShape_12());
                return result;
            }

            // Shape tree root for layer: mask 3
            CompositionContainerShape ContainerShape_8()
            {
                if (_containerShape_8 != null) { return _containerShape_8; }
                var result = _containerShape_8 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(9F, 37F);
                // ShapeGroup: Group 8 Offset:<9, 37>
                result.Shapes.Add(SpriteShape_14());
                return result;
            }

            // Shape tree root for layer: mask 4
            CompositionContainerShape ContainerShape_9()
            {
                if (_containerShape_9 != null) { return _containerShape_9; }
                var result = _containerShape_9 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(9F, 37F);
                // ShapeGroup: Group 8 Offset:<9, 37>
                result.Shapes.Add(SpriteShape_16());
                return result;
            }

            CompositionEffectBrush EffectBrush_0()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            CompositionEffectBrush EffectBrush_1()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_2());
                result.SetSourceParameter("source", SurfaceBrush_3());
                return result;
            }

            CompositionEffectBrush EffectBrush_2()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_4());
                result.SetSourceParameter("source", SurfaceBrush_5());
                return result;
            }

            CompositionEffectBrush EffectBrush_3()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_6());
                result.SetSourceParameter("source", SurfaceBrush_7());
                return result;
            }

            CompositionEffectFactory EffectFactory()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                if (_effectFactory != null) { return _effectFactory; }
                var result = _effectFactory = _c.CreateEffectFactory(compositeEffect);
                return result;
            }

            CompositionPath Path_0()
            {
                if (_path_0 != null) { return _path_0; }
                var result = _path_0 = new CompositionPath(Geometry_3());
                return result;
            }

            CompositionPath Path_1()
            {
                if (_path_1 != null) { return _path_1; }
                var result = _path_1 = new CompositionPath(Geometry_5());
                return result;
            }

            CompositionPathGeometry PathGeometry_0()
            {
                return (_pathGeometry_0 == null)
                    ? _pathGeometry_0 = _c.CreatePathGeometry(new CompositionPath(Geometry_0()))
                    : _pathGeometry_0;
            }

            CompositionPathGeometry PathGeometry_1()
            {
                return (_pathGeometry_1 == null)
                    ? _pathGeometry_1 = _c.CreatePathGeometry(new CompositionPath(Geometry_1()))
                    : _pathGeometry_1;
            }

            CompositionPathGeometry PathGeometry_2()
            {
                return (_pathGeometry_2 == null)
                    ? _pathGeometry_2 = _c.CreatePathGeometry(new CompositionPath(Geometry_2()))
                    : _pathGeometry_2;
            }

            // - - Layer aggregator
            // Transforms: arrow 2
            CompositionPathGeometry PathGeometry_3()
            {
                if (_pathGeometry_3 != null) { return _pathGeometry_3; }
                var result = _pathGeometry_3 = _c.CreatePathGeometry();
                return result;
            }

            // - - Layer aggregator
            // Transforms: arrow 3
            CompositionPathGeometry PathGeometry_4()
            {
                if (_pathGeometry_4 != null) { return _pathGeometry_4; }
                var result = _pathGeometry_4 = _c.CreatePathGeometry();
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<9, 24>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 24F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<9, 11>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 11F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<25.55, 11>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 25.5499992F, 11F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<9, 24>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 24F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<29.05, 24>
                var geometry = PathGeometry_3();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 29.0499992F, 24F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<9, 37>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 37F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<25.55, 37>
                var geometry = PathGeometry_4();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 25.5499992F, 37F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<9, 37>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 37F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<25.55, 37>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 25.5499992F, 37F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // Shape tree root for layer: overlay
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<9, 24>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 24F), ColorBrush_AlmostMediumBlue_FF2100C4());;
                return result;
            }

            // - Shape tree root for layer: mask
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<9, 11>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 11F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // Shape tree root for layer: overlay 2
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<9, 24>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 24F), ColorBrush_AlmostMediumBlue_FF2100C4());;
                return result;
            }

            // - Shape tree root for layer: mask 2
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<9, 24>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 24F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // Shape tree root for layer: overlay 3
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<9, 24>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 24F), ColorBrush_AlmostMediumBlue_FF2100C4());;
                return result;
            }

            // - Shape tree root for layer: mask 3
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                // Offset:<9, 37>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 37F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // Shape tree root for layer: overlay 4
            // Path 1
            CompositionSpriteShape SpriteShape_15()
            {
                // Offset:<9, 24>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 24F), ColorBrush_AlmostMediumBlue_FF2100C4());;
                return result;
            }

            // - Shape tree root for layer: mask 4
            // Path 1
            CompositionSpriteShape SpriteShape_16()
            {
                // Offset:<9, 37>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 9F, 37F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionSurfaceBrush SurfaceBrush_2()
            {
                return _c.CreateSurfaceBrush(VisualSurface_2());
            }

            CompositionSurfaceBrush SurfaceBrush_3()
            {
                return _c.CreateSurfaceBrush(VisualSurface_3());
            }

            CompositionSurfaceBrush SurfaceBrush_4()
            {
                return _c.CreateSurfaceBrush(VisualSurface_4());
            }

            CompositionSurfaceBrush SurfaceBrush_5()
            {
                return _c.CreateSurfaceBrush(VisualSurface_5());
            }

            CompositionSurfaceBrush SurfaceBrush_6()
            {
                return _c.CreateSurfaceBrush(VisualSurface_6());
            }

            CompositionSurfaceBrush SurfaceBrush_7()
            {
                return _c.CreateSurfaceBrush(VisualSurface_7());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_2()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_2();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_3()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_3();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_4()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_4();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_5()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_5();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_6()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_6();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_7()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_7();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: overlay
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask
                result.Children.InsertAtTop(ShapeVisual_2());
                return result;
            }

            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: overlay 2
                result.Children.InsertAtTop(ShapeVisual_3());
                return result;
            }

            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 2
                result.Children.InsertAtTop(ShapeVisual_4());
                return result;
            }

            ContainerVisual ContainerVisual_4()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: overlay 3
                result.Children.InsertAtTop(ShapeVisual_5());
                return result;
            }

            ContainerVisual ContainerVisual_5()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 3
                result.Children.InsertAtTop(ShapeVisual_6());
                return result;
            }

            ContainerVisual ContainerVisual_6()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: overlay 4
                result.Children.InsertAtTop(ShapeVisual_7());
                return result;
            }

            ContainerVisual ContainerVisual_7()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 4
                result.Children.InsertAtTop(ShapeVisual_8());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_0());
                children.InsertAtTop(SpriteVisual_0());
                children.InsertAtTop(SpriteVisual_1());
                children.InsertAtTop(SpriteVisual_2());
                children.InsertAtTop(SpriteVisual_3());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return (_cubicBezierEasingFunction_1 == null)
                    ? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.833000004F, 1F))
                    : _cubicBezierEasingFunction_1;
            }

            // - - - Layer aggregator
            // - Transforms: arrow 2
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, Path_0(), HoldThenStepEasingFunction());
                // Frame 15.
                result.InsertKeyFrame(0.535714269F, new CompositionPath(Geometry_4()), CubicBezierEasingFunction_0());
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: arrow 3
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_1(), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, Path_1(), HoldThenStepEasingFunction());
                // Frame 15.
                result.InsertKeyFrame(0.535714269F, new CompositionPath(Geometry_6()), CubicBezierEasingFunction_0());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 10 Offset:<9, 24>
                shapes.Add(SpriteShape_00());
                shapes.Add(ContainerShape_0());
                shapes.Add(ContainerShape_1());
                shapes.Add(ContainerShape_2());
                shapes.Add(ContainerShape_3());
                shapes.Add(ContainerShape_4());
                shapes.Add(ContainerShape_5());
                return result;
            }

            // Shape tree root for layer: overlay
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 10 Offset:<9, 24>
                result.Shapes.Add(SpriteShape_09());
                return result;
            }

            // Shape tree root for layer: mask
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_6());
                return result;
            }

            // Shape tree root for layer: overlay 2
            ShapeVisual ShapeVisual_3()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 10 Offset:<9, 24>
                result.Shapes.Add(SpriteShape_11());
                return result;
            }

            // Shape tree root for layer: mask 2
            ShapeVisual ShapeVisual_4()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_7());
                return result;
            }

            // Shape tree root for layer: overlay 3
            ShapeVisual ShapeVisual_5()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 10 Offset:<9, 24>
                result.Shapes.Add(SpriteShape_13());
                return result;
            }

            // Shape tree root for layer: mask 3
            ShapeVisual ShapeVisual_6()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_8());
                return result;
            }

            // Shape tree root for layer: overlay 4
            ShapeVisual ShapeVisual_7()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 10 Offset:<9, 24>
                result.Shapes.Add(SpriteShape_15());
                return result;
            }

            // Shape tree root for layer: mask 4
            ShapeVisual ShapeVisual_8()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_9());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_0();
                return result;
            }

            SpriteVisual SpriteVisual_1()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_1();
                return result;
            }

            SpriteVisual SpriteVisual_2()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_2();
                return result;
            }

            SpriteVisual SpriteVisual_3()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_3();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                if (_offsetVector2Animation_0 != null) { return _offsetVector2Animation_0; }
                var result = _offsetVector2Animation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 14.
                result.InsertKeyFrame(0.5F, new Vector2(0F, -13F), _c.CreateCubicBezierEasingFunction(new Vector2(0.699000001F, 0F), new Vector2(0.666999996F, 1F)));
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                if (_offsetVector2Animation_1 != null) { return _offsetVector2Animation_1; }
                var result = _offsetVector2Animation_1 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, new Vector2(0F, -13F), _c.CreateCubicBezierEasingFunction(new Vector2(0.691999972F, 0F), new Vector2(0.666999996F, 1F)));
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                // Frame 0.
                if (_scaleVector2Animation_0 != null) { return _scaleVector2Animation_0; }
                var result = _scaleVector2Animation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, new Vector2(1.10000002F, 1.10000002F), CubicBezierEasingFunction_0());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                // Frame 0.
                if (_scaleVector2Animation_1 != null) { return _scaleVector2Animation_1; }
                var result = _scaleVector2Animation_1 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.285714298F, new Vector2(1.10000002F, 1.10000002F), CubicBezierEasingFunction_0());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(1.10000002F, 1.10000002F), _c.CreateCubicBezierEasingFunction(new Vector2(0.296999991F, 0F), new Vector2(0.658999979F, 1F)));
                // Frame 14.
                result.InsertKeyFrame(0.5F, new Vector2(0.800000012F, 0.800000012F), _c.CreateCubicBezierEasingFunction(new Vector2(0.425000012F, 0F), new Vector2(0.814999998F, 1F)));
                // Frame 18.
                result.InsertKeyFrame(0.642857134F, new Vector2(1F, 1F), CubicBezierEasingFunction_1());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_2()
            {
                // Frame 0.
                if (_scaleVector2Animation_2 != null) { return _scaleVector2Animation_2; }
                var result = _scaleVector2Animation_2 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.25F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new Vector2(1.10000002F, 1.10000002F), CubicBezierEasingFunction_0());
                // Frame 13.
                result.InsertKeyFrame(0.464285702F, new Vector2(1.10000002F, 1.10000002F), CubicBezierEasingFunction_1());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, new Vector2(0.800000012F, 0.800000012F), CubicBezierEasingFunction_1());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, new Vector2(1F, 1F), CubicBezierEasingFunction_1());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_3()
            {
                // Frame 0.
                if (_scaleVector2Animation_3 != null) { return _scaleVector2Animation_3; }
                var result = _scaleVector2Animation_3 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 16.
                result.InsertKeyFrame(0.571428597F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, new Vector2(1.10000002F, 1.10000002F), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 1F)));
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, new Vector2(1F, 1F), CubicBezierEasingFunction_1());
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_4()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.714285731F, new Vector2(1.10000002F, 1.10000002F), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.821428597F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
                return result;
            }

            internal Timeline_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(48F, 48F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_0.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _containerShape_1.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _containerShape_2.StartAnimation("Scale", ScaleVector2Animation_1(), AnimationController_0());
                _containerShape_2.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _containerShape_3.StartAnimation("Scale", ScaleVector2Animation_2(), AnimationController_0());
                _containerShape_3.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _containerShape_4.StartAnimation("Scale", ScaleVector2Animation_3(), AnimationController_0());
                _containerShape_5.StartAnimation("Scale", ScaleVector2Animation_4(), AnimationController_0());
                _containerShape_6.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _containerShape_7.StartAnimation("Scale", ScaleVector2Animation_1(), AnimationController_0());
                _containerShape_7.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _containerShape_8.StartAnimation("Scale", ScaleVector2Animation_2(), AnimationController_0());
                _containerShape_8.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _containerShape_9.StartAnimation("Scale", ScaleVector2Animation_3(), AnimationController_0());
                _pathGeometry_3.StartAnimation("Path", PathKeyFrameAnimation_0(), AnimationController_0());
                _pathGeometry_4.StartAnimation("Path", PathKeyFrameAnimation_1(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _containerShape_0.StopAnimation("Scale");
                _containerShape_1.StopAnimation("Scale");
                _containerShape_2.StopAnimation("Scale");
                _containerShape_2.StopAnimation("Offset");
                _containerShape_3.StopAnimation("Scale");
                _containerShape_3.StopAnimation("Offset");
                _containerShape_4.StopAnimation("Scale");
                _containerShape_5.StopAnimation("Scale");
                _containerShape_6.StopAnimation("Scale");
                _containerShape_7.StopAnimation("Scale");
                _containerShape_7.StopAnimation("Offset");
                _containerShape_8.StopAnimation("Scale");
                _containerShape_8.StopAnimation("Offset");
                _containerShape_9.StopAnimation("Scale");
                _pathGeometry_3.StopAnimation("Path");
                _pathGeometry_4.StopAnimation("Path");
            }

        }
    }
}
