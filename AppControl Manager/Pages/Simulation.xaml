<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.Simulation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:localbase="using:AppControlManager"
    xmlns:AppControlManager="using:AppControlManager"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:others="using:AppControlManager.Others"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:CommunityToolkit.WinUI.Behaviors"
    x:Name="SimulationXAML"
    mc:Ignorable="d">

    <Grid TabFocusNavigation="Cycle">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <controls:WrapPanel Grid.Row="0" VerticalSpacing="4" HorizontalSpacing="4" Orientation="Vertical" Margin="6,0,6,10">

            <TextBlock TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}">
                <Span>
                    Perform <Italic>App Control for Business</Italic>
                        <Run Foreground="{ThemeResource SystemAccentColor}">Simulation</Run>
                    by selecting files or folders, and a XML policy file, then use the
                    <Underline><Bold>Begin Simulation</Bold></Underline> button to populate the data grid.
                     The results will show you whether the selected files would be allowed or blocked by your App Control policy if it was actually deployed on a system and those files were run.
                </Span>
            </TextBlock>

            <HyperlinkButton x:Uid="GuideButtonAtTop" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Simulation" />

        </controls:WrapPanel>

        <Border
            Grid.Row="1"
            Margin="0,10,0,10"
            Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">
                <!-- Begin Simulation Button -->
                <Button x:Name="BeginSimulationButton" ToolTipService.ToolTip="Start the Simulation using the selected configurations" Style="{StaticResource AccentButtonStyle}" Click="BeginSimulationButton_Click">
                    <StackPanel Orientation="Horizontal">
                        <SymbolIcon Symbol="Play" />
                        <TextBlock Text="Begin Simulation" Margin="5,0,0,0"/>
                    </StackPanel>
                </Button>

                <!-- Select XML File Button -->
                <Button Click="SelectXmlFileButton_Click" x:Name="SelectXmlFileButton"
                 Holding="SelectXmlFileButton_Holding" RightTapped="SelectXmlFileButton_RightTapped" ToolTipService.ToolTip="Browse for the App Control policy XML file">

                    <Button.Flyout>
                        <Flyout x:Name="SelectXmlFileButton_Flyout">

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                <Button x:Uid="ClearButton" Click="SelectXmlFileButton_Flyout_Clear_Click" />

                                <TextBlock x:Uid="ViewSelectedXMLFileTextBlock" TextWrapping="WrapWholeWords" />

                                <TextBox x:Name="SelectXmlFileButton_SelectedFilesTextBox"
                                    TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                    MinWidth="400" IsReadOnly="True" />

                            </controls:WrapPanel>

                        </Flyout>
                    </Button.Flyout>

                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xEC50;" />
                            <TextBlock x:Uid="SelectXMLFileTextBlock" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Button.Content>
                </Button>

                <!-- Select Files Button -->
                <Button Click="SelectFilesButton_Click" x:Name="SelectFilesButton" RightTapped="SelectFilesButton_RightTapped" Holding="SelectFilesButton_Holding" ToolTipService.ToolTip="Browse for files to include in the simulation">

                    <Button.Flyout>
                        <Flyout x:Name="SelectFilesButton_Flyout">

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                <Button x:Uid="ClearButton" Click="SelectFilesButton_Flyout_Clear_Click" />

                                <TextBlock x:Uid="ViewSelectedFilesTextBlock" TextWrapping="WrapWholeWords" />

                                <TextBox x:Name="SelectFilesButton_SelectedFilesTextBox"
                                    TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                    MinWidth="400" IsReadOnly="True" />

                            </controls:WrapPanel>

                        </Flyout>
                    </Button.Flyout>


                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xEC50;" />
                            <TextBlock x:Uid="SelectFilesTextBlock" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Button.Content>
                </Button>

                <!-- Select Folders Button -->
                <Button Click="SelectFoldersButton_Click" x:Name="SelectFoldersButton"
                 Holding="SelectFoldersButton_Holding" RightTapped="SelectFoldersButton_RightTapped" ToolTipService.ToolTip="Browse for a folder to include in the simulation">

                    <Button.Flyout>
                        <Flyout x:Name="SelectFoldersButton_Flyout">

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                <Button x:Uid="ClearButton" Click="SelectFoldersButton_Flyout_Clear_Click" />

                                <TextBlock x:Uid="ViewSelectedFoldersTextBlock" TextWrapping="WrapWholeWords" />

                                <TextBox x:Name="SelectFoldersButton_SelectedFilesTextBox"
                                    TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                    MinWidth="400" IsReadOnly="True" />

                            </controls:WrapPanel>

                        </Flyout>
                    </Button.Flyout>


                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xED25;" />
                            <TextBlock x:Uid="SelectFoldersTextBlock" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Button.Content>
                </Button>


                <DropDownButton Content="Options" ToolTipService.ToolTip="Multiple Extra Options">
                    <DropDownButton.Flyout>

                        <MenuFlyout Placement="Bottom">

                            <!-- Cat Root Paths Button -->
                            <MenuFlyoutItem Text="Cat Root Paths" Click="CatRootPathsButton_Click" ToolTipService.ToolTip="Provide path(s) to directories where security catalog .cat files are located. If not provided, the default path is C:\Windows\System32\CatRoot">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xED25;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutSeparator/>

                            <!-- Toggle Button for No Cat Root Scanning -->
                            <ToggleMenuFlyoutItem IsChecked="True" x:Name="NoCatRootScanningToggle" Text="No Cat Root Scanning" Click="ClearDataButton_Click"  ToolTipService.ToolTip="Will not scan the security catalogs on the system">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xEB95;" />
                                </MenuFlyoutItem.Icon>
                            </ToggleMenuFlyoutItem>

                            <MenuFlyoutSeparator/>

                            <!-- Toggle Button for CSV Output -->
                            <ToggleMenuFlyoutItem x:Name="CSVOutputToggle" Text="Save output to CSV" IsChecked="False" ToolTipService.ToolTip="Exports the output to a CSV file in the AppControlManager directory in the Program Files directory at the end of the simulation job.">
                                <ToggleMenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE9F9;" />
                                </ToggleMenuFlyoutItem.Icon>

                            </ToggleMenuFlyoutItem>

                            <MenuFlyoutSeparator/>

                            <!-- Clear Data Button -->
                            <MenuFlyoutItem Click="ClearDataButton_Click" x:Uid="ClearDataMenuFlyoutItem">
                                <MenuFlyoutItem.Icon>
                                    <SymbolIcon Symbol="Delete" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                        </MenuFlyout>

                    </DropDownButton.Flyout>
                </DropDownButton>

                <Button>
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE8CB;" />
                            <TextBlock Text="Sort" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                    <Button.Flyout>
                        <MenuFlyout>

                            <ToggleMenuFlyoutItem x:Name="SortingDirectionToggle" Text="Descending Sorting" IsChecked="True"/>

                            <MenuFlyoutSeparator/>

                            <MenuFlyoutItem x:Uid="PathHeader" Click="ColumnSortingButton_Path_Click"/>
                            <MenuFlyoutItem x:Uid="SourceHeader" Click="ColumnSortingButton_Source_Click"/>
                            <MenuFlyoutItem x:Uid="IsAuthorizedHeader" Click="ColumnSortingButton_IsAuthorized_Click"/>
                            <MenuFlyoutItem x:Uid="MatchCriteriaHeader" Click="ColumnSortingButton_MatchCriteria_Click"/>
                            <MenuFlyoutItem x:Uid="SpecificFileNameLevelMatchCriteriaHeader" Click="ColumnSortingButton_SpecificFileNameLevelMatchCriteria_Click"/>
                            <MenuFlyoutItem x:Uid="SignerIDHeader" Click="ColumnSortingButton_SignerID_Click"/>
                            <MenuFlyoutItem x:Uid="SignerNameHeader" Click="ColumnSortingButton_SignerName_Click"/>
                            <MenuFlyoutItem x:Uid="SignerCertRootHeader" Click="ColumnSortingButton_SignerCertRoot_Click"/>
                            <MenuFlyoutItem x:Uid="SignerCertPublisherHeader" Click="ColumnSortingButton_SignerCertPublisher_Click"/>
                            <MenuFlyoutItem x:Uid="SignerScopeHeader" Click="ColumnSortingButton_SignerScope_Click"/>
                            <MenuFlyoutItem x:Uid="CertSubjectCNHeader" Click="ColumnSortingButton_CertSubjectCN_Click"/>
                            <MenuFlyoutItem x:Uid="CertIssuerCNHeader" Click="ColumnSortingButton_CertIssuerCN_Click"/>
                            <MenuFlyoutItem x:Uid="CertNotAfterHeader" Click="ColumnSortingButton_CertNotAfter_Click"/>
                            <MenuFlyoutItem x:Uid="CertTBSValueHeader" Click="ColumnSortingButton_CertTBSValue_Click"/>
                            <MenuFlyoutItem x:Uid="FilePathHeader" Click="ColumnSortingButton_FilePath_Click"/>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>


                <!-- Scalability Button with RadialGauge Flyout -->
                <Button x:Name="ScalabilityButton" Content="Scalability" ToolTipService.ToolTip="The number of the concurrent/parallel tasks to use when performing App Control Simulation. By default it uses 2 parallel tasks.">
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <controls:RadialGauge x:Name="ScalabilityRadialGauge"
                                      StepSize="1"
                                      TickSpacing="2"
                                      ScaleWidth="12"
                                      NeedleWidth="5"
                                      NeedleLength="80"
                                      TickLength="8"
                                      TickWidth="0"
                                      ScalePadding="0"
                                      TickPadding="24"
                                      Width="200"
                                      Maximum="120"
                                      Minimum="2"
                                      ValueChanged="ScalabilityRadialGauge_ValueChanged"
                                      ValueStringFormat="N0"/>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <ProgressBar x:Name="SimulationProgressBar" Width="200" Value="0" ToolTipService.ToolTip="The Simulation progress" />

                <TextBox PlaceholderText="Total count of the files"
                         x:Name="TotalCountOfTheFilesTextBox"
                         IsReadOnly="True"
                         VerticalAlignment="Center"
                         VerticalContentAlignment="Center" ToolTipService.ToolTip="The total number of the files that participated in the last Simulation job"/>

                <TextBox x:Name="SearchBox" Width="300" PlaceholderText="Search data..." TextChanged="SearchBox_TextChanged" VerticalAlignment="Center" VerticalContentAlignment="Center" ToolTipService.ToolTip="Search the data, not all fields are included. To perform search in all fields such as hashes, export the results to CSV and then use VS Code." />

            </controls:WrapPanel>
        </Border>


        <ListView x:Name="SimOutputListView"
                Grid.Row="2"
                SelectionMode="Extended"
                ScrollViewer.HorizontalScrollMode="Enabled"
                ScrollViewer.IsHorizontalRailEnabled="True"
                ScrollViewer.HorizontalScrollBarVisibility="Visible"
                ShowsScrollingPlaceholders="True"
                ScrollViewer.VerticalScrollBarVisibility="Visible"
                SelectionChanged="SimOutputListView_SelectionChanged"
                ContainerContentChanging="ListView_ContainerContentChanging">

            <ListView.Header>

                <Border CornerRadius="5" Background="Black">
                    <interactivity:Interaction.Behaviors>
                        <behaviors:StickyHeaderBehavior />
                    </interactivity:Interaction.Behaviors>
                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind ColumnWidth1, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth2, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth3, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth4, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth5, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth6, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth7, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth8, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth9, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth10, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth11, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth12, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth13, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth14, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth15, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Uid="PathHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="0" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SourceHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="1" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="IsAuthorizedHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="2" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="MatchCriteriaHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="3" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SpecificFileNameLevelMatchCriteriaHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="4" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SignerIDHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="5" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SignerNameHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="6" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SignerCertRootHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="7" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SignerCertPublisherHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="8" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SignerScopeHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="9" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="CertSubjectCNHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="10" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="CertIssuerCNHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="11" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="CertNotAfterHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="12" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="CertTBSValueHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="13" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="FilePathHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="14" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                    </Grid>
                </Border>
            </ListView.Header>

            <!-- DataTemplate for ListView items -->
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="others:SimulationOutput">
                    <!-- Setting Background="Transparent" on the Grid makes it hit-test visible, meaning that even areas without any child elements (like empty spaces in the column) will respond to pointer events.  -->
                    <Grid Background="Transparent">
                        <Grid.ContextFlyout>
                            <MenuFlyout>

                                <MenuFlyoutItem Text="Copy Row" Click="ListViewFlyoutMenuCopy_Click">
                                    <MenuFlyoutItem.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="C" Modifiers="Control" Invoked="CtrlC_Invoked"/>
                                    </MenuFlyoutItem.KeyboardAccelerators>
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSubItem Text="Copy Individual Items">
                                    <MenuFlyoutSubItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutSubItem.Icon>

                                    <MenuFlyoutSubItem.Items>

                                        <MenuFlyoutItem x:Uid="PathHeader" Click="CopyPath_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SourceHeader" Click="CopySource_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="IsAuthorizedHeader" Click="CopyIsAuthorized_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="MatchCriteriaHeader" Click="CopyMatchCriteria_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SpecificFileNameLevelMatchCriteriaHeader" Click="CopySpecificFileNameLevelMatch_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignerIDHeader" Click="CopySignerID_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignerNameHeader" Click="CopySignerName_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignerCertRootHeader" Click="CopySignerCertRoot_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignerCertPublisherHeader" Click="CopySignerCertPublisher_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignerScopeHeader" Click="CopySignerScope_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="CertSubjectCNHeader" Click="CopyCertSubjectCN_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="CertIssuerCNHeader" Click="CopyCertIssuerCN_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="CertNotAfterHeader" Click="CopyCertNotAfter_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="CertTBSValueHeader" Click="CopyCertTBSValue_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FilePathHeader" Click="CopyFilePath_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                    </MenuFlyoutSubItem.Items>

                                </MenuFlyoutSubItem>
                            </MenuFlyout>
                        </Grid.ContextFlyout>

                        <Grid.ColumnDefinitions>
                            <!-- Use standard Binding with ElementName to refer back to the page's properties
                                because in here the Data Context is set to FileIdentity so we cannot use x.Bind
                                since a single FileIdentity item can't have the ColumnWidth properties of all of the columns
                                And static properties wouldn't work since more than 1 ListViews might be assigning values to the static values at the same time -->
                            <ColumnDefinition Width="{Binding ColumnWidth1, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth2, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth3, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth4, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth5, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth6, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth7, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth8, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth9, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth10, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth11, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth12, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth13, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth14, ElementName=SimulationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth15, ElementName=SimulationXAML}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Bind Path}" HorizontalAlignment="Left" Grid.Column="0" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind Source}" HorizontalAlignment="Left" Grid.Column="1" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind IsAuthorized}" HorizontalAlignment="Left" Grid.Column="2" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind MatchCriteria}" HorizontalAlignment="Left" Grid.Column="3" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SpecificFileNameLevelMatchCriteria}" HorizontalAlignment="Left" Grid.Column="4" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SignerID}" HorizontalAlignment="Left" Grid.Column="5" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SignerName}" HorizontalAlignment="Left" Grid.Column="6" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SignerCertRoot}" HorizontalAlignment="Left" Grid.Column="7" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SignerCertPublisher}" HorizontalAlignment="Left" Grid.Column="8" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SignerScope}" HorizontalAlignment="Left" Grid.Column="9" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind CertSubjectCN}" HorizontalAlignment="Left" Grid.Column="10" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind CertIssuerCN}" HorizontalAlignment="Left" Grid.Column="11" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind CertNotAfter}" HorizontalAlignment="Left" Grid.Column="12" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind CertTBSValue}" HorizontalAlignment="Left" Grid.Column="13" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind FilePath}" HorizontalAlignment="Left" Grid.Column="14" Margin="0,2,2,2"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

    </Grid>
</Page>
