<?xml version="1.0" encoding="utf-8"?>
<Application
    x:Class="HardenSystemSecurity.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:media="using:CommunityToolkit.WinUI.Media"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:customUI="using:AppControlManager.CustomUIElements"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:local="using:HardenSystemSecurity">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
                <ResourceDictionary Source="/CustomUIElements/HomePageCarousel/OpacityMask.xaml" />
                <ResourceDictionary Source="/CustomUIElements/HomePageCarousel/HeaderTile.xaml" />
                <!-- Other merged dictionaries here -->
            </ResourceDictionary.MergedDictionaries>
            <!-- Other app resources here -->

            <!-- Themed brush -->
            <ResourceDictionary.ThemeDictionaries>
                <!-- Default is used as fallback -->
                <ResourceDictionary x:Key="Default">
                    <SolidColorBrush x:Key="AppOverlayBackgroundBrush" Color="{ThemeResource LayerFillColorDefault}" />
                </ResourceDictionary>

                <ResourceDictionary x:Key="Light">
                    <!-- Light theme -->
                    <SolidColorBrush x:Key="AppOverlayBackgroundBrush" Color="{ThemeResource LayerFillColorDefault}" />
                </ResourceDictionary>

                <ResourceDictionary x:Key="Dark">
                    <!-- Dark theme -->
                    <SolidColorBrush x:Key="AppOverlayBackgroundBrush" Color="{ThemeResource SmokeFillColorDefault}" />
                </ResourceDictionary>

                <ResourceDictionary x:Key="HighContrast">
                    <!-- High Contrast: use system window color to respect accessibility settings -->
                    <SolidColorBrush x:Key="AppOverlayBackgroundBrush" Color="{ThemeResource SystemColorWindowColor}" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>


            <!--  These styles can be referenced to create a consistent SettingsPage layout  -->
            <!--  Spacing between cards  -->
            <x:Double x:Key="SettingsCardSpacing">4</x:Double>
            <!--  Style (inc. the correct spacing) of a section header  -->
            <Style x:Key="SettingsSectionHeaderTextBlockStyle"
                BasedOn="{StaticResource BodyStrongTextBlockStyle}"
                TargetType="TextBlock">
                <Style.Setters>
                    <Setter Property="Margin" Value="1,30,0,6" />
                </Style.Setters>
            </Style>

            <Style x:Key="GridCardStyle" TargetType="Border">
                <Style.Setters>
                    <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
                    <Setter Property="CornerRadius" Value="{StaticResource OverlayCornerRadius}" />
                </Style.Setters>
            </Style>


            <!-- The style for the ListView headers buttons -->
            <Style x:Key="ListViewHeaderButton" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                <Style.Setters>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Padding" Value="5"/>
                </Style.Setters>
            </Style>


            <!-- The style for the ListView cells TextBlocks -->
            <Style x:Key="ListViewCellTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Margin" Value="0,2,2,2" />
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>


            <Style x:Key="PanelStyle" TargetType="StackPanel">
                <Setter Property="CornerRadius" Value="8" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0,8,0,8" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Spacing" Value="8" />
                <Setter Property="animations:Implicit.HideAnimations" Value="{StaticResource ShowTransitions}" />
            </Style>


            <animations:ImplicitAnimationSet x:Name="ShowTransitions">
                <animations:OffsetAnimation EasingMode="EaseOut" From="0,24,0" To="0" Duration="0:0:0.4" />
                <animations:OpacityAnimation EasingMode="EaseOut" From="0" To="1" Duration="0:0:0.2" />
            </animations:ImplicitAnimationSet>
            <animations:ImplicitAnimationSet x:Name="HideTransitions">
                <animations:OffsetAnimation EasingMode="EaseOut" From="0" To="0,24,0" Duration="0:0:0.2" />
                <animations:OpacityAnimation EasingMode="EaseOut" From="1" To="0" Duration="0:0:0.1" />
            </animations:ImplicitAnimationSet>

            <media:AttachedCardShadow x:Key="BorderShadow" Offset="0" Color="Violet" BlurRadius="10" Opacity="50" CornerRadius="18" />

            <!-- Ensure the custom button maintains the regular button styles -->
            <Style TargetType="customUI:ButtonV2" BasedOn="{StaticResource DefaultButtonStyle}" />

            <Style TargetType="controls:GridSplitter">
                <Setter Property="Foreground" Value="DarkGray" />
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="Width" Value="6" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="ResizeDirection" Value="Auto" />
                <Setter Property="ResizeBehavior" Value="BasedOnAlignment" />
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="-3" />
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- The styles of the Wrap Panel which is at the top of almost every page -->
            <Style x:Key="PageHeaderWrapPanelStyle" TargetType="controls:WrapPanel">
                <Setter Property="Grid.Row" Value="0"/>
                <Setter Property="VerticalSpacing" Value="4"/>
                <Setter Property="HorizontalSpacing" Value="4"/>
                <Setter Property="Orientation" Value="Vertical"/>
                <Setter Property="Margin" Value="6,0,6,5"/>
            </Style>


            <!-- For BitLocker related Custom Content Dialogs -->

            <!-- Ensures each section has identical width -->

            <!-- Style applied to each switched panel -->
            <Style x:Key="PanelStyleV2" TargetType="StackPanel">
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="Padding" Value="16"/>
                <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}"/>
                <Setter Property="Spacing" Value="10"/>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
