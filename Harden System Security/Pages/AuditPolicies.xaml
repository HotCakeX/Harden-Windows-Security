<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="HardenSystemSecurity.Pages.AuditPolicies"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:customUI="using:AppControlManager.CustomUIElements"
    xmlns:audit="using:HardenSystemSecurity.SecurityPolicy"
    FlowDirection="{x:Bind ViewModel.AppSettings.ApplicationGlobalFlowDirection, Mode=OneWay}">

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <controls:WrapPanel Style="{StaticResource PageHeaderWrapPanelStyle}">

            <TextBlock x:Uid="AuditPoliciesPageTitle" TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}" />

            <customUI:GuideButton NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Audit-Policies" />

        </controls:WrapPanel>

        <customUI:InfoBarV2 Grid.Row="1"
                        IsOpen="{x:Bind ViewModel.MainInfoBarIsOpen, Mode=TwoWay}"
                        Message="{x:Bind ViewModel.MainInfoBarMessage, Mode=OneWay}"
                        Severity="{x:Bind ViewModel.MainInfoBarSeverity, Mode=OneWay}"
                        IsClosable="{x:Bind ViewModel.MainInfoBarIsClosable, Mode=OneWay}" />

        <Border Grid.Row="2" Margin="0,10,0,10" Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                HorizontalSpacing="10"
                                VerticalSpacing="10">

                <ProgressRing Visibility="{x:Bind ViewModel.ProgressBarVisibility,Mode=OneWay}"
                              VerticalAlignment="Center"
                              IsIndeterminate="True" />

                <Button x:Uid="RetrieveAuditPoliciesButton"
                        VerticalAlignment="Center"
                        IsEnabled="{x:Bind ViewModel.ElementsAreEnabled, Mode=OneWay}"
                        Click="{x:Bind ViewModel.RetrieveAuditPolicies_Click}">
                    <Button.ContentTemplate>
                        <DataTemplate x:DataType="x:String">
                            <StackPanel Orientation="Horizontal" Spacing="8">
                                <FontIcon Glyph="&#xE9F5;" FontSize="16"/>
                                <TextBlock Text="{x:Bind}"/>
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>

                <Button x:Uid="ClearDataButton"
                        VerticalAlignment="Center"
                        IsEnabled="{x:Bind ViewModel.ElementsAreEnabled, Mode=OneWay}"
                        Click="{x:Bind ViewModel.ClearData}">
                    <Button.ContentTemplate>
                        <DataTemplate x:DataType="x:String">
                            <StackPanel Orientation="Horizontal" Spacing="8">
                                <FontIcon Glyph="&#xED62;" FontSize="16"/>
                                <TextBlock Text="{x:Bind}"/>
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>

                <!-- Total chip -->
                <Border CornerRadius="8"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Padding="10,6"
                            BorderThickness="1"
                            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                            Background="{ThemeResource CardBackgroundFillColorDefaultBrush}">
                    <StackPanel Orientation="Horizontal" Spacing="6" VerticalAlignment="Center">
                        <FontIcon Glyph="&#xE8A9;" Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}" />
                        <TextBlock VerticalAlignment="Center">
                                <Run x:Uid="TotalText" />
                                <Run Text="{x:Bind ViewModel.AuditPolicies.Count, Mode=OneWay}" FontWeight="SemiBold" />
                        </TextBlock>
                    </StackPanel>
                </Border>

                <TextBox Width="300"
                         IsEnabled="{x:Bind ViewModel.ElementsAreEnabled, Mode=OneWay}"
                         Text="{x:Bind ViewModel.SearchKeyword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         x:Uid="SearchAuditPoliciesPlaceHolder"
                         VerticalAlignment="Center"
                         VerticalContentAlignment="Center" />

                <Button VerticalAlignment="Center"
                        x:Uid="ExportToJsonButton"
                        IsEnabled="{x:Bind ViewModel.ElementsAreEnabled, Mode=OneWay}"
                        Click="{x:Bind ViewModel.ExportToJson_Click}">
                    <Button.ContentTemplate>
                        <DataTemplate x:DataType="x:String">
                            <StackPanel Orientation="Horizontal" Spacing="8">
                                <FontIcon Glyph="&#xE74E;" FontSize="16"/>
                                <TextBlock Text="{x:Bind}"/>
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>

                <Button VerticalAlignment="Center"
                        x:Uid="ImportAndApplyAuditPoliciesFromJsonButton"
                        IsEnabled="{x:Bind ViewModel.ElementsAreEnabled, Mode=OneWay}"
                        Click="{x:Bind ViewModel.ImportFromJson_Click}">
                    <Button.ContentTemplate>
                        <DataTemplate x:DataType="x:String">
                            <StackPanel Orientation="Horizontal" Spacing="8">
                                <FontIcon Glyph="&#xE8B5;" FontSize="16"/>
                                <TextBlock Text="{x:Bind}"/>
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>

            </controls:WrapPanel>
        </Border>

        <customUI:ListViewV2 Grid.Row="3"
                             RegistryKey="AuditPolicies"
                             IsEnabled="{x:Bind ViewModel.ElementsAreEnabled, Mode=OneWay}"
                             ItemsSource="{x:Bind ViewModel.AuditPolicies, Mode=OneWay}"
                             SelectionMode="Single">

            <customUI:ListViewV2.Header>

                <Border CornerRadius="5" Background="Black" customUI:StickyHeaderBehaviorV2.IsEnabled="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth1, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth2, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth3, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth4, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth5, Mode=TwoWay}" MinWidth="50" />
                        </Grid.ColumnDefinitions>
                        <Button x:Uid="CategoryColumnHeaderBtn" Tag="CategoryName" Grid.Column="0" Margin="10,0,0,0" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}" />
                        <Button x:Uid="SubCategoryColumnHeaderBtn" Tag="SubcategoryName" Grid.Column="1" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}" />
                        <Button x:Uid="AuditSettingColumnHeaderBtn" Tag="AuditSettingDescription" Grid.Column="2" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}" />
                        <Button x:Uid="CategoryGUIDColumnHeaderBtn" Tag="CategoryGuid" Grid.Column="3" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}" />
                        <Button x:Uid="SubcategoryGUIDColumnHeaderBtn" Tag="SubcategoryGuid" Grid.Column="4" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}" />

                        <!-- GridSplitters between columns -->
                        <controls:GridSplitter Grid.Column="1" />
                        <controls:GridSplitter Grid.Column="2" />
                        <controls:GridSplitter Grid.Column="3" />
                        <controls:GridSplitter Grid.Column="4" />

                    </Grid>
                </Border>
            </customUI:ListViewV2.Header>

            <!-- DataTemplate for ListView items -->
            <customUI:ListViewV2.ItemTemplate>
                <DataTemplate x:DataType="audit:AuditPolicyInfo" xmlns:VMs="using:HardenSystemSecurity.ViewModels">
                    <!-- Setting Background="Transparent" on the Grid makes it hit-test visible, meaning that even areas without any child elements (like empty spaces in the column) will respond to pointer events.  -->
                    <Grid Background="Transparent">
                        <Grid.ContextFlyout>
                            <MenuFlyout>

                                <MenuFlyoutItem x:Uid="CopyRow" Click="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.CopySelectedPolicies_Click}">
                                    <MenuFlyoutItem.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="C" Modifiers="Control" Invoked="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.CopySelectedPolicies_Click}"/>
                                    </MenuFlyoutItem.KeyboardAccelerators>
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSubItem x:Uid="CopyIndividualItems">
                                    <MenuFlyoutSubItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutSubItem.Icon>

                                    <MenuFlyoutSubItem.Items>

                                        <MenuFlyoutItem x:Uid="CategoryHeader" Tag="CategoryName" Click="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SubCategoryHeader" Tag="SubcategoryName" Click="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="AuditSettingHeader" Tag="AuditSettingDescription" Click="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="CategoryGUIDHeader" Tag="CategoryGuid" Click="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SubcategoryGUIDHeader" Tag="SubcategoryGuid" Click="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                    </MenuFlyoutSubItem.Items>

                                </MenuFlyoutSubItem>

                            </MenuFlyout>
                        </Grid.ContextFlyout>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.ColumnWidth1, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.ColumnWidth2, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.ColumnWidth3, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.ColumnWidth4, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.ColumnWidth5, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{x:Bind CategoryName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="0"/>
                        <TextBlock Text="{x:Bind SubcategoryName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="1"/>

                        <!-- ComboBox with inline Apply button -->
                        <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" Spacing="8">
                            <ComboBox SelectedIndex="{x:Bind SelectedAuditSettingIndex, Mode=TwoWay}"
                                      MinWidth="160"
                                      VerticalAlignment="Center">
                                <x:String>No Auditing</x:String>
                                <x:String>Success</x:String>
                                <x:String>Failure</x:String>
                                <x:String>Success and Failure</x:String>
                            </ComboBox>

                            <!-- Apply button - only visible when changes pending -->
                            <Button Width="32"
                                    Height="32"
                                    Padding="0"
                                    VerticalAlignment="Center"
                                    Visibility="{x:Bind HasPendingChanges, Mode=OneWay}"
                                    Click="{x:Bind VMs:ViewModelProvider.AuditPoliciesVM.ApplyIndividualChange_Click}"
                                    Tag="{x:Bind}"
                                    BorderThickness="1"
                                    BorderBrush="{ThemeResource AccentButtonBorderBrush}"
                                    CornerRadius="4"
                                    ToolTipService.ToolTip="Apply Changes">

                                <FontIcon Glyph="&#xE930;" FontSize="16" />
                            </Button>
                        </StackPanel>

                        <TextBlock Text="{x:Bind CategoryGuid}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="3"/>
                        <TextBlock Text="{x:Bind SubcategoryGuid}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="4"/>
                    </Grid>
                </DataTemplate>
            </customUI:ListViewV2.ItemTemplate>
        </customUI:ListViewV2>

    </Grid>
</Page>