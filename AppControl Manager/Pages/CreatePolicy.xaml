<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.CreatePolicy"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:customUI="using:AppControlManager.CustomUIElements"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    FlowDirection="{x:Bind AppSettings.ApplicationGlobalFlowDirection, Mode=OneWay}"
    mc:Ignorable="d">

    <ScrollViewer>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <controls:WrapPanel Grid.Row="0" VerticalSpacing="4" HorizontalSpacing="4" Orientation="Vertical" Margin="6,0,6,10">

                <TextBlock x:Uid="CreatePolicyPageTitle" TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}"/>

                <HyperlinkButton x:Uid="GuideButtonAtTop" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Create-App-Control-Policy" />

            </controls:WrapPanel>

            <StackPanel HorizontalAlignment="Stretch" Spacing="{StaticResource SettingsCardSpacing}" Grid.Row="1" Margin="0,40,0,0">

                <win:StackPanel.ChildrenTransitions>
                    <win:EntranceThemeTransition FromVerticalOffset="50" />
                    <win:RepositionThemeTransition IsStaggeringEnabled="False" />
                </win:StackPanel.ChildrenTransitions>

                <!-- Allow Microsoft -->
                <controls:SettingsExpander
                           x:Uid="AllowMicrosoftSettings"
                           IsExpanded="{x:Bind ViewModel.AllowMicrosoftSettingsIsExpanded, Mode=TwoWay}"
                           HeaderIcon="{ui:FontIcon Glyph=&#xF0EF;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <customUI:InfoBarV2
                             BorderThickness="0"
                             CornerRadius="0"
                             IsIconVisible="True"
                             Message="{x:Bind ViewModel.AllowMicrosoftSettingsInfoBarMessage, Mode=OneWay}"
                             IsOpen="{x:Bind ViewModel.AllowMicrosoftSettingsInfoBarIsOpen, Mode=TwoWay}"
                             IsClosable="{x:Bind ViewModel.AllowMicrosoftSettingsInfoBarIsClosable, Mode=OneWay}"
                             Severity="{x:Bind ViewModel.AllowMicrosoftSettingsInfoBarSeverity, Mode=OneWay}">
                            <customUI:InfoBarV2.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.AllowMicrosoftInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind ViewModel.OpenInPolicyEditor_AllowMicrosoft}" />
                            </customUI:InfoBarV2.ActionButton>
                        </customUI:InfoBarV2>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Uid="AllowMicrosoftCreateButton"
                            Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0"
                                IsEnabled="{x:Bind ViewModel.AllowMicrosoftSectionIsEnabled, Mode=OneWay}"
                                Click="{x:Bind ViewModel.AllowMicrosoftCreate_Click}" />

                        <ToggleButton IsChecked="{x:Bind ViewModel.AllowMicrosoftCreateAndDeploy, Mode=TwoWay}"

                             IsEnabled="{x:Bind ViewModel.AllowMicrosoftSectionIsEnabled, Mode=OneWay}" x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <customUI:SettingsCardV2 x:Uid="AuditRuleOptionSettingsCard">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AllowMicrosoftAudit, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsEnabled="{x:Bind ViewModel.AllowMicrosoftSectionIsEnabled, Mode=OneWay}" />
                        </customUI:SettingsCardV2>

                        <controls:SettingsCard x:Uid="LogSizeConfigSettingsCard">

                            <NumberBox
                                x:Uid="LogSizeNumberBox"
                                Value="{x:Bind ViewModel.EventLogsUtil.MaxSizeMB, Mode=TwoWay}"
                                SpinButtonPlacementMode="Inline"
                                SmallChange="1"
                                IsEnabled="{x:Bind ViewModel.AllowMicrosoftLogSizeInputIsEnabled, Mode=OneWay}"
                                LargeChange="10" Minimum="2" Maximum="{x:Bind ViewModel.EventLogsUtil.MaxNumberBoxValue, Mode=OneTime}" Margin="0,0,30,0" />

                        </controls:SettingsCard>

                        <customUI:SettingsCardV2 x:Uid="RequireEVSignersRuleOption">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AllowMicrosoftRequireEVSigners, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsEnabled="{x:Bind ViewModel.AllowMicrosoftSectionIsEnabled, Mode=OneWay}" />
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="EnableScriptEnforcementRuleOption">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AllowMicrosoftEnableScriptEnforcement, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsEnabled="{x:Bind ViewModel.AllowMicrosoftSectionIsEnabled, Mode=OneWay}" />
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="TestModeRuleOption">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AllowMicrosoftTestMode, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsEnabled="{x:Bind ViewModel.AllowMicrosoftSectionIsEnabled, Mode=OneWay}" />
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="NoMSRecommendedBlockRules">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AllowMicrosoftNoBlockRules, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsEnabled="{x:Bind ViewModel.AllowMicrosoftSectionIsEnabled, Mode=OneWay}" />
                        </customUI:SettingsCardV2>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>

                <!-- Default Windows -->
                <controls:SettingsExpander
                           x:Uid="DefaultWindowsSettings"
                           IsExpanded="{x:Bind ViewModel.DefaultWindowsSettingsIsExpanded, Mode=TwoWay}"
                           HeaderIcon="{ui:FontIcon Glyph=&#xEA18;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <customUI:InfoBarV2
                             BorderThickness="0"
                             CornerRadius="0"
                             IsIconVisible="True"
                             Message="{x:Bind ViewModel.DefaultWindowsSettingsInfoBarMessage, Mode=OneWay}"
                             IsOpen="{x:Bind ViewModel.DefaultWindowsSettingsInfoBarIsOpen, Mode=TwoWay}"
                             IsClosable="{x:Bind ViewModel.DefaultWindowsSettingsInfoBarIsClosable, Mode=OneWay}"
                             Severity="{x:Bind ViewModel.DefaultWindowsSettingsInfoBarSeverity, Mode=OneWay}">
                            <customUI:InfoBarV2.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.DefaultWindowsInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind ViewModel.OpenInPolicyEditor_DefaultWindows}" />
                            </customUI:InfoBarV2.ActionButton>
                        </customUI:InfoBarV2>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button IsEnabled="{x:Bind ViewModel.DefaultWindowsSectionIsEnabled, Mode=OneWay}" x:Uid="DefaultWindowsCreateButton"
                                Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" Click="{x:Bind ViewModel.DefaultWindowsCreate_Click}" />

                        <ToggleButton IsChecked="{x:Bind ViewModel.DefaultWindowsCreateAndDeploy, Mode=TwoWay}" IsEnabled="{x:Bind ViewModel.DefaultWindowsSectionIsEnabled, Mode=OneWay}" x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <customUI:SettingsCardV2 x:Uid="AuditRuleOptionSettingsCard">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.DefaultWindowsAudit, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsEnabled="{x:Bind ViewModel.DefaultWindowsSectionIsEnabled, Mode=OneWay}" />
                        </customUI:SettingsCardV2>

                        <controls:SettingsCard x:Uid="LogSizeConfigSettingsCard">

                            <NumberBox
                               x:Uid="LogSizeNumberBox"
                               IsEnabled="{x:Bind ViewModel.DefaultWindowsLogSizeInputIsEnabled, Mode=OneWay}"
                               Value="{x:Bind ViewModel.EventLogsUtil.MaxSizeMB, Mode=TwoWay}"
                               SpinButtonPlacementMode="Inline"
                               SmallChange="1"
                               LargeChange="10" Minimum="2" Maximum="{x:Bind ViewModel.EventLogsUtil.MaxNumberBoxValue, Mode=OneTime}" Margin="0,0,30,0" />

                        </controls:SettingsCard>

                        <customUI:SettingsCardV2 x:Uid="RequireEVSignersRuleOption">
                            <ToggleSwitch IsEnabled="{x:Bind ViewModel.DefaultWindowsSectionIsEnabled, Mode=OneWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsOn="{x:Bind ViewModel.DefaultWindowsRequireEVSigners,Mode=TwoWay}" />
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="EnableScriptEnforcementRuleOption">
                            <ToggleSwitch IsEnabled="{x:Bind ViewModel.DefaultWindowsSectionIsEnabled, Mode=OneWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsOn="{x:Bind ViewModel.DefaultWindowsEnableScriptEnforcement,Mode=TwoWay}" />
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="TestModeRuleOption">
                            <ToggleSwitch IsEnabled="{x:Bind ViewModel.DefaultWindowsSectionIsEnabled, Mode=OneWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsOn="{x:Bind ViewModel.DefaultWindowsTestMode,Mode=TwoWay}" />
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="NoMSRecommendedBlockRules">
                            <ToggleSwitch IsEnabled="{x:Bind ViewModel.DefaultWindowsSectionIsEnabled, Mode=OneWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsOn="{x:Bind ViewModel.DefaultWindowsNoBlockRules,Mode=TwoWay}" />
                        </customUI:SettingsCardV2>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>

                <!-- Signed and Reputable -->
                <controls:SettingsExpander
                           IsExpanded="{x:Bind ViewModel.SignedAndReputableSettingsIsExpanded, Mode=TwoWay}"
                           x:Uid="SignedAndReputableSettings"
                           HeaderIcon="{ui:FontIcon Glyph=&#xEA0D;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <customUI:InfoBarV2 BorderThickness="0"
                             CornerRadius="0"
                             IsIconVisible="True"
                             Message="{x:Bind ViewModel.SignedAndReputableSettingsInfoBarMessage, Mode=OneWay}"
                             IsOpen="{x:Bind ViewModel.SignedAndReputableSettingsInfoBarIsOpen, Mode=TwoWay}"
                             IsClosable="{x:Bind ViewModel.SignedAndReputableSettingsInfoBarIsClosable, Mode=OneWay}"
                             Severity="{x:Bind ViewModel.SignedAndReputableSettingsInfoBarSeverity, Mode=OneWay}">
                            <customUI:InfoBarV2.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.SignedAndReputableInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind ViewModel.OpenInPolicyEditor_SignedAndReputable}" />
                            </customUI:InfoBarV2.ActionButton>
                        </customUI:InfoBarV2>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button IsEnabled="{x:Bind ViewModel.SignedAndReputableSectionIsEnabled, Mode=OneWay}" x:Name="SignedAndReputableCreate" x:Uid="SignedAndReputableCreateButton"
                                Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" Click="{x:Bind ViewModel.SignedAndReputableCreate_Click}" />

                        <ToggleButton IsChecked="{x:Bind ViewModel.SignedAndReputableCreateAndDeploy, Mode=TwoWay}" IsEnabled="{x:Bind ViewModel.SignedAndReputableSectionIsEnabled, Mode=OneWay}" x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <customUI:SettingsCardV2 x:Uid="AuditRuleOptionSettingsCard">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.SignedAndReputableAudit, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsEnabled="{x:Bind ViewModel.SignedAndReputableSectionIsEnabled, Mode=OneWay}" />
                        </customUI:SettingsCardV2>

                        <controls:SettingsCard x:Uid="LogSizeConfigSettingsCard">

                            <NumberBox
                                x:Uid="LogSizeNumberBox"
                                IsEnabled="{x:Bind ViewModel.SignedAndReputableLogSizeInputIsEnabled, Mode=OneWay}"
                                Value="{x:Bind ViewModel.EventLogsUtil.MaxSizeMB, Mode=TwoWay}"
                                SpinButtonPlacementMode="Inline"
                                SmallChange="1"
                                LargeChange="10" Minimum="2" Maximum="{x:Bind ViewModel.EventLogsUtil.MaxNumberBoxValue, Mode=OneTime}" Margin="0,0,30,0" />

                        </controls:SettingsCard>

                        <customUI:SettingsCardV2 x:Uid="RequireEVSignersRuleOption">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.SignedAndReputableRequireEVSigners, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsEnabled="{x:Bind ViewModel.SignedAndReputableSectionIsEnabled, Mode=OneWay}" />
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="EnableScriptEnforcementRuleOption">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.SignedAndReputableEnableScriptEnforcement, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsEnabled="{x:Bind ViewModel.SignedAndReputableSectionIsEnabled, Mode=OneWay}" />
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="TestModeRuleOption">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.SignedAndReputableTestMode, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsEnabled="{x:Bind ViewModel.SignedAndReputableSectionIsEnabled, Mode=OneWay}" />
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="NoMSRecommendedBlockRules">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.SignedAndReputableNoBlockRules, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsEnabled="{x:Bind ViewModel.SignedAndReputableSectionIsEnabled, Mode=OneWay}" />
                        </customUI:SettingsCardV2>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>

                <!-- Microsoft Recommended Driver Block Rules -->
                <controls:SettingsExpander IsExpanded="{x:Bind ViewModel.RecommendedDriverBlockRulesSettingsIsExpanded, Mode=TwoWay}"
                           x:Uid="RecommendedDriverBlockRulesSettings"
                           HeaderIcon="{ui:FontIcon Glyph=&#xEC1B;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <customUI:InfoBarV2
                            BorderThickness="0"
                            CornerRadius="0"
                            IsIconVisible="True"
                            Message="{x:Bind ViewModel.RecommendedDriverBlockRulesSettingsInfoBarMessage, Mode=OneWay}"
                            IsOpen="{x:Bind ViewModel.RecommendedDriverBlockRulesSettingsInfoBarIsOpen, Mode=TwoWay}"
                            IsClosable="{x:Bind ViewModel.RecommendedDriverBlockRulesSettingsInfoBarIsClosable, Mode=OneWay}"
                            Severity="{x:Bind ViewModel.RecommendedDriverBlockRulesSettingsInfoBarSeverity, Mode=OneWay}">
                            <customUI:InfoBarV2.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.RecommendedDriverBlockRulesInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind ViewModel.OpenInPolicyEditor_RecommendedDriverBlockRules}" />
                            </customUI:InfoBarV2.ActionButton>
                        </customUI:InfoBarV2>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Uid="RecommendedDriverBlockRulesCreateButton"
                            Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0"
                            IsEnabled="{x:Bind ViewModel.RecommendedDriverBlockRulesSectionIsEnabled, Mode=OneWay}"
                            Click="{x:Bind ViewModel.RecommendedDriverBlockRulesCreate_Click}" />

                        <ToggleButton IsChecked="{x:Bind ViewModel.RecommendedDriverBlockRulesCreateAndDeploy, Mode=TwoWay}"
                                      IsEnabled="{x:Bind ViewModel.RecommendedDriverBlockRulesSectionIsEnabled, Mode=OneWay}"
                                      x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                        <Button x:Uid="RecommendedDriverBlockRulesScheduledAutoUpdate"
                                Style="{StaticResource AccentButtonStyle}"
                                IsEnabled="{x:Bind ViewModel.RecommendedDriverBlockRulesSectionIsEnabled, Mode=OneWay}"
                                Click="{x:Bind ViewModel.RecommendedDriverBlockRulesScheduledAutoUpdate_Click}" Margin="0,0,15,0" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard x:Uid="DriversBlockRulesLittleSettingsCard">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Uid="VersionLabel" FontWeight="Bold" Margin="0,0,5,0" Foreground="Violet"/>
                                <TextBlock IsTextSelectionEnabled="True" Text="{x:Bind ViewModel.RecommendedDriverBlockRulesVersionTextBlock, Mode=OneWay}" Foreground="Violet"/>
                            </StackPanel>

                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>

                <!-- Microsoft Recommended User Mode Block Rules -->
                <controls:SettingsExpander x:Name="RecommendedUserModeBlockRulesSettings"
                           x:Uid="RecommendedUserModeBlockRulesSettings"
                           HeaderIcon="{ui:FontIcon Glyph=&#xEC1B;}"
                           IsExpanded="{x:Bind ViewModel.RecommendedUserModeBlockRulesSettingsIsExpanded, Mode=TwoWay}">
                    <controls:SettingsExpander.ItemsHeader>
                        <customUI:InfoBarV2
                                BorderThickness="0"
                                CornerRadius="0"
                                IsIconVisible="True"
                                Message="{x:Bind ViewModel.RecommendedUserModeBlockRulesSettingsInfoBarMessage, Mode=OneWay}"
                                IsOpen="{x:Bind ViewModel.RecommendedUserModeBlockRulesSettingsInfoBarIsOpen, Mode=TwoWay}"
                                IsClosable="{x:Bind ViewModel.RecommendedUserModeBlockRulesSettingsInfoBarIsClosable, Mode=OneWay}"
                                Severity="{x:Bind ViewModel.RecommendedUserModeBlockRulesSettingsInfoBarSeverity, Mode=OneWay}">
                            <customUI:InfoBarV2.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.RecommendedUserModeBlockRulesInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind ViewModel.OpenInPolicyEditor_RecommendedUserModeBlockRules}" />
                            </customUI:InfoBarV2.ActionButton>
                        </customUI:InfoBarV2>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button IsEnabled="{x:Bind ViewModel.RecommendedUserModeBlockRulesSectionIsEnabled, Mode=OneWay}"
                              x:Uid="RecommendedUserModeBlockRulesCreateButton"
                              Style="{StaticResource AccentButtonStyle}"
                              Margin="0,0,15,0"
                              Click="{x:Bind ViewModel.RecommendedUserModeBlockRulesCreate_Click}" />

                        <ToggleButton IsEnabled="{x:Bind ViewModel.RecommendedUserModeBlockRulesSectionIsEnabled, Mode=OneWay}"
                                      IsChecked="{x:Bind ViewModel.RecommendedUserModeBlockRulesCreateAndDeploy, Mode=TwoWay}"
                                      x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                    </controls:WrapPanel>

                </controls:SettingsExpander>

                <!-- Strict Kernel-mode policy -->
                <controls:SettingsExpander IsExpanded="{x:Bind ViewModel.StrictKernelModesSettingsIsExpanded, Mode=TwoWay}"
                     x:Uid="StrictKernelModePolicySection"
                     HeaderIcon="{ui:FontIcon Glyph=&#xE945;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <customUI:InfoBarV2
                        x:Uid="CurrentStatusInfoBar"
                        BorderThickness="0"
                        CornerRadius="0"
                        IsIconVisible="True"
                        Message="{x:Bind ViewModel.StrictKernelModesSettingsInfoBarMessage, Mode=OneWay}"
                        IsOpen="{x:Bind ViewModel.StrictKernelModesSettingsInfoBarIsOpen, Mode=TwoWay}"
                        IsClosable="{x:Bind ViewModel.StrictKernelModesSettingsInfoBarIsClosable, Mode=OneWay}"
                        Severity="{x:Bind ViewModel.StrictKernelModesSettingsInfoBarSeverity, Mode=OneWay}">
                            <customUI:InfoBarV2.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.StrictKernelModeInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind ViewModel.OpenInPolicyEditor_StrictKernelModePolicy}" />
                            </customUI:InfoBarV2.ActionButton>
                        </customUI:InfoBarV2>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button IsEnabled="{x:Bind ViewModel.StrictKernelModeSectionIsEnabled, Mode=OneWay}"
                                Click="{x:Bind ViewModel.StrictKernelModePolicyCreateButton_Click}"
                                Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" x:Uid="StrictKernelModePolicyCreateButton" />

                        <ToggleButton IsEnabled="{x:Bind ViewModel.StrictKernelModeSectionIsEnabled, Mode=OneWay}"
                                      IsChecked="{x:Bind ViewModel.StrictKernelModesCreateAndDeploy, Mode=TwoWay}"
                                      x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <customUI:SettingsCardV2 x:Uid="AuditRuleOptionSettingsCard">
                            <ToggleSwitch IsEnabled="{x:Bind ViewModel.StrictKernelModeSectionIsEnabled, Mode=OneWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsOn="{x:Bind ViewModel.StrictKernelModesAudit, Mode=TwoWay}" />
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="StrictKernelModePolicyUseNoFlightRootsToggleSwitchSettingsCard">
                            <ToggleSwitch IsEnabled="{x:Bind ViewModel.StrictKernelModeSectionIsEnabled, Mode=OneWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsOn="{x:Bind ViewModel.StrictKernelModeNoFlightRoots, Mode=TwoWay}" />
                        </customUI:SettingsCardV2>

                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <!-- RMM Blocking -->
                <controls:SettingsExpander IsExpanded="{x:Bind ViewModel.RMMBlockingSettingsIsExpanded, Mode=TwoWay}"
                                           x:Uid="RMMBlockingSection"
                                           HeaderIcon="{ui:FontIcon Glyph=&#xEA14;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <customUI:InfoBarV2 x:Uid="CurrentStatusInfoBar"
                                 BorderThickness="0"
                                 CornerRadius="0"
                                 IsIconVisible="True"
                                 Message="{x:Bind ViewModel.RMMBlockingSettingsInfoBarMessage, Mode=OneWay}"
                                 IsOpen="{x:Bind ViewModel.RMMBlockingSettingsInfoBarIsOpen, Mode=TwoWay}"
                                 IsClosable="{x:Bind ViewModel.RMMBlockingSettingsInfoBarIsClosable, Mode=OneWay}"
                                 Severity="{x:Bind ViewModel.RMMBlockingSettingsInfoBarSeverity, Mode=OneWay}">
                            <customUI:InfoBarV2.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton"
                                             Visibility="{x:Bind ViewModel.RMMBlockingInfoBarActionButtonVisibility, Mode=OneWay}"
                                             Click="{x:Bind ViewModel.OpenInPolicyEditor_RMMBlockingPolicy}" />
                            </customUI:InfoBarV2.ActionButton>
                        </customUI:InfoBarV2>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button IsEnabled="{x:Bind ViewModel.RMMBlockingSectionIsEnabled, Mode=OneWay}"
                                Click="{x:Bind ViewModel.RMMBlockingPolicyCreateButton_Click}"
                                Style="{StaticResource AccentButtonStyle}"
                                Margin="0,0,15,0"
                                x:Uid="RMMBlockingCreateButton" />

                        <ToggleButton IsEnabled="{x:Bind ViewModel.RMMBlockingSectionIsEnabled, Mode=OneWay}"
                                      IsChecked="{x:Bind ViewModel.RMMBlockingCreateAndDeploy, Mode=TwoWay}"
                                      x:Uid="DeployAfterCreationButton"
                                      Margin="0,0,15,0" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <customUI:SettingsCardV2 x:Uid="AuditRuleOptionSettingsCard">
                            <ToggleSwitch IsEnabled="{x:Bind ViewModel.RMMBlockingSectionIsEnabled, Mode=OneWay}"
                                          x:Uid="ToggleSwitchGeneral"
                                          IsOn="{x:Bind ViewModel.RMMBlockingAudit, Mode=TwoWay}" />
                        </customUI:SettingsCardV2>

                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

            </StackPanel>

        </Grid>
    </ScrollViewer>
</Page>
