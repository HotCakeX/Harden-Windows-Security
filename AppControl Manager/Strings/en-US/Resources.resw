<?xml version="1.0" encoding="utf-8"?>
<root><!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateDenyPolicyNavItem.Content" xml:space="preserve">
    <value>Create Deny Policy</value>
  </data>
  <data name="CreateDenyPolicyNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create Deny App Control Policies</value>
  </data>
  <data name="CreatePolicyNavItem.Content" xml:space="preserve">
    <value>Create Policy</value>
    <comment>Main Navigation</comment>
  </data>
  <data name="CreatePolicyNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create AppControl Policies with different characteristics</value>
    <comment>Main Navigation</comment>
  </data>
  <data name="CreateSupplementalPolicyNavItem.Content" xml:space="preserve">
    <value>Create Supplemental Policy</value>
  </data>
  <data name="CreateSupplementalPolicyNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create Supplemental AppControl Policies</value>
  </data>
  <data name="BuildNewCertificateNavItem.Content" xml:space="preserve">
    <value>Build New Certificate</value>
  </data>
  <data name="BuildNewCertificateNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Generate Certificates that are suitable for signing App Control Policies</value>
  </data>
  <data name="ViewFileCertificatesNavItem.Content" xml:space="preserve">
    <value>View File Certificates</value>
  </data>
  <data name="ViewFileCertificatesNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>View advanced and highly detailed information about all certificates of signed files</value>
  </data>
  <data name="CreatePolicyFromEventLogsNavItem.Content" xml:space="preserve">
    <value>Create policy from Event Logs</value>
  </data>
  <data name="CreatePolicyFromEventLogsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create App Control policy either from the local event logs or EVTX files</value>
  </data>
  <data name="CreatePolicyFromMDEAHNavItem.Content" xml:space="preserve">
    <value>MDE Advanced Hunting</value>
  </data>
  <data name="CreatePolicyFromMDEAHNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create App Control policy from Microsoft Defender for Endpoint (MDE) Advanced Hunting Logs</value>
  </data>
  <data name="SimulationNavItem.Content" xml:space="preserve">
    <value>Simulation</value>
  </data>
  <data name="SimulationNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Simulate deployment of App Control policies</value>
  </data>
  <data name="AllowNewAppsNavItem.Content" xml:space="preserve">
    <value>Allow New Apps</value>
  </data>
  <data name="AllowNewAppsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Allow new apps or programs that are being blocked from installation or are already installed but are being blocked from running.</value>
  </data>
  <data name="SystemInformationNavItem.Content" xml:space="preserve">
    <value>System Information</value>
  </data>
  <data name="SystemInformationNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>View information about the system</value>
  </data>
  <data name="GetCodeIntegrityHashesNavItem.Content" xml:space="preserve">
    <value>Get Code Integrity Hashes</value>
  </data>
  <data name="GetCodeIntegrityHashesNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Get Code Integrity Hashes of files</value>
  </data>
  <data name="GetSecurePolicySettingsNavItem.Content" xml:space="preserve">
    <value>Get Secure Policy Settings</value>
  </data>
  <data name="GetSecurePolicySettingsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Get the secure policy settings among the deployed policies</value>
  </data>
  <data name="ConfigurePolicyRuleOptionsNavItem.Content" xml:space="preserve">
    <value>Configure Policy Rule Options</value>
  </data>
  <data name="ConfigurePolicyRuleOptionsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Configure Policy Rule Options</value>
  </data>
  <data name="MergePoliciesNavItem.Content" xml:space="preserve">
    <value>Merge App Control Policies</value>
  </data>
  <data name="MergePoliciesNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Merge 2 App Control policies together or deduplicate a single policy</value>
  </data>
  <data name="DeploymentNavItem.Content" xml:space="preserve">
    <value>Deploy App Control Policy</value>
  </data>
  <data name="DeploymentNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Deploy signed or unsigned AppControl policies on the system</value>
  </data>
  <data name="ValidatePoliciesNavItem.Content" xml:space="preserve">
    <value>Validate Policies</value>
  </data>
  <data name="ValidatePoliciesNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Validate App Control Policies</value>
  </data>
  <data name="GitHubDocsNavItem.Content" xml:space="preserve">
    <value>GitHub Documentation</value>
  </data>
  <data name="GitHubDocsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Get online documentation from GitHub about how to use the application</value>
  </data>
  <data name="MSFTDocsNavItem.Content" xml:space="preserve">
    <value>Microsoft Documentation</value>
  </data>
  <data name="MSFTDocsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Get online documentation from Microsoft about App Control for Business policies</value>
  </data>
  <data name="LogsNavItem.Content" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="LogsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>View the application logs in real time</value>
  </data>
  <data name="ScanResults" xml:space="preserve">
    <value>Scan Results</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="BrowseForFilesSettingsCard.Description" xml:space="preserve">
    <value>Browse for a file to see all of its available certificates</value>
  </data>
  <data name="BrowseForFilesSettingsCard.Header" xml:space="preserve">
    <value>Select File</value>
  </data>
  <data name="GuideButtonAtTop.Content" xml:space="preserve">
    <value>Guide</value>
  </data>
  <data name="GuideButtonAtTop.ToolTipService.ToolTip" xml:space="preserve">
    <value>Click/Tap to visit the full Guide for this page on GitHub</value>
  </data>
  <data name="DeployAfterCreationButton.Content" xml:space="preserve">
    <value>Deploy after Creation</value>
  </data>
  <data name="DeployAfterCreationButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Toggling this button means the policy will be deployed on the system after it&apos;s been created</value>
  </data>
  <data name="CreateSupplementalPolicyButton.Content" xml:space="preserve">
    <value>Create Supplemental Policy</value>
  </data>
  <data name="CreateSupplementalPolicyButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create the Supplemental policy based on the configurations you selected</value>
  </data>
  <data name="CreateDenyPolicyButton.Content" xml:space="preserve">
    <value>Create Deny Policy</value>
  </data>
  <data name="CreateDenyPolicyButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create the Deny policy based on the configurations you selected</value>
  </data>
  <data name="CreateDenyPolicyFilesAndFoldersSettingsExpander.Description" xml:space="preserve">
    <value>Create Deny policy by scanning files and folders</value>
  </data>
  <data name="CreateDenyPolicyFilesAndFoldersSettingsExpander.Header" xml:space="preserve">
    <value>Files and Folders</value>
  </data>
  <data name="CreateDenyPolicyFilesAndFoldersSettingsExpander.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create Deny policy by scanning files and folders</value>
  </data>
  <data name="CreateDenyPolicyPFNSettingsExpander.Description" xml:space="preserve">
    <value>Create a Deny policy based on an app&apos;s Package Family Name (PFN)</value>
  </data>
  <data name="CreateDenyPolicyPFNSettingsExpander.Header" xml:space="preserve">
    <value>Package Family Name</value>
  </data>
  <data name="CreateDenyPolicyPFNSettingsExpander.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create a Deny policy based on an app&apos;s Package Family Name (PFN)</value>
  </data>
  <data name="AuditRuleOptionSettingsCard.Description" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Enabled:Audit Mode) policy rule option and will generate audit logs instead of blocking files.</value>
  </data>
  <data name="AuditRuleOptionSettingsCard.Header" xml:space="preserve">
    <value>Audit</value>
  </data>
  <data name="AuditRuleOptionSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Enabled:Audit Mode) policy rule option and will generate audit logs instead of blocking files.</value>
  </data>
  <data name="RequireEVSignersRuleOption.Description" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Require EV Signers) policy rule option which will only allow kernel-mode drivers signed with an EV certificate to run.</value>
  </data>
  <data name="RequireEVSignersRuleOption.Header" xml:space="preserve">
    <value>Require EVSigners</value>
  </data>
  <data name="RequireEVSignersRuleOption.ToolTipService.ToolTip" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Require EV Signers) policy rule option which will only allow kernel-mode drivers signed with an EV certificate to run.</value>
  </data>
  <data name="EnableScriptEnforcementRuleOption.Description" xml:space="preserve">
    <value>Enables script enforcement for the policy which will severely limit the attack surface of PowerShell by requiring only scripts/modules signed and allowed in the Code Integrity policy to run.</value>
  </data>
  <data name="EnableScriptEnforcementRuleOption.Header" xml:space="preserve">
    <value>Enable Script Enforcement</value>
  </data>
  <data name="EnableScriptEnforcementRuleOption.ToolTipService.ToolTip" xml:space="preserve">
    <value>Enables script enforcement for the policy which will severely limit the attack surface of PowerShell by requiring only scripts/modules signed and allowed in the Code Integrity policy to run.</value>
  </data>
  <data name="TestModeRuleOption.Description" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Enabled:Boot Audit on Failure) and (Enabled:Advanced Boot Options Menu) policy rule options. Useful for testing the policy and having recovery options available when something goes wrong. Not recommended to be used in the final production-ready policy due to security reasons.</value>
  </data>
  <data name="TestModeRuleOption.Header" xml:space="preserve">
    <value>Test Mode</value>
  </data>
  <data name="TestModeRuleOption.ToolTipService.ToolTip" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Enabled:Boot Audit on Failure) and (Enabled:Advanced Boot Options Menu) policy rule options. Useful for testing the policy and having recovery options available when something goes wrong. Not recommended to be used in the final production-ready policy due to security reasons.</value>
  </data>
  <data name="FileBrowseButton.Content" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="FileBrowseButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Opens the File picker dialog allowing you select file(s)</value>
  </data>
  <data name="FolderBrowseButton.Content" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="FolderBrowseButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Opens the Folder picker dialog allowing you select folder(s)</value>
  </data>
  <data name="SupplementalPolicyNameTextBox.PlaceholderText" xml:space="preserve">
    <value>Supplemental Policy Name</value>
  </data>
  <data name="SupplementalPolicyNameTextBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Enter a name for the Supplemental policy that will be created.</value>
  </data>
  <data name="SupplementalPolicyNameSettingsCard.Description" xml:space="preserve">
    <value>The name of the Supplemental policy that is going to be created.</value>
  </data>
  <data name="SupplementalPolicyNameSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>The name of the Supplemental policy that is going to be created.</value>
  </data>
  <data name="SupplementalPolicyNameSettingsCard.Header" xml:space="preserve">
    <value>Policy Name</value>
  </data>
  <data name="SupplementalFilesAndFoldersSettingsCard.Header" xml:space="preserve">
    <value>Files and Folders</value>
  </data>
  <data name="SupplementalFilesAndFoldersSettingsCard.Description" xml:space="preserve">
    <value>Create Supplemental policy by scanning files and folders</value>
  </data>
  <data name="SupplementalFilesAndFoldersSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create Supplemental policy by scanning files and folders</value>
  </data>
  <data name="ClearButton.Content" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ClearButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ReviewEventLogsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Review the Event Logs that were collected during the Audit mode phase</value>
  </data>
  <data name="ReviewEventLogsNavItem.Content" xml:space="preserve">
    <value>Review the Event Logs</value>
  </data>
  <data name="ReviewLocalFilesNavItem.Content" xml:space="preserve">
    <value>Review the Local Files</value>
  </data>
  <data name="ReviewLocalFilesNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Review the Local Files. These are the files that were found in the directories you browsed for.</value>
  </data>
  <data name="AllowNewAppsInternalMainNavItem.Content" xml:space="preserve">
    <value>Start allowing apps or files</value>
  </data>
  <data name="AllowNewAppsInternalMainNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Start allowing apps or files by either running them or browsing for their directories during the Audit mode phase.</value>
  </data>
  <data name="ExtraActionsDropDownButton.Content" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="ExtraActionsDropDownButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Offers multiple different actions to take on the displayed data</value>
  </data>
  <data name="ClearDataMenuFlyoutItem.Text" xml:space="preserve">
    <value>Clear Data</value>
  </data>
  <data name="ClearDataMenuFlyoutItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Clear all of the displayed data</value>
  </data>
  <data name="DeployAfterCreationMenuFlyoutItem.Text" xml:space="preserve">
    <value>Deploy after Creation</value>
  </data>
  <data name="DeployAfterCreationMenuFlyoutItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Toggling this button means the policy will be deployed on the system after it&apos;s been created</value>
  </data>
  <data name="SearchBoxTextBox.PlaceholderText" xml:space="preserve">
    <value>Search the data...</value>
  </data>
  <data name="SearchBoxTextBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Search among the displayed data</value>
  </data>
  <data name="DeSelectAllMenuFlyoutItem.Text" xml:space="preserve">
    <value>De-Select All</value>
  </data>
  <data name="DeSelectAllMenuFlyoutItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>De-select any selected data</value>
  </data>
  <data name="SelectAllMenuFlyoutItem.Text" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="SelectAllMenuFlyoutItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Select all of the displayed data</value>
  </data>
  <data name="SelectAllButton.Content" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="SelectAllButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="RefreshButton.Content" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="RefreshButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="RemoveSelectionsButton.Content" xml:space="preserve">
    <value>Remove Selections</value>
  </data>
  <data name="RemoveSelectionsButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Remove Selections</value>
  </data>
  <data name="SelectedAppsTextBlock.Text" xml:space="preserve">
    <value>Selected Apps: 0</value>
  </data>
  <data name="SelectedAppsTextBlock.ToolTipService.ToolTip" xml:space="preserve">
    <value>The total number of the selected Apps</value>
  </data>
  <data name="BrowseForFoldersDenyPolicySettingsCard.Description" xml:space="preserve">
    <value>Browse for Folder paths to scan and include in the Deny policy. The folders will be scanned recursively.</value>
  </data>
  <data name="BrowseForFoldersDenyPolicySettingsCard.Header" xml:space="preserve">
    <value>Browse For Folders</value>
  </data>
  <data name="BrowseForFoldersDenyPolicySettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Browse for Folder paths to scan and include in the Deny policy. The folders will be scanned recursively.</value>
  </data>
  <data name="BrowseForFilesDenyPolicySettingsCard.Description" xml:space="preserve">
    <value>Browse for file paths to scan and include in the Deny policy.</value>
  </data>
  <data name="BrowseForFilesDenyPolicySettingsCard.Header" xml:space="preserve">
    <value>Browse For Files</value>
  </data>
  <data name="BrowseForFilesDenyPolicySettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Browse for file paths to scan and include in the Deny policy.</value>
  </data>
  <data name="DenyPolicyNameSettingsCard.Description" xml:space="preserve">
    <value>The name of the Deny policy that is going to be created.</value>
  </data>
  <data name="DenyPolicyNameSettingsCard.Header" xml:space="preserve">
    <value>Policy Name</value>
  </data>
  <data name="DenyPolicyNameSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>The name of the Deny policy that is going to be created.</value>
  </data>
  <data name="ViewSelectedBasePolicyTextBlock.Text" xml:space="preserve">
    <value>View the Base policy path you selected.</value>
  </data>
  <data name="ViewSelectedFilesTextBlock.Text" xml:space="preserve">
    <value>View the files you selected.</value>
  </data>
  <data name="ViewSelectedFoldersTextBlock.Text" xml:space="preserve">
    <value>View the folders you selected.</value>
  </data>
  <data name="TotalLogsTextBlock.PlaceholderText" xml:space="preserve">
    <value>Total logs: 0</value>
  </data>
  <data name="TotalLogsTextBlock.ToolTipService.ToolTip" xml:space="preserve">
    <value>The total number of the logs</value>
  </data>
  <data name="RefreshLogFilesButton.Content" xml:space="preserve">
    <value>Refresh The Logs</value>
  </data>
  <data name="RefreshLogFilesButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Retrieve the latest logs for the current session by reading them from the log file in the user configurations directory</value>
  </data>
  <data name="MainSearchAutoSuggestBox.PlaceholderText" xml:space="preserve">
    <value>Search menu items...</value>
  </data>
  <data name="MainSearchAutoSuggestBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Enter menu item names to find them quickly</value>
  </data>
  <data name="UpdateNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="UpdateNavItem.Content" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="OpenConfigDirectoryButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Open the directory where user configurations and user generated files are stored</value>
  </data>
  <data name="OpenConfigDirectoryButtonText.Text" xml:space="preserve">
    <value>Open User Config Directory</value>
  </data>
</root>