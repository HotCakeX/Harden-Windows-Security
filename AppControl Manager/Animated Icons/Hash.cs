//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.1.240821.1+077322fa26
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile Hash.json
//       
//       Input file:
//           Hash.json (124261 bytes created 17:58+02:00 Nov 17 2024)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   170 |
// |--------------------------+-------|
// | Expression animators     |     1 |
// | KeyFrame animators       |     6 |
// | Reference parameters     |     1 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     2 |
// |--------------------------+-------|
// | ContainerVisuals         |     9 |
// | ShapeVisuals             |     9 |
// |--------------------------+-------|
// | ContainerShapes          |     4 |
// | CompositionSpriteShapes  |     9 |
// |--------------------------+-------|
// | Brushes                  |    18 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     8 |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        pie-chart
    // Frame rate:  24 fps
    // Frame count: 28
    // Duration:    1166.7 mS
    // _____________________________________________________________________________________________
    // |           Marker           |           Constant           | Frame |   mS   |   Progress   |
    // |____________________________|______________________________|_______|________|______________|
    // | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
    // | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
    // | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
    // | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
    // ---------------------------------------------------------------------------------------------
    sealed partial class Hash
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 1.167 seconds.
        internal const long c_durationTicks = 11666666;

        // Marker: NormalToPressed_Start.
        internal const float M_NormalToPressed_Start = 0F;

        // Marker: NormalToPressed_End.
        internal const float M_NormalToPressed_End = 0.323214293F;

        // Marker: PointerOverToPressed_Start.
        internal const float M_PointerOverToPressed_Start = 0.323214293F;

        // Marker: PointerOverToPressed_End.
        internal const float M_PointerOverToPressed_End = 0.680357158F;

        // Marker: PressedToNormal_Start.
        internal const float M_PressedToNormal_Start = 0.716071427F;

        // Marker: PressedToNormal_End.
        internal const float M_PressedToNormal_End = 1F;

        // Marker: PressedToPointerOver_Start.
        internal const float M_PressedToPointerOver_Start = 1F;

        // Marker: PressedToPointerOver_End.
        internal const float M_PressedToPointerOver_End = 1F;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new Hash_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 28d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 24d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(11666666);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 28d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "NormalToPressed_Start", 0d },
                { "NormalToPressed_End", 0.323214285714286 },
                { "PointerOverToPressed_Start", 0.323214285714286 },
                { "PointerOverToPressed_End", 0.680357142857143 },
                { "PressedToNormal_Start", 0.716071428571429 },
                { "PressedToNormal_End", 1d },
                { "PressedToPointerOver_Start", 1d },
                { "PressedToPointerOver_End", 1d },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed partial class Hash_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 11666666;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CompositionColorBrush _colorBrush_AlmostDeepPink_FFF300C4;
            CompositionColorBrush _colorBrush_AlmostTurquoise_FF3CD9EB;
            CompositionContainerShape _containerShape_0;
            CompositionContainerShape _containerShape_1;
            CompositionContainerShape _containerShape_2;
            CompositionContainerShape _containerShape_3;
            CompositionEffectFactory _effectFactory;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPath _path_2;
            CompositionPathGeometry _pathGeometry_0;
            CompositionPathGeometry _pathGeometry_1;
            CompositionPathGeometry _pathGeometry_2;
            CompositionPathGeometry _pathGeometry_3;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_360_0;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_360_1;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -20F));
                    builder.AddCubicBezier(new Vector2(11.0459995F, -20F), new Vector2(20F, -11.0459995F), new Vector2(20F, 0F));
                    builder.AddCubicBezier(new Vector2(20F, 11.0459995F), new Vector2(11.0459995F, 20F), new Vector2(0F, 20F));
                    builder.AddCubicBezier(new Vector2(-11.0459995F, 20F), new Vector2(-20F, 11.0459995F), new Vector2(-20F, 0F));
                    builder.AddCubicBezier(new Vector2(-20F, -11.0459995F), new Vector2(-11.0459995F, -20F), new Vector2(0F, -20F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-12F, -12F));
                    builder.AddCubicBezier(new Vector2(-12F, -12F), new Vector2(-12F, 12F), new Vector2(-12F, 12F));
                    builder.AddCubicBezier(new Vector2(-12F, 12F), new Vector2(12F, 12F), new Vector2(12F, 12F));
                    builder.AddCubicBezier(new Vector2(12F, -1.16600001F), new Vector2(1.16499996F, -12F), new Vector2(-12F, -12F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Path
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-5.47200012F, -12.0679998F));
                    builder.AddCubicBezier(new Vector2(-5.47200012F, -12.0679998F), new Vector2(-12F, 12F), new Vector2(-12F, 12F));
                    builder.AddCubicBezier(new Vector2(-12F, 12F), new Vector2(9.39000034F, -0.386999995F), new Vector2(9.39000034F, -0.386999995F));
                    builder.AddCubicBezier(new Vector2(9.39000034F, -13.5530005F), new Vector2(7.69299984F, -12.0679998F), new Vector2(-5.47200012F, -12.0679998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Path
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-5.47200012F, -12.0679998F));
                    builder.AddCubicBezier(new Vector2(-5.47200012F, -12.0679998F), new Vector2(-12F, 12F), new Vector2(-12F, 12F));
                    builder.AddCubicBezier(new Vector2(-12F, 12F), new Vector2(10F, 0.180000007F), new Vector2(10F, 0.180000007F));
                    builder.AddCubicBezier(new Vector2(10F, -12.9860001F), new Vector2(7.69299984F, -12.0679998F), new Vector2(-5.47200012F, -12.0679998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -23F));
                    builder.AddCubicBezier(new Vector2(12.7019997F, -23F), new Vector2(23F, -12.7030001F), new Vector2(23F, 0F));
                    builder.AddCubicBezier(new Vector2(23F, 12.7019997F), new Vector2(12.7019997F, 23F), new Vector2(0F, 23F));
                    builder.AddCubicBezier(new Vector2(-12.7030001F, 23F), new Vector2(-23F, 12.7019997F), new Vector2(-23F, 0F));
                    builder.AddCubicBezier(new Vector2(-23F, -12.7030001F), new Vector2(-12.7030001F, -23F), new Vector2(0F, -23F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_5()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4.03000021F, 10.4189997F));
                    builder.AddCubicBezier(new Vector2(4.03000021F, 10.4189997F), new Vector2(-12F, -10.4200001F), new Vector2(-12F, -10.4200001F));
                    builder.AddCubicBezier(new Vector2(-12F, -10.4200001F), new Vector2(12F, -10.4200001F), new Vector2(12F, -10.4200001F));
                    builder.AddCubicBezier(new Vector2(12.3409996F, -2.64400005F), new Vector2(8.89500046F, 4.08300018F), new Vector2(4.03000021F, 10.4189997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_6()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.98699999F, 20.3500004F));
                    builder.AddCubicBezier(new Vector2(2.98699999F, 20.3500004F), new Vector2(-12F, -10.4189997F), new Vector2(-12F, -10.4189997F));
                    builder.AddCubicBezier(new Vector2(-12F, -10.4189997F), new Vector2(17.3320007F, -21.6310005F), new Vector2(17.3320007F, -21.6310005F));
                    builder.AddCubicBezier(new Vector2(17.6730003F, -13.8549995F), new Vector2(7.85200024F, 14.0139999F), new Vector2(2.98699999F, 20.3500004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - Shape tree root for layer: purple pie
            // ShapeGroup: Group 2 Offset:<36, 11.999999>
            CompositionColorBrush ColorBrush_AlmostBlueViolet_FF6C18FF()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x6C, 0x18, 0xFF));
            }

            CompositionColorBrush ColorBrush_AlmostDeepPink_FFF300C4()
            {
                return (_colorBrush_AlmostDeepPink_FFF300C4 == null)
                    ? _colorBrush_AlmostDeepPink_FFF300C4 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF3, 0x00, 0xC4))
                    : _colorBrush_AlmostDeepPink_FFF300C4;
            }

            // - - Shape tree root for layer: dark purple pie 
            // ShapeGroup: Group 2 Offset:<36, 11.999999>
            CompositionColorBrush ColorBrush_AlmostMediumBlue_FF2100C4()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x21, 0x00, 0xC4));
            }

            // - - Shape tree root for layer: dark red pie
            // ShapeGroup: Group 1 Offset:<36, 34.419>
            CompositionColorBrush ColorBrush_AlmostRed_FFEB0000()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xEB, 0x00, 0x00));
            }

            // - - Shape tree root for layer: red pie
            // ShapeGroup: Group 1 Offset:<36, 34.419>
            CompositionColorBrush ColorBrush_AlmostSalmon_FFF55276()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF5, 0x52, 0x76));
            }

            CompositionColorBrush ColorBrush_AlmostTurquoise_FF3CD9EB()
            {
                return (_colorBrush_AlmostTurquoise_FF3CD9EB == null)
                    ? _colorBrush_AlmostTurquoise_FF3CD9EB = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x3C, 0xD9, 0xEB))
                    : _colorBrush_AlmostTurquoise_FF3CD9EB;
            }

            // Shape tree root for layer: purple pie
            CompositionContainerShape ContainerShape_0()
            {
                if (_containerShape_0 != null) { return _containerShape_0; }
                var result = _containerShape_0 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(24F, 24F);
                // ShapeGroup: Group 2 Offset:<36, 11.999999>
                result.Shapes.Add(SpriteShape_1());
                return result;
            }

            // Shape tree root for layer: red pie
            CompositionContainerShape ContainerShape_1()
            {
                if (_containerShape_1 != null) { return _containerShape_1; }
                var result = _containerShape_1 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(24F, 24F);
                // ShapeGroup: Group 1 Offset:<36, 34.419>
                result.Shapes.Add(SpriteShape_3());
                return result;
            }

            // Shape tree root for layer: dark purple pie
            CompositionContainerShape ContainerShape_2()
            {
                if (_containerShape_2 != null) { return _containerShape_2; }
                var result = _containerShape_2 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(24F, 24F);
                // ShapeGroup: Group 2 Offset:<36, 11.999999>
                result.Shapes.Add(SpriteShape_5());
                return result;
            }

            // Shape tree root for layer: dark red pie
            CompositionContainerShape ContainerShape_3()
            {
                if (_containerShape_3 != null) { return _containerShape_3; }
                var result = _containerShape_3 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(24F, 24F);
                // ShapeGroup: Group 1 Offset:<36, 34.419>
                result.Shapes.Add(SpriteShape_7());
                return result;
            }

            CompositionEffectBrush EffectBrush_0()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            CompositionEffectBrush EffectBrush_1()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_2());
                result.SetSourceParameter("source", SurfaceBrush_3());
                return result;
            }

            CompositionEffectBrush EffectBrush_2()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_4());
                result.SetSourceParameter("source", SurfaceBrush_5());
                return result;
            }

            CompositionEffectBrush EffectBrush_3()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_6());
                result.SetSourceParameter("source", SurfaceBrush_7());
                return result;
            }

            CompositionEffectFactory EffectFactory()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                if (_effectFactory != null) { return _effectFactory; }
                var result = _effectFactory = _c.CreateEffectFactory(compositeEffect);
                return result;
            }

            CompositionPath Path_0()
            {
                if (_path_0 != null) { return _path_0; }
                var result = _path_0 = new CompositionPath(Geometry_1());
                return result;
            }

            CompositionPath Path_1()
            {
                if (_path_1 != null) { return _path_1; }
                var result = _path_1 = new CompositionPath(Geometry_5());
                return result;
            }

            CompositionPath Path_2()
            {
                if (_path_2 != null) { return _path_2; }
                var result = _path_2 = new CompositionPath(Geometry_6());
                return result;
            }

            CompositionPathGeometry PathGeometry_0()
            {
                return (_pathGeometry_0 == null)
                    ? _pathGeometry_0 = _c.CreatePathGeometry(new CompositionPath(Geometry_0()))
                    : _pathGeometry_0;
            }

            CompositionPathGeometry PathGeometry_1()
            {
                if (_pathGeometry_1 != null) { return _pathGeometry_1; }
                var result = _pathGeometry_1 = _c.CreatePathGeometry();
                return result;
            }

            CompositionPathGeometry PathGeometry_2()
            {
                return (_pathGeometry_2 == null)
                    ? _pathGeometry_2 = _c.CreatePathGeometry(new CompositionPath(Geometry_4()))
                    : _pathGeometry_2;
            }

            CompositionPathGeometry PathGeometry_3()
            {
                if (_pathGeometry_3 != null) { return _pathGeometry_3; }
                var result = _pathGeometry_3 = _c.CreatePathGeometry();
                return result;
            }

            // Shape tree root for layer: cyan circle
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<24, 24>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 24F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Shape tree root for layer: purple pie
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<36, 11.999999>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 36F, 11.999999F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // Shape tree root for layer: mask pie 1
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<24, 24>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 24F), ColorBrush_AlmostDeepPink_FFF300C4());;
                return result;
            }

            // - Shape tree root for layer: red pie
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                // Offset:<36, 34.419>
                var geometry = PathGeometry_3();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 36F, 34.4189987F), ColorBrush_AlmostSalmon_FFF55276());;
                return result;
            }

            // Shape tree root for layer: mask pie 2
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                // Offset:<24, 24>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 24F), ColorBrush_AlmostDeepPink_FFF300C4());;
                return result;
            }

            // - Shape tree root for layer: dark purple pie 
            // Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                // Offset:<36, 11.999999>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 36F, 11.999999F), ColorBrush_AlmostMediumBlue_FF2100C4());;
                return result;
            }

            // Shape tree root for layer: mask 1
            // Path 1
            CompositionSpriteShape SpriteShape_6()
            {
                // Offset:<24, 24>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 24F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Shape tree root for layer: dark red pie
            // Path 1
            CompositionSpriteShape SpriteShape_7()
            {
                // Offset:<36, 34.419>
                var geometry = PathGeometry_3();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 36F, 34.4189987F), ColorBrush_AlmostRed_FFEB0000());;
                return result;
            }

            // Shape tree root for layer: mask 2
            // Path 1
            CompositionSpriteShape SpriteShape_8()
            {
                // Offset:<24, 24>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 24F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionSurfaceBrush SurfaceBrush_2()
            {
                return _c.CreateSurfaceBrush(VisualSurface_2());
            }

            CompositionSurfaceBrush SurfaceBrush_3()
            {
                return _c.CreateSurfaceBrush(VisualSurface_3());
            }

            CompositionSurfaceBrush SurfaceBrush_4()
            {
                return _c.CreateSurfaceBrush(VisualSurface_4());
            }

            CompositionSurfaceBrush SurfaceBrush_5()
            {
                return _c.CreateSurfaceBrush(VisualSurface_5());
            }

            CompositionSurfaceBrush SurfaceBrush_6()
            {
                return _c.CreateSurfaceBrush(VisualSurface_6());
            }

            CompositionSurfaceBrush SurfaceBrush_7()
            {
                return _c.CreateSurfaceBrush(VisualSurface_7());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_2()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_2();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_3()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_3();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_4()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_4();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_5()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_5();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_6()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_6();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_7()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_7();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: purple pie
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask pie 1
                result.Children.InsertAtTop(ShapeVisual_2());
                return result;
            }

            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: red pie
                result.Children.InsertAtTop(ShapeVisual_3());
                return result;
            }

            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask pie 2
                result.Children.InsertAtTop(ShapeVisual_4());
                return result;
            }

            ContainerVisual ContainerVisual_4()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: dark purple pie
                result.Children.InsertAtTop(ShapeVisual_5());
                return result;
            }

            ContainerVisual ContainerVisual_5()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 1
                result.Children.InsertAtTop(ShapeVisual_6());
                return result;
            }

            ContainerVisual ContainerVisual_6()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: dark red pie
                result.Children.InsertAtTop(ShapeVisual_7());
                return result;
            }

            ContainerVisual ContainerVisual_7()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 2
                result.Children.InsertAtTop(ShapeVisual_8());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Shape tree root for layer: cyan circle
                children.InsertAtTop(ShapeVisual_0());
                children.InsertAtTop(SpriteVisual_0());
                children.InsertAtTop(SpriteVisual_1());
                children.InsertAtTop(SpriteVisual_2());
                children.InsertAtTop(SpriteVisual_3());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return (_cubicBezierEasingFunction_1 == null)
                    ? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 1F))
                    : _cubicBezierEasingFunction_1;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
                // Frame 4.
                result.InsertKeyFrame(0.142857149F, Path_0(), HoldThenStepEasingFunction());
                // Frame 9.
                result.InsertKeyFrame(0.321428567F, new CompositionPath(Geometry_2()), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new CompositionPath(Geometry_3()), CubicBezierEasingFunction_0());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, Path_0(), CubicBezierEasingFunction_0());
                return result;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_1(), StepThenHoldEasingFunction());
                // Frame 4.
                result.InsertKeyFrame(0.142857149F, Path_1(), HoldThenStepEasingFunction());
                // Frame 9.
                result.InsertKeyFrame(0.321428567F, Path_2(), CubicBezierEasingFunction_1());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, Path_2(), CubicBezierEasingFunction_1());
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, Path_1(), CubicBezierEasingFunction_0());
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_360_0()
            {
                // Frame 0.
                if (_rotationAngleInDegreesScalarAnimation_0_to_360_0 != null) { return _rotationAngleInDegreesScalarAnimation_0_to_360_0; }
                var result = _rotationAngleInDegreesScalarAnimation_0_to_360_0 = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, 0F, HoldThenStepEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.214285716F, 24.1079998F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 0.735000014F)));
                // Frame 9.
                result.InsertKeyFrame(0.321428567F, 76.7740021F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.120999999F), new Vector2(0.833000004F, 0.801999986F)));
                // Frame 12.
                result.InsertKeyFrame(0.428571433F, 149.067993F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.143999994F), new Vector2(0.833000004F, 0.827000022F)));
                // Frame 14.
                result.InsertKeyFrame(0.5F, 202.177002F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.157000005F), new Vector2(0.833000004F, 0.834999979F)));
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, 280.207001F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.167999998F), new Vector2(0.833000004F, 0.847000003F)));
                // Frame 19.
                result.InsertKeyFrame(0.678571403F, 321.240997F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.193000004F), new Vector2(0.833000004F, 0.879999995F)));
                // Frame 22.
                result.InsertKeyFrame(0.785714269F, 353.773987F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.225999996F), new Vector2(0.833000004F, 0.901000023F)));
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, 360F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.518999994F), new Vector2(0.708000004F, 1F)));
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_360_1()
            {
                // Frame 0.
                if (_rotationAngleInDegreesScalarAnimation_0_to_360_1 != null) { return _rotationAngleInDegreesScalarAnimation_0_to_360_1; }
                var result = _rotationAngleInDegreesScalarAnimation_0_to_360_1 = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, 0F, HoldThenStepEasingFunction());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, 360F, _c.CreateCubicBezierEasingFunction(new Vector2(0.379000008F, 0F), new Vector2(0.626999974F, 1F)));
                return result;
            }

            // Shape tree root for layer: cyan circle
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 5 Offset:<24, 24>
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Shape tree root for layer: purple pie
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_0());
                return result;
            }

            // Shape tree root for layer: mask pie 1
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 6 Offset:<24, 24>
                result.Shapes.Add(SpriteShape_2());
                return result;
            }

            // Shape tree root for layer: red pie
            ShapeVisual ShapeVisual_3()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_1());
                return result;
            }

            // Shape tree root for layer: mask pie 2
            ShapeVisual ShapeVisual_4()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 6 Offset:<24, 24>
                result.Shapes.Add(SpriteShape_4());
                return result;
            }

            // Shape tree root for layer: dark purple pie
            ShapeVisual ShapeVisual_5()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_2());
                return result;
            }

            // Shape tree root for layer: mask 1
            ShapeVisual ShapeVisual_6()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 5 Offset:<24, 24>
                result.Shapes.Add(SpriteShape_6());
                return result;
            }

            // Shape tree root for layer: dark red pie
            ShapeVisual ShapeVisual_7()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_3());
                return result;
            }

            // Shape tree root for layer: mask 2
            ShapeVisual ShapeVisual_8()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 5 Offset:<24, 24>
                result.Shapes.Add(SpriteShape_8());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_0();
                return result;
            }

            SpriteVisual SpriteVisual_1()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_1();
                return result;
            }

            SpriteVisual SpriteVisual_2()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_2();
                return result;
            }

            SpriteVisual SpriteVisual_3()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_3();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            internal Hash_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(48F, 48F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_0.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_360_0(), AnimationController_0());
                _containerShape_1.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_360_1(), AnimationController_0());
                _containerShape_2.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_360_0(), AnimationController_0());
                _containerShape_3.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_360_1(), AnimationController_0());
                _pathGeometry_1.StartAnimation("Path", PathKeyFrameAnimation_0(), AnimationController_0());
                _pathGeometry_3.StartAnimation("Path", PathKeyFrameAnimation_1(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _containerShape_0.StopAnimation("RotationAngleInDegrees");
                _containerShape_1.StopAnimation("RotationAngleInDegrees");
                _containerShape_2.StopAnimation("RotationAngleInDegrees");
                _containerShape_3.StopAnimation("RotationAngleInDegrees");
                _pathGeometry_1.StopAnimation("Path");
                _pathGeometry_3.StopAnimation("Path");
            }

        }
    }
}
