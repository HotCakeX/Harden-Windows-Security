<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.ViewOnlinePolicies"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:others="using:AppControlManager.Others"
    xmlns:VM="using:AppControlManager.ViewModels"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:customUI="using:AppControlManager.CustomUIElements"
    xmlns:behaviors="using:CommunityToolkit.WinUI.Behaviors"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:MSGraph="using:AppControlManager.MicrosoftGraph"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:animatedvisuals="using:AnimatedVisuals"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI"
    FlowDirection="{x:Bind AppSettings.ApplicationGlobalFlowDirection, Mode=OneWay}"
    mc:Ignorable="d">

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <InfoBar Grid.Row="0"
            Visibility="{x:Bind ViewModel.MainInfoBarVisibility, Mode=OneWay}"
            IsOpen="{x:Bind ViewModel.MainInfoBarIsOpen, Mode=TwoWay}"
            Message="{x:Bind ViewModel.MainInfoBarMessage, Mode=OneWay}"
            Severity="{x:Bind ViewModel.MainInfoBarSeverity, Mode=OneWay}"
            IsClosable="{x:Bind ViewModel.MainInfoBarIsClosable, Mode=OneWay}" />

        <Border Grid.Row="1" Margin="0,0,0,5" Style="{StaticResource GridCardStyle}" Padding="10">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" HorizontalSpacing="12" VerticalSpacing="12">

                <Button BorderThickness="0.8" x:Uid="MicrosoftGraphButton">

                    <Button.Resources>
                        <!-- https://github.com/microsoft/microsoft-ui-xaml/blob/main/src/controls/dev/CommonStyles/Button_themeresources.xaml#L13-L16 -->
                        <ResourceDictionary>
                            <LinearGradientBrush x:Key="ButtonBorderBrush" StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="HotPink" Offset="0.0"/>
                                <GradientStop Color="#D1C4E9" Offset="0.3"/>
                                <GradientStop Color="#BBDEFB" Offset="0.6"/>
                                <GradientStop Color="MediumPurple" Offset="1.0"/>
                            </LinearGradientBrush>

                            <LinearGradientBrush x:Key="ButtonBorderBrushPointerOver" StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="HotPink" Offset="0.0"/>
                                <GradientStop Color="#D1C4E9" Offset="0.3"/>
                                <GradientStop Color="#BBDEFB" Offset="0.6"/>
                                <GradientStop Color="MediumPurple" Offset="1.0"/>
                            </LinearGradientBrush>

                            <LinearGradientBrush x:Key="ButtonBorderBrushPressed" StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="HotPink" Offset="0.0"/>
                                <GradientStop Color="#D1C4E9" Offset="0.3"/>
                                <GradientStop Color="#BBDEFB" Offset="0.6"/>
                                <GradientStop Color="MediumPurple" Offset="1.0"/>
                            </LinearGradientBrush>
                        </ResourceDictionary>
                    </Button.Resources>

                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                <AnimatedIcon.Source>
                                    <animatedvisuals:MicrosoftCloud/>
                                </AnimatedIcon.Source>
                            </AnimatedIcon>
                            <TextBlock Text="Microsoft Graph" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout Placement="Bottom">

                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">

                                    <Setter Property="Padding" Value="5,5,5,0"/>

                                    <!-- Same corner radius as the one in PanelStyle  -->
                                    <Setter Property="CornerRadius" Value="8" />

                                    <!--
                                         Important: the "resolution order" for widths (at least in winui) is minwidth, maxwidth, width
                                         Width does not override MaxWidth
                                         https://learn.microsoft.com/uwp/api/windows.ui.xaml.frameworkelement.maxwidth?view=winrt-26100#remarks
                                         -->
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <StackPanel Width="500"
                                VerticalAlignment="Top"
                                Orientation="Vertical"
                                Spacing="8">

                                <controls:Segmented x:Name="segmentedControl"
                                        HorizontalAlignment="Stretch"
                                        SelectedIndex="0">
                                    <controls:SegmentedItem Content="Active Account"                                        
                                        Tag="Active">
                                        <controls:SegmentedItem.Icon>
                                            <IconSourceElement>
                                                <BitmapIconSource UriSource="/Assets/External/Bottle.png" ShowAsMonochrome="False" />
                                            </IconSourceElement>
                                        </controls:SegmentedItem.Icon>

                                    </controls:SegmentedItem>

                                    <controls:SegmentedItem Content="Sign In"                                   
                                    Tag="Authentication" >
                                        <controls:SegmentedItem.Icon>
                                            <IconSourceElement>
                                                <BitmapIconSource UriSource="/Assets/External/Authentication.png" ShowAsMonochrome="False" />
                                            </IconSourceElement>
                                        </controls:SegmentedItem.Icon>
                                    </controls:SegmentedItem>

                                    <controls:SegmentedItem Content="Signed In Accounts"                                    
                                    Tag="SignedIn">
                                        <controls:SegmentedItem.Icon>
                                            <IconSourceElement>
                                                <BitmapIconSource UriSource="/Assets/External/Vault.png" ShowAsMonochrome="False" />
                                            </IconSourceElement>
                                        </controls:SegmentedItem.Icon>
                                    </controls:SegmentedItem>
                                </controls:Segmented>

                                <controls:SwitchPresenter Value="{Binding SelectedItem.Tag, ElementName=segmentedControl}" HorizontalAlignment="Center" VerticalAlignment="Center">

                                    <controls:Case Value="Active">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                            Style="{StaticResource PanelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" Spacing="10" Padding="10">

                                            <controls:WrapPanel Orientation="Vertical" VerticalSpacing="5" HorizontalAlignment="Center" HorizontalSpacing="10">

                                                <TextBlock Text="Details of the account that's currently in use" Margin="0,0,0,5" HorizontalAlignment="Center"/>

                                                <TextBox IsReadOnly="True" x:Uid="CurrentActiveAccountUsername" Text="{x:Bind ViewModel.AuthCompanionCLS.CurrentActiveAccountUsername, Mode=OneWay}" HorizontalAlignment="Center" Width="470"/>
                                                <TextBox IsReadOnly="True" x:Uid="CurrentActiveAccountTenantID" Text="{x:Bind ViewModel.AuthCompanionCLS.CurrentActiveAccountTenantID, Mode=OneWay}" Margin="0,8,0,0" HorizontalAlignment="Center" Width="470"/>
                                                <TextBox IsReadOnly="True" x:Uid="CurrentActiveAccountAccountIdentifier" Text="{x:Bind ViewModel.AuthCompanionCLS.CurrentActiveAccountAccountIdentifier, Mode=OneWay}" Margin="0,8,0,0" HorizontalAlignment="Center" Width="470"/>
                                                <TextBox IsReadOnly="True" x:Uid="CurrentActiveAccountPermissions" Text="{x:Bind ViewModel.AuthCompanionCLS.CurrentActiveAccountPermissions, Mode=OneWay}" Margin="0,8,0,0" HorizontalAlignment="Center" Width="470"/>

                                            </controls:WrapPanel>

                                        </StackPanel>

                                    </controls:Case>

                                    <controls:Case Value="Authentication">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                              animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                              Style="{StaticResource PanelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical" Spacing="10" Padding="10">

                                            <StackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Center">

                                                <Button IsEnabled="{x:Bind ViewModel.AuthCompanionCLS.SignInButtonState, Mode=OneWay}"
                                                        x:Uid="SignInButton" Click="{x:Bind ViewModel.AuthCompanionCLS.SignIn}">
                                                    <Button.Content>
                                                        <StackPanel Orientation="Horizontal">
                                                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                                                <AnimatedIcon.Source>
                                                                    <animatedvisuals:SignIn/>
                                                                </AnimatedIcon.Source>
                                                            </AnimatedIcon>
                                                            <TextBlock Text="Sign In" Margin="5,0,0,0" />
                                                        </StackPanel>
                                                    </Button.Content>
                                                </Button>

                                                <Button IsEnabled="{x:Bind ViewModel.AuthCompanionCLS.SignOutButtonState, Mode=OneWay}"
                                                        x:Uid="CancelSigningInButton" Click="{x:Bind ViewModel.AuthCompanionCLS.MSGraphCancelSignInButton_Click}">
                                                    <Button.Content>
                                                        <StackPanel Orientation="Horizontal">
                                                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                                                <AnimatedIcon.Source>
                                                                    <animatedvisuals:Cancel/>
                                                                </AnimatedIcon.Source>
                                                            </AnimatedIcon>
                                                            <TextBlock Text="Cancel Signing In" Margin="5,0,0,0" />
                                                        </StackPanel>
                                                    </Button.Content>
                                                </Button>

                                            </StackPanel>

                                            <ComboBox
                                                ItemsSource="{x:Bind ViewModel.AuthCompanionCLS.SignInMethodsComboBoxSource}"
                                                Margin="0,5,0,0"
                                                HorizontalAlignment="Center"
                                                x:Uid="SignInMethodsComboBox"
                                                SelectedItem="{x:Bind ViewModel.AuthCompanionCLS.SignInMethodsComboBoxSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <!-- To center the header text -->
                                                <ComboBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}"
                                                            HorizontalAlignment="Center"
                                                            TextAlignment="Center" />
                                                    </DataTemplate>
                                                </ComboBox.HeaderTemplate>
                                            </ComboBox>

                                            <ComboBox
                                                ItemsSource="{x:Bind ViewModel.AuthCompanionCLS.AuthenticationContextComboBoxSource}"
                                                Margin="0,5,0,0"
                                                HorizontalAlignment="Center"
                                                x:Uid="AuthenticationContextComboBox"
                                                SelectedItem="{x:Bind ViewModel.AuthCompanionCLS.AuthenticationContextComboBoxSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <!-- To center the header text -->
                                                <ComboBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}"
                                                            HorizontalAlignment="Center"
                                                            TextAlignment="Center" />
                                                    </DataTemplate>
                                                </ComboBox.HeaderTemplate>
                                            </ComboBox>

                                        </StackPanel>
                                    </controls:Case>
                                    <controls:Case Value="SignedIn">


                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                            Style="{StaticResource PanelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical" Spacing="5" Padding="3">

                                            <StackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Center" VerticalAlignment="Top">

                                                <Button HorizontalAlignment="Center" x:Uid="RemoveAccountButton" VerticalAlignment="Top" Click="{x:Bind ViewModel.AuthCompanionCLS.LogOutOfSelectedAccount}">
                                                    <Button.Content>
                                                        <StackPanel Orientation="Horizontal">
                                                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                                                <AnimatedIcon.Source>
                                                                    <animatedvisuals:Logout/>
                                                                </AnimatedIcon.Source>
                                                            </AnimatedIcon>
                                                            <TextBlock Text="Remove" Margin="5,0,0,0" />
                                                        </StackPanel>
                                                    </Button.Content>
                                                </Button>


                                                <Button HorizontalAlignment="Center" x:Uid="SetAccountAsActiveButton" VerticalAlignment="Top" Click="{x:Bind ViewModel.AuthCompanionCLS.SetActiveFromListView}">
                                                    <Button.Content>
                                                        <StackPanel Orientation="Horizontal">
                                                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                                                <AnimatedIcon.Source>
                                                                    <animatedvisuals:Select/>
                                                                </AnimatedIcon.Source>
                                                            </AnimatedIcon>
                                                            <TextBlock Text="Set as Active" Margin="5,0,0,0" />
                                                        </StackPanel>
                                                    </Button.Content>
                                                </Button>

                                            </StackPanel>

                                            <!-- Shimmer -->

                                            <StackPanel Margin="0,10,0,0"
                                                Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsShimmerVisibility, Mode=OneWay}"    
                                                Width="450"
                                                Height="255"
                                                Padding="16"
                                                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                                                BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                                                BorderThickness="1"
                                                CornerRadius="4"
                                                Spacing="12">

                                                <Grid Width="400" Height="45" CornerRadius="7" HorizontalAlignment="Center">
                                                    <labs:Shimmer Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsShimmerVisibility, Mode=OneWay}" />
                                                </Grid>

                                                <Grid Width="400" Height="45" CornerRadius="7" HorizontalAlignment="Center">
                                                    <labs:Shimmer Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsShimmerVisibility, Mode=OneWay}" />
                                                </Grid>

                                                <Grid Width="400" Height="45" CornerRadius="7" HorizontalAlignment="Center">
                                                    <labs:Shimmer Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsShimmerVisibility, Mode=OneWay}" />
                                                </Grid>

                                                <Grid Width="400" Height="45" CornerRadius="7" HorizontalAlignment="Center">
                                                    <labs:Shimmer Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsShimmerVisibility, Mode=OneWay}" />
                                                </Grid>

                                            </StackPanel>


                                            <ListView HorizontalAlignment="Center"
                                                Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsListViewVisibility, Mode=OneWay}"
                                                x:Name="AuthenticatedAccountsListView"
                                                BorderThickness="0"
                                                CornerRadius="5"
                                                ItemsSource="{x:Bind ViewModelMSGraph.AuthenticatedAccounts, Mode=OneWay}"
                                                SelectedItem="{x:Bind ViewModel.AuthCompanionCLS.ListViewSelectedAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Height="300"                                               
                                                SelectionMode="Single">
                                                <ListView.ItemTemplate>
                                                    <DataTemplate x:DataType="MSGraph:AuthenticatedAccounts">
                                                        <Grid Padding="2,10,2,10">
                                                            <Grid.Resources>
                                                                <ResourceDictionary 
                                                                    Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml"/>
                                                            </Grid.Resources>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>

                                                            <TextBox IsReadOnly="True" Header="UserName" Text="{x:Bind Username}" Grid.Column="0" Grid.Row="0"/>
                                                            <TextBox IsReadOnly="True" Header="Tenant ID" Text="{x:Bind TenantID}" Margin="0,8,0,0" Grid.Column="0" Grid.Row="1"/>
                                                            <TextBox IsReadOnly="True" Header="Account Identifier" Text="{x:Bind AccountIdentifier}" Margin="0,8,0,0" Grid.Column="0" Grid.Row="2"/>
                                                            <TextBox IsReadOnly="True" Header="Permissions" Text="{x:Bind Permissions}" Margin="0,8,0,0" Grid.Column="0" Grid.Row="3"/>

                                                        </Grid>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>

                                            </ListView>

                                        </StackPanel>

                                    </controls:Case>
                                </controls:SwitchPresenter>

                            </StackPanel>

                        </Flyout>
                    </Button.Flyout>
                </Button>

                <Button HorizontalAlignment="Center" IsEnabled="{x:Bind ViewModel.RetrievePoliciesButtonState, Mode=OneWay}"
                        Click="{x:Bind ViewModel.GetOnlinePolicies}" VerticalAlignment="Center" x:Uid="RetrieveOnlinePoliciesButton">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                <AnimatedIcon.Source>
                                    <animatedvisuals:Refresh/>
                                </AnimatedIcon.Source>
                            </AnimatedIcon>
                            <TextBlock Text="Retrieve Online Policies" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <TextBlock Text="{x:Bind ViewModel.PoliciesCountTextBox, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTipService.ToolTip="The count of all of the displayed policies"/>

                <Button IsEnabled="{x:Bind ViewModel.RemovePolicyButtonState, Mode=OneWay}" Click="{x:Bind ViewModel.RemovePolicy_Click}" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTipService.ToolTip="Remove any non-system policy from the system">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                <AnimatedIcon.Source>
                                    <animatedvisuals:TrashCan/>
                                </AnimatedIcon.Source>
                            </AnimatedIcon>
                            <TextBlock Text="Remove Policy" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <TextBox Text="{x:Bind ViewModel.SearchBoxTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Uid="SearchPoliciesTextBox" IsEnabled="{x:Bind ViewModel.SearchTextBoxState, Mode=OneWay}"
                         TextChanged="{x:Bind ViewModel.SearchBox_TextChanged}" VerticalAlignment="Center" />

            </controls:WrapPanel>

        </Border>

        <customUI:ListViewV2
           RegistryKey="Online_Deployed_Policies"
           Grid.Row="2"
           SelectionMode="Single"
           IsEnabled="{x:Bind ViewModel.ListViewState, Mode=OneWay}"
           SelectedIndex="{x:Bind ViewModel.ListViewSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
           SelectedItem="{x:Bind ViewModel.ListViewSelectedPolicy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
           ItemsSource="{x:Bind ViewModel.AllPolicies, Mode=OneWay}"
           SelectionChanged="{x:Bind ViewModel.DeployedPolicies_SelectionChanged}">

            <customUI:ListViewV2.Header>

                <Border CornerRadius="5" Background="Black">
                    <interactivity:Interaction.Behaviors>
                        <customUI:StickyHeaderBehaviorV2/>
                    </interactivity:Interaction.Behaviors>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth1, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth2, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth3, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth4, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth5, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth6, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>
                        <Button x:Uid="PolicyIDColumnHeaderBtn" Grid.Column="0" Margin="10,0,0,0" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.SortByPolicyID}"/>
                        <Button x:Uid="BasePolicyIDColumnHeaderBtn" Grid.Column="1" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.SortByBasePolicyID}"/>
                        <Button x:Uid="FriendlyNameColumnHeaderBtn" Grid.Column="2" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.SortByFriendlyName}"/>
                        <Button x:Uid="VersionColumnHeaderBtn" Grid.Column="3" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.SortByVersion}"/>
                        <Button x:Uid="IsSignedPolicyColumnHeaderBtn" Grid.Column="4" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.SortByIsSignedPolicy}"/>
                        <Button x:Uid="PolicyOptionsColumnHeaderBtn" Grid.Column="5" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.SortByPolicyOptions}"/>
                    </Grid>
                </Border>
            </customUI:ListViewV2.Header>

            <!-- DataTemplate for ListView items -->
            <customUI:ListViewV2.ItemTemplate>
                <DataTemplate x:DataType="others:CiPolicyInfo">
                    <!-- Setting Background="Transparent" on the Grid makes it hit-test visible, meaning that even areas without any child elements (like empty spaces in the column) will respond to pointer events.  -->
                    <Grid Background="Transparent">

                        <Grid.ContextFlyout>
                            <MenuFlyout>

                                <MenuFlyoutItem x:Uid="CopyRow" Click="{x:Bind OnlineParentViewModel.ListViewFlyoutMenuCopy_Click}">
                                    <MenuFlyoutItem.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="C" Modifiers="Control" Invoked="{x:Bind OnlineParentViewModel.ListViewFlyoutMenuCopy_Click}"/>
                                    </MenuFlyoutItem.KeyboardAccelerators>
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSubItem x:Uid="CopyIndividualItems">
                                    <MenuFlyoutSubItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutSubItem.Icon>

                                    <MenuFlyoutSubItem.Items>

                                        <MenuFlyoutItem x:Uid="PolicyIDHeader" Click="{x:Bind OnlineParentViewModel.CopyPolicyID_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="BasePolicyIDHeader" Click="{x:Bind OnlineParentViewModel.CopyBasePolicyID_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FriendlyNameHeader" Click="{x:Bind OnlineParentViewModel.CopyFriendlyName_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="VersionHeader" Click="{x:Bind OnlineParentViewModel.CopyVersion_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="IsSignedPolicyHeader" Click="{x:Bind OnlineParentViewModel.CopyIsSignedPolicy_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="PolicyOptionsHeader" Click="{x:Bind OnlineParentViewModel.CopyPolicyOptionsDisplay_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                    </MenuFlyoutSubItem.Items>

                                </MenuFlyoutSubItem>
                            </MenuFlyout>
                        </Grid.ContextFlyout>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind OnlineParentViewModel.ColumnWidth1, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind OnlineParentViewModel.ColumnWidth2, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind OnlineParentViewModel.ColumnWidth3, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind OnlineParentViewModel.ColumnWidth4, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind OnlineParentViewModel.ColumnWidth5, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind OnlineParentViewModel.ColumnWidth6, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Bind PolicyID}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="0"/>
                        <TextBlock Text="{x:Bind BasePolicyID}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="1"/>
                        <TextBlock Text="{x:Bind FriendlyName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="2"/>
                        <TextBlock Text="{x:Bind VersionString}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="3"/>
                        <TextBlock Text="{x:Bind IsSignedPolicy}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="4"/>
                        <TextBlock Text="{x:Bind PolicyOptionsDisplay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="5"/>
                    </Grid>
                </DataTemplate>
            </customUI:ListViewV2.ItemTemplate>
        </customUI:ListViewV2>

    </Grid>
</Page>
