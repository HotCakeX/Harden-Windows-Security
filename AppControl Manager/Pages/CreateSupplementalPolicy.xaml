<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.CreateSupplementalPolicy"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:others="using:AppControlManager.Others"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:animatedvisuals="using:AnimatedVisuals"
    FlowDirection="{x:Bind AppSettings.ApplicationGlobalFlowDirection, Mode=OneWay}"
    mc:Ignorable="d">

    <ScrollView x:Name="MainScrollView" PointerPressed="MainScrollView_PointerPressed">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.Resources>

                <!-- For the Packaged Apps ListView Grouping -->
                <CollectionViewSource x:Name="PackagedAppsCollectionViewSource" IsSourceGrouped="True"/>

                <!-- Defines a single App that is displayed in the ListView -->

                <DataTemplate x:Key="PackagedAppsListViewTemplate" x:DataType="others:PackagedAppView">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border CornerRadius="15" VerticalAlignment="Center"
                            HorizontalAlignment="Center" BorderThickness="0" Grid.RowSpan="3" Grid.Column="0">
                            <Image Width ="32" Height="32" Margin="6" Source="{x:Bind Logo}" />
                        </Border>

                        <TextBlock Grid.Column="1"
                            Grid.Row="0"
                            Text="{x:Bind DisplayName}"
                            x:Phase="1"
                            Style="{ThemeResource BaseTextBlockStyle}"
                            Margin="12,6,0,0"/>
                        <TextBlock  Grid.Column="1"
                            Grid.Row="1"
                            Text="{x:Bind Version}"
                            x:Phase="2"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Margin="12,6,0,0"/>

                        <TextBlock  Grid.Column="1"
                            Grid.Row="2"
                            Text="{x:Bind PackageFamilyName}"
                            x:Phase="2"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Margin="12,0,0,6"/>
                    </Grid>
                </DataTemplate>

            </Grid.Resources>

            <controls:WrapPanel Grid.Row="0" VerticalSpacing="4" HorizontalSpacing="4" Orientation="Vertical" Margin="6,0,6,10">

                <TextBlock x:Uid="CreateSupplementalPolicyPageTitle" TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}" />

                <HyperlinkButton x:Uid="GuideButtonAtTop" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Create-Supplemental-App-Control-Policy" />

            </controls:WrapPanel>

            <StackPanel HorizontalAlignment="Stretch" Spacing="{StaticResource SettingsCardSpacing}" Grid.Row="1" Margin="0,40,0,0">

                <win:StackPanel.ChildrenTransitions>
                    <win:EntranceThemeTransition FromVerticalOffset="50" />
                    <win:RepositionThemeTransition IsStaggeringEnabled="False" />
                </win:StackPanel.ChildrenTransitions>


                <!-- Files and Folders Scan -->
                <controls:SettingsExpander x:Name="FilesAndFoldersSettingsCard"
                    x:Uid="SupplementalFilesAndFoldersSettingsCard"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE71D;}" IsExpanded="False">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="FilesAndFoldersInfoBar"
                            Title="Current Status"
                            BorderThickness="0"
                            CornerRadius="0"
                            IsIconVisible="True"
                            IsOpen="False"
                            IsClosable="False"
                            Severity="Informational">
                            <InfoBar.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.FilesAndFoldersInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind OpenInPolicyEditor_FilesAndFolders}" />
                            </InfoBar.ActionButton>
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>


                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="CreateFilesAndFoldersSupplementalPolicyButton" x:Uid="CreateSupplementalPolicyButton"
                            Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" Click="{x:Bind CreateFilesAndFoldersSupplementalPolicyButton_Click}" />

                        <ToggleButton x:Name="FilesAndFoldersPolicyDeployToggleButton" Click="FilesAndFoldersPolicyDeployToggleButton_Click" x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                        <TeachingTip x:Name="CreateSupplementalPolicyTeachingTip" Target="{x:Bind CreateFilesAndFoldersSupplementalPolicyButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard x:Name="FilesAndFoldersBrowseForFilesSettingsCard" Description="Browse for file paths to scan and include in the Supplemental policy."
                            Header="Browse For Files"
                            IsClickEnabled="True" IsActionIconVisible="False" Click="{x:Bind FilesAndFoldersBrowseForFilesSettingsCard_Click}" Holding="FilesAndFoldersBrowseForFilesSettingsCard_Holding" RightTapped="{x:Bind FilesAndFoldersBrowseForFilesSettingsCard_RightTapped}">

                            <Button x:Name="FilesAndFoldersBrowseForFilesButton" x:Uid="FileBrowseButton" Click="{x:Bind FilesAndFoldersBrowseForFilesButton_Click}" RightTapped="{x:Bind FilesAndFoldersBrowseForFilesButton_RightTapped}">

                                <Button.Flyout>
                                    <Flyout x:Name="FilesAndFoldersBrowseForFilesButton_Flyout">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="{x:Bind FilesAndFoldersBrowseForFilesButton_Flyout_Clear_Click}" />

                                            <TextBlock x:Uid="ViewSelectedFilesTextBlock" TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="FilesAndFoldersBrowseForFilesButton_SelectedFilesTextBox"
                                                TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                                MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                            </Button>

                        </controls:SettingsCard>

                        <controls:SettingsCard Description="Browse for Folder paths to scan and include in the Supplemental policy. The folders will be scanned recursively."
                            Header="Browse For Folders" Holding="FilesAndFoldersBrowseForFoldersSettingsCard_Holding" RightTapped="{x:Bind FilesAndFoldersBrowseForFoldersSettingsCard_RightTapped}" x:Name="FilesAndFoldersBrowseForFoldersSettingsCard" Click="{x:Bind FilesAndFoldersBrowseForFoldersSettingsCard_Click}" IsClickEnabled="True" IsActionIconVisible="False">

                            <Button RightTapped="{x:Bind FilesAndFoldersBrowseForFoldersButton_RightTapped}" x:Name="FilesAndFoldersBrowseForFoldersButton" x:Uid="FolderBrowseButton" Click="{x:Bind FilesAndFoldersBrowseForFoldersButton_Click}">

                                <Button.Flyout>
                                    <Flyout x:Name="FilesAndFoldersBrowseForFoldersButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="{x:Bind FilesAndFoldersBrowseForFoldersButton_Flyout_Clear_Click}" />

                                            <TextBlock x:Uid="ViewSelectedFoldersTextBlock" TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="FilesAndFoldersBrowseForFoldersButton_SelectedFoldersTextBox"
                                                 TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                                 MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                            </Button>

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Uid="SupplementalPolicyNameSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox x:Name="FilesAndFoldersPolicyNameTextBox" TextChanged="FilesAndFoldersPolicyNameTextBox_TextChanged" x:Uid="SupplementalPolicyNameTextBox"/>
                        </controls:SettingsCard>

                        <controls:SettingsCard Description="Browse for the Base policy XML file that this Supplemental policy will be associated to."
                            Header="Base Policy File" IsClickEnabled="True" Click="{x:Bind FilesAndFoldersBrowseForBasePolicySettingsCard_Click}"
                            x:Name="FilesAndFoldersBrowseForBasePolicySettingsCard" Holding="FilesAndFoldersBrowseForBasePolicySettingsCard_Holding" RightTapped="{x:Bind FilesAndFoldersBrowseForBasePolicySettingsCard_RightTapped}" IsActionIconVisible="False">

                            <Button x:Name="FilesAndFoldersBrowseForBasePolicyButton" RightTapped="{x:Bind FilesAndFoldersBrowseForBasePolicyButton_RightTapped}"
                                    x:Uid="PickPolicyFileButton" Click="{x:Bind FilesAndFoldersBrowseForBasePolicyButton_Click}">

                                <Button.Flyout>
                                    <Flyout x:Name="FilesAndFoldersBrowseForBasePolicyButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="{x:Bind FilesAndFoldersBrowseForBasePolicyButton_Flyout_Clear_Click}" />

                                            <TextBlock x:Uid="ViewSelectedBasePolicyTextBlock" TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="FilesAndFoldersBrowseForBasePolicyButton_SelectedBasePolicyTextBox"
                                                TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                                MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                                <Button.Content>
                                    <controls:WrapPanel Orientation="Horizontal">

                                        <AnimatedIcon x:Name="FilesAndFoldersBasePolicyLightAnimatedIcon" Height="20" Margin="0,0,5,0" Width="20">
                                            <AnimatedIcon.Source>
                                                <animatedvisuals:Light/>
                                            </AnimatedIcon.Source>
                                        </AnimatedIcon>

                                        <TextBlock x:Uid="BrowseTextBlock" />

                                    </controls:WrapPanel>
                                </Button.Content>

                            </Button>

                        </controls:SettingsCard>

                        <controls:SettingsCard Description="Select the level based on which the detected files will be scanned."
                            Header="Select Scan Level" Click="{x:Bind ScanLevelComboBoxSettingsCard_Click}" x:Name="ScanLevelComboBoxSettingsCard" IsClickEnabled="True" IsActionIconVisible="False">

                            <ComboBox x:Name="ScanLevelComboBox" SelectionChanged="ScanLevelComboBox_SelectionChanged" x:Uid="ScanLevelComboBox"
                                 SelectedIndex="0">
                                <x:String>File Publisher</x:String>
                                <x:String>Publisher</x:String>
                                <x:String>Hash</x:String>
                                <x:String>File Path</x:String>
                                <x:String>WildCard Folder Path</x:String>
                            </ComboBox>

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Uid="ScalabilitySettingsCard" IsClickEnabled="False" IsActionIconVisible="False">

                            <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="10" VerticalSpacing="10">

                                <ProgressRing x:Name="FilesAndFoldersProgressRing" IsIndeterminate="False" Value="0" ToolTipService.ToolTip="The Supplemental policy creation progress" />

                                <!-- Scalability Button with RadialGauge Flyout -->
                                <Button x:Name="ScalabilityButton" x:Uid="ScalabilityButton">
                                    <Button.Flyout>
                                        <Flyout>
                                            <StackPanel>
                                                <controls:RadialGauge x:Name="ScalabilityRadialGauge"
                                                    StepSize="1"
                                                    TickSpacing="2"
                                                    ScaleWidth="12"
                                                    NeedleWidth="5"
                                                    NeedleLength="80"
                                                    TickLength="8"
                                                    TickWidth="0"
                                                    ScalePadding="0"
                                                    TickPadding="24"
                                                    Width="200"
                                                    Maximum="120"
                                                    Minimum="2"
                                                    ValueChanged="ScalabilityRadialGauge_ValueChanged"
                                                    ValueStringFormat="N0"/>
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                </Button>

                            </controls:WrapPanel>

                        </controls:SettingsCard>

                        <controls:SettingsCard Description="View the details of all of the files that were detected in the file and folder paths you selected."
                            Header="View detected file details"
                            HeaderIcon="{ui:FontIcon Glyph=&#xE83B;}"
                            IsClickEnabled="True" IsActionIconVisible="True"
                            IsEnabled="False"
                            x:Name="FilesAndFoldersViewFileDetailsSettingsCard"
                            Click="{x:Bind FilesAndFoldersViewFileDetailsSettingsCard_Click}">

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>

                <!-- Certificate -->
                <controls:SettingsExpander x:Name="CertificatesSettingsCard"
                    Description="Create Supplemental policy based on certificates"
                    Header="Certificates"
                    HeaderIcon="{ui:FontIcon Glyph=&#xEB95;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="CertificatesInfoBar"
                            Title="Current Status"
                            BorderThickness="0"
                            CornerRadius="0"
                            IsIconVisible="True"
                            IsOpen="False"
                            IsClosable="False"
                            Severity="Informational">
                            <InfoBar.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.CertificatesInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind OpenInPolicyEditor_Certificates}" />
                            </InfoBar.ActionButton>
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>


                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="CreateCertificatesSupplementalPolicyButton" Click="{x:Bind CreateCertificatesSupplementalPolicyButton_Click}" x:Uid="CreateSupplementalPolicyButton"
                            Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" />

                        <ToggleButton x:Name="CertificatesPolicyDeployToggleButton" Click="CertificatesPolicyDeployToggleButton_Click" x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                        <TeachingTip x:Name="CreateCertificateBasedSupplementalPolicyTeachingTip" Target="{x:Bind CreateCertificatesSupplementalPolicyButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard Description="Browse for certificate file paths to scan and include in the Supplemental policy."
                            x:Name="CertificatesBrowseForCertsSettingsCard"
                            Header="Browse For Certificates" Click="{x:Bind CertificatesBrowseForCertsSettingsCard_Click}"
                            IsClickEnabled="True" IsActionIconVisible="False">

                            <Button x:Name="CertificatesBrowseForCertsButton" x:Uid="FileBrowseButton" Click="{x:Bind CertificatesBrowseForCertsButton_Click}" />

                        </controls:SettingsCard>


                        <controls:SettingsCard x:Uid="SupplementalPolicyNameSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox x:Name="CertificatesPolicyNameTextBox" TextChanged="CertificatesPolicyNameTextBox_TextChanged" x:Uid="SupplementalPolicyNameTextBox"/>
                        </controls:SettingsCard>

                        <controls:SettingsCard x:Name="CertificatesBrowseForBasePolicySettingsCard" Description="Browse for the Base policy XML file that this Supplemental policy will be associated to."
                                Header="Base Policy File" IsClickEnabled="True" IsActionIconVisible="False" Click="{x:Bind CertificatesBrowseForBasePolicySettingsCard_Click}"
                                               RightTapped="{x:Bind CertificatesBrowseForBasePolicySettingsCard_RightTapped}" Holding="CertificatesBrowseForBasePolicySettingsCard_Holding">

                            <Button x:Name="CertificatesBrowseForBasePolicyButton" RightTapped="{x:Bind CertificatesBrowseForBasePolicyButton_RightTapped}"
                                    x:Uid="PickPolicyFileButton" Click="{x:Bind CertificatesBrowseForBasePolicyButton_Click}">

                                <Button.Flyout>
                                    <Flyout x:Name="CertificatesBrowseForBasePolicyButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="{x:Bind CertificatesBrowseForBasePolicyButton_Flyout_Clear_Click}" />

                                            <TextBlock x:Uid="ViewSelectedBasePolicyTextBlock" TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="CertificatesBrowseForBasePolicyButton_SelectedBasePolicyTextBox"
                                                TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                                MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                                <Button.Content>
                                    <controls:WrapPanel Orientation="Horizontal">

                                        <AnimatedIcon x:Name="CertificatesBasePolicyPathLightAnimatedIcon" Height="20" Margin="0,0,5,0" Width="20">
                                            <AnimatedIcon.Source>
                                                <animatedvisuals:Light/>
                                            </AnimatedIcon.Source>
                                        </AnimatedIcon>

                                        <TextBlock x:Uid="BrowseTextBlock" />

                                    </controls:WrapPanel>
                                </Button.Content>

                            </Button>

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Name="CertificatesSigningScenarioSettingsCard" Description="Choose wether this certificate will be added to the User Mode or Kernel Mode Signing Scenario"
                                Header="Signing Scenario" IsClickEnabled="False" IsActionIconVisible="False">

                            <RadioButtons Header="Signing Scenario" x:Name="SigningScenariosRadioButtons">
                                <RadioButton Content="User Mode" IsChecked="True" Checked="{x:Bind UserModeRadioButton_Checked}"/>
                                <RadioButton Content="Kernel Mode" Checked="{x:Bind KernelModeRadioButton_Checked}"/>
                            </RadioButtons>

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>


                <!-- ISG -->
                <controls:SettingsExpander x:Name="ISGSettingsCard"
                    Description="Create a Supplemental policy that only enables the usage of the Intelligent Security Graph to automatically authorize reputable apps and files"
                    Header="ISG"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE734;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="ISGInfoBar"
                            Title="Current Status"
                            BorderThickness="0"
                            CornerRadius="0"
                            IsIconVisible="True"
                            IsOpen="False"
                            IsClosable="False"
                            Severity="Informational">
                            <InfoBar.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.ISGInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind OpenInPolicyEditor_ISG}" />
                            </InfoBar.ActionButton>
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="CreateISGSupplementalPolicyButton" Click="{x:Bind CreateISGSupplementalPolicyButton_Click}" x:Uid="CreateSupplementalPolicyButton"
                            Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" />

                        <ToggleButton x:Name="ISGPolicyDeployToggleButton" Click="ISGPolicyDeployToggleButton_Click" x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                        <TeachingTip x:Name="CreateISGSupplementalPolicyTeachingTip" Target="{x:Bind CreateISGSupplementalPolicyButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard x:Uid="SupplementalPolicyNameSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox x:Name="ISGPolicyNameTextBox" TextChanged="ISGPolicyNameTextBox_TextChanged" x:Uid="SupplementalPolicyNameTextBox"/>
                        </controls:SettingsCard>

                        <controls:SettingsCard x:Name="ISGBrowseForBasePolicySettingsCard" Description="Browse for the Base policy XML file that this Supplemental policy will be associated to."
                            Header="Base Policy File" IsClickEnabled="True" IsActionIconVisible="False" Click="{x:Bind ISGBrowseForBasePolicySettingsCard_Click}"
                                               Holding="ISGBrowseForBasePolicySettingsCard_Holding" RightTapped="{x:Bind ISGBrowseForBasePolicySettingsCard_RightTapped}">

                            <Button x:Name="ISGBrowseForBasePolicyButton" Click="{x:Bind ISGBrowseForBasePolicyButton_Click}"
                                    x:Uid="PickPolicyFileButton" RightTapped="{x:Bind ISGBrowseForBasePolicyButton_RightTapped}">

                                <Button.Flyout>
                                    <Flyout x:Name="ISGBrowseForBasePolicyButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="{x:Bind ISGBrowseForBasePolicyButton_Flyout_Clear_Click}" />

                                            <TextBlock x:Uid="ViewSelectedBasePolicyTextBlock" TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="ISGBrowseForBasePolicyButton_SelectedBasePolicyTextBox"
                                                TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                                MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                                <Button.Content>
                                    <controls:WrapPanel Orientation="Horizontal">

                                        <AnimatedIcon x:Name="ISGBasePolicyPathLightAnimatedIcon" Height="20" Margin="0,0,5,0" Width="20">
                                            <AnimatedIcon.Source>
                                                <animatedvisuals:Light/>
                                            </AnimatedIcon.Source>
                                        </AnimatedIcon>

                                        <TextBlock x:Uid="BrowseTextBlock" />

                                    </controls:WrapPanel>
                                </Button.Content>

                            </Button>

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>


                <!-- Strict Kernel-Mode -->
                <controls:SettingsExpander x:Name="StrictKernelModeSection"
                    Description="Create a Kernel-mode policy by scanning the event logs or scanning all local drivers"
                    Header="Kernel-mode policy"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE945;}" IsExpanded="False">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="StrictKernelModeInfoBar"
                            Title="Current Status"
                            BorderThickness="0"
                            CornerRadius="0"
                            IsIconVisible="True"
                            IsOpen="False"
                            IsClosable="False"
                            Severity="Informational">
                            <InfoBar.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.StrictKernelModeInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind OpenInPolicyEditor_StrictKernelMode}" />
                            </InfoBar.ActionButton>
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>


                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="StrictKernelModeCreateButton" x:Uid="CreateSupplementalPolicyButton"
                              Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" Click="{x:Bind StrictKernelModeCreateButton_Click}" />

                        <ToggleButton x:Name="StrictKernelModeDeployToggleButton" x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                        <TeachingTip x:Name="StrictKernelModeCreateButtonTeachingTip" Target="{x:Bind StrictKernelModeCreateButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>


                        <controls:SettingsCard x:Name="StrictKernelModeAutoDetectAllDriversSettingsCard" Description="Automatically detect and list all of the drivers on the system"
                             Header="Auto Driver Detection"
                             IsClickEnabled="True" IsActionIconVisible="False" Click="{x:Bind DriverAutoDetector}">

                            <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="10" VerticalSpacing="10">

                                <ProgressRing x:Name="DriverAutoDetectionProgressRing" IsIndeterminate="False" Value="0" ToolTipService.ToolTip="The Supplemental policy creation progress" />

                                <Button x:Name="StrictKernelModeAutoDetectAllDriversButton" Content="Begin" Click="{x:Bind DriverAutoDetector}" />

                            </controls:WrapPanel>

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Name="StrictKernelModeScanButtonSettingsCard" Description="Scan the event logs for Kernel-mode files only"
                             Header="Scan Event Logs"
                             IsClickEnabled="False" IsActionIconVisible="False" >

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="10" VerticalSpacing="10">

                                <Button x:Name="StrictKernelModeScanButton" Click="{x:Bind StrictKernelModeScanButton_Click}" HorizontalAlignment="Center" Content="Scan for All Kernel-mode Logs" />

                                <Button x:Name="StrictKernelModeScanSinceLastRebootButton" Click="{x:Bind StrictKernelModeScanSinceLastRebootButton_Click}" HorizontalAlignment="Center" Content="Scan for Kernel-mode Logs Since Last Reboot" />

                            </controls:WrapPanel>

                        </controls:SettingsCard>


                        <controls:SettingsCard x:Name="StrictKernelModeBrowseForBasePolicySettingsCard" Description="Browse for the Base policy XML file that this Supplemental policy will be associated to."
                            Header="Base Policy File" IsClickEnabled="True" IsActionIconVisible="False" Click="{x:Bind StrictKernelModeBrowseForBasePolicySettingsCard_Click}"
                                               RightTapped="{x:Bind StrictKernelModeBrowseForBasePolicySettingsCard_RightTapped}" Holding="StrictKernelModeBrowseForBasePolicySettingsCard_Holding">

                            <Button x:Name="StrictKernelModeBrowseForBasePolicyButton" RightTapped="{x:Bind StrictKernelModeBrowseForBasePolicyButton_RightTapped}"
                                    x:Uid="PickPolicyFileButton" Click="{x:Bind StrictKernelModeBrowseForBasePolicyButton_Click}">

                                <Button.Flyout>
                                    <Flyout x:Name="StrictKernelModeBrowseForBasePolicyButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="{x:Bind StrictKernelModeBrowseForBasePolicyButton_Flyout_Clear_Click}" />

                                            <TextBlock x:Uid="ViewSelectedBasePolicyTextBlock" TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="StrictKernelModeBrowseForBasePolicyButton_SelectedBasePolicyTextBox"
                                                TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                                MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                                <Button.Content>
                                    <controls:WrapPanel Orientation="Horizontal">

                                        <AnimatedIcon x:Name="StrictKernelModeBasePolicyLightAnimatedIcon" Height="20" Margin="0,0,5,0" Width="20">
                                            <AnimatedIcon.Source>
                                                <animatedvisuals:Light/>
                                            </AnimatedIcon.Source>
                                        </AnimatedIcon>

                                        <TextBlock x:Uid="BrowseTextBlock" />

                                    </controls:WrapPanel>
                                </Button.Content>

                            </Button>

                        </controls:SettingsCard>


                        <controls:SettingsCard x:Uid="SupplementalPolicyNameSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox x:Name="StrictKernelModePolicyNameTextBox" x:Uid="SupplementalPolicyNameTextBox"/>
                        </controls:SettingsCard>


                        <controls:SettingsCard Description="View the details of all of the Kernel-mode files that were found"
                            Header="View detected Kernel-mode files"
                            HeaderIcon="{ui:FontIcon Glyph=&#xE83B;}"
                            IsClickEnabled="True" IsActionIconVisible="True"
                            IsEnabled="False"
                            Click="{x:Bind DetectedKernelModeFilesDetailsSettingsCard_Click}"
                            x:Name="DetectedKernelModeFilesDetailsSettingsCard">

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>


                <!-- Package Family Name (PFN) -->
                <controls:SettingsExpander x:Name="PFNSettingsCard"
                    Description="Create a Supplemental policy based on an app's Package Family Name (PFN)"
                    Header="Package Family Name"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE8F1;}" Expanded="{x:Bind PFNSettingsCard_Expanded}">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="PFNInfoBar"
                            Title="Current Status"
                            BorderThickness="0"
                            CornerRadius="0"
                            IsIconVisible="True"
                            IsOpen="False"
                            IsClosable="False"
                            Severity="Informational">
                            <InfoBar.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.PFNInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind OpenInPolicyEditor_PFN}" />
                            </InfoBar.ActionButton>
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="CreatePFNSupplementalPolicyButton" Click="{x:Bind CreatePFNSupplementalPolicyButton_Click}" x:Uid="CreateSupplementalPolicyButton"
                            Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" />

                        <ToggleButton x:Name="PFNPolicyDeployToggleButton" x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                        <TeachingTip x:Name="CreatePFNSupplementalPolicyTeachingTip" Target="{x:Bind CreatePFNSupplementalPolicyButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard x:Uid="SupplementalPolicyNameSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox x:Name="PFNPolicyNameTextBox" x:Uid="SupplementalPolicyNameTextBox"/>
                        </controls:SettingsCard>

                        <controls:SettingsCard x:Name="PFNBrowseForBasePolicySettingsCard" Description="Browse for the Base policy XML file that this Supplemental policy will be associated to."
                            Header="Base Policy File" IsClickEnabled="True" Click="{x:Bind PFNBrowseForBasePolicySettingsCard_Click}" IsActionIconVisible="False"
                                               RightTapped="{x:Bind PFNBrowseForBasePolicySettingsCard_RightTapped}" Holding="PFNBrowseForBasePolicySettingsCard_Holding">

                            <Button x:Name="PFNBrowseForBasePolicyButton" RightTapped="{x:Bind PFNBrowseForBasePolicyButton_RightTapped}"
                                    x:Uid="PickPolicyFileButton" Click="{x:Bind PFNBrowseForBasePolicyButton_Click}">

                                <Button.Flyout>
                                    <Flyout x:Name="PFNBrowseForBasePolicyButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="{x:Bind PFNBasePolicyClearButton_Click}"/>

                                            <TextBlock x:Uid="ViewSelectedBasePolicyTextBlock" TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="PFNBrowseForBasePolicyButton_SelectedBasePolicyTextBox"
                                                TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                                MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                                <Button.Content>
                                    <controls:WrapPanel Orientation="Horizontal">

                                        <AnimatedIcon x:Name="PFNBasePolicyPathLightAnimatedIcon" Height="20" Margin="0,0,5,0" Width="20">
                                            <AnimatedIcon.Source>
                                                <animatedvisuals:Light/>
                                            </AnimatedIcon.Source>
                                        </AnimatedIcon>

                                        <TextBlock x:Uid="BrowseTextBlock" />

                                    </controls:WrapPanel>
                                </Button.Content>

                            </Button>

                        </controls:SettingsCard>


                        <controls:SettingsCard Description="Select one or more installed packages to create a supplemental policy for"
                            Header="Package Family Names" x:Name="PFNSelectPackagedAppsSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">


                            <controls:WrapPanel Orientation="Horizontal">

                                <controls:WrapPanel VerticalAlignment="Center" Orientation="Vertical" Margin="0,0,15,0" VerticalSpacing="15" HorizontalSpacing="10">

                                    <TextBox x:Name="PFNAppFilteringTextBox" TextChanged="{x:Bind PFNAppFilteringTextBox_TextChanged}" PlaceholderText="Search among the apps"/>

                                    <TextBlock x:Uid="SelectedAppsTextBlock" x:Name="PFNSelectedItemsCount" HorizontalAlignment="Center"/>
                                    <Button x:Uid="RefreshButton" HorizontalAlignment="Center" x:Name="PFNRefreshAppsListButton" Click="{x:Bind PFNRefreshAppsListButton_Click}" />
                                    <Button x:Uid="SelectAllButton" HorizontalAlignment="Center" x:Name="PFNSelectAllAppsListButton" Click="{x:Bind PFNSelectAllAppsListButton_Click}" />
                                    <Button x:Uid="RemoveSelectionsButton" HorizontalAlignment="Center" x:Name="PFNRemoveSelectionAppsListButton" Click="{x:Bind PFNRemoveSelectionAppsListButton_Click}" />

                                </controls:WrapPanel>

                                <RefreshContainer x:Name="PFNRefreshContainer" RefreshRequested="PFNRefreshContainer_RefreshRequested">

                                    <ListView
                                        x:Name="PFNPackagedAppsListView"
                                        BorderThickness="1"
                                        CornerRadius="5"
                                        ItemsSource="{x:Bind PackagedAppsCollectionViewSource.View, Mode=OneWay}"
                                        BorderBrush="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                                        Width="450"
                                        Height="400"
                                        HorizontalAlignment="Left"
                                        SelectionMode="Multiple"
                                        PointerEntered="PFNPackagedAppsListView_PointerEntered"
                                        PointerExited="{x:Bind PFNPackagedAppsListView_PointerExited}"
                                        SelectionChanged="{x:Bind PFNPackagedAppsListView_SelectionChanged}"
                                        ItemTemplate="{StaticResource PackagedAppsListViewTemplate}">

                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ItemsStackPanel AreStickyGroupHeadersEnabled="True"/>
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.GroupStyle>
                                            <GroupStyle >
                                                <GroupStyle.HeaderTemplate>
                                                    <DataTemplate x:DataType="others:GroupInfoListForPackagedAppView">
                                                        <Border AutomationProperties.AccessibilityView="Raw">
                                                            <TextBlock Text="{x:Bind Key}" Style="{ThemeResource TitleTextBlockStyle}" AutomationProperties.AccessibilityView="Raw"/>
                                                        </Border>
                                                    </DataTemplate>
                                                </GroupStyle.HeaderTemplate>
                                            </GroupStyle>
                                        </ListView.GroupStyle>

                                    </ListView>

                                </RefreshContainer>

                            </controls:WrapPanel>

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>


                <!-- Custom File Path Rules -->
                <controls:SettingsExpander x:Name="CustomPatternBasedFileRuleSettingsExpander"
                        x:Uid="SupplementalPolicyCustomPatternBasedFileRuleSettingsExpander"
                        HeaderIcon="{ui:FontIcon Glyph=&#xE8A1;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="CustomPatternBasedFileRuleInfoBar"
                            Title="Current Status"
                            BorderThickness="0"
                            CornerRadius="0"
                            IsIconVisible="True"
                            IsOpen="False"
                            IsClosable="False"
                            Severity="Informational">
                            <InfoBar.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton" Visibility="{x:Bind ViewModel.CustomFilePathRulesInfoBarActionButtonVisibility, Mode=OneWay}" Click="{x:Bind OpenInPolicyEditor_CustomPatternBasedFileRule}" />
                            </InfoBar.ActionButton>
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="CreateCustomPatternBasedFileRuleSupplementalPolicyButton" Click="{x:Bind CreateCustomPatternBasedFileRuleSupplementalPolicyButton_Click}" x:Uid="CreateSupplementalPolicyButton"
                            Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" />

                        <ToggleButton x:Name="CustomPatternBasedFileRulePolicyDeployToggleButton" Click="CustomPatternBasedFileRulePolicyDeployToggleButton_Click" x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                        <TeachingTip x:Name="CreateCustomPatternBasedFileRuleSupplementalPolicyTeachingTip" Target="{x:Bind CreateCustomPatternBasedFileRuleSupplementalPolicyButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard x:Uid="SupplementalPolicyNameSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox x:Name="CustomPatternBasedFileRulePolicyNameTextBox" TextChanged="CustomPatternBasedFileRulePolicyNameTextBox_TextChanged" x:Uid="SupplementalPolicyNameTextBox"/>
                        </controls:SettingsCard>

                        <controls:SettingsCard x:Name="CustomPatternBasedFileRuleBrowseForBasePolicySettingsCard" Description="Browse for the Base policy XML file that this Supplemental policy will be associated to."
                            Header="Base Policy File" IsClickEnabled="True" IsActionIconVisible="False" Click="{x:Bind CustomPatternBasedFileRuleBrowseForBasePolicySettingsCard_Click}"
                                Holding="CustomPatternBasedFileRuleBrowseForBasePolicySettingsCard_Holding" RightTapped="{x:Bind CustomPatternBasedFileRuleBrowseForBasePolicySettingsCard_RightTapped}">

                            <Button x:Name="CustomPatternBasedFileRuleBrowseForBasePolicyButton" Click="{x:Bind CustomPatternBasedFileRuleBrowseForBasePolicyButton_Click}"
                                    x:Uid="PickPolicyFileButton" RightTapped="{x:Bind CustomPatternBasedFileRuleBrowseForBasePolicyButton_RightTapped}">

                                <Button.Flyout>
                                    <Flyout x:Name="CustomPatternBasedFileRuleBrowseForBasePolicyButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="{x:Bind CustomPatternBasedFileRuleBrowseForBasePolicyButton_Flyout_Clear_Click}" />

                                            <TextBlock x:Uid="ViewSelectedBasePolicyTextBlock" TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="CustomPatternBasedFileRuleBrowseForBasePolicyButton_SelectedBasePolicyTextBox"
                                                 TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                                 MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                                <Button.Content>
                                    <controls:WrapPanel Orientation="Horizontal">

                                        <!--

                                        <AnimatedIcon x:Name="CustomPatternBasedFileRuleBasePolicyPathLightAnimatedIcon" Height="20" Margin="0,0,5,0" Width="20">
                                            <AnimatedIcon.Source>
                                                <animatedvisuals:Light/>
                                            </AnimatedIcon.Source>
                                        </AnimatedIcon>

                                        -->

                                        <TextBlock x:Uid="BrowseTextBlock" />

                                    </controls:WrapPanel>
                                </Button.Content>

                            </Button>

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Uid="SupplementalPolicyCustomPatternBasedFileRuleActualPatternSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox x:Name="SupplementalPolicyCustomPatternBasedCustomPatternTextBox" x:Uid="SupplementalPolicyCustomPatternBasedCustomPatternTextBox" TextWrapping="Wrap" MaxWidth="400"/>
                        </controls:SettingsCard>

                        <controls:SettingsCard x:Uid="CustomPatternBasedFileRuleInfoSettingsCard" IsClickEnabled="True" Click="{x:Bind SupplementalPolicyCustomPatternBasedFileRuleSettingsCard_Click}" IsActionIconVisible="True"/>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>

            </StackPanel>

        </Grid>
    </ScrollView>
</Page>
