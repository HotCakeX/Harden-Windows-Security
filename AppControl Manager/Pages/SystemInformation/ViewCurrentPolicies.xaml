<Page
    x:Class="AppControlManager.Pages.ViewCurrentPolicies"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:others="using:AppControlManager.Others"
    x:Name="ViewCurrentPoliciesXAML"
    xmlns:customUI="using:AppControlManager.CustomUIElements"
    xmlns:AppControlManager="using:AppControlManager"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:CommunityToolkit.WinUI.Behaviors"
    xmlns:animatedvisuals="using:AnimatedVisuals"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Margin="0,0,0,5" Style="{StaticResource GridCardStyle}" Padding="10">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" HorizontalSpacing="12" VerticalSpacing="12">

                <Button>
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE71C;" />
                            <TextBlock Text="Filter" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>

                    <Button.Flyout>

                        <customUI:MenuFlyoutV2 Closing="MenuFlyout_Closing">

                            <ToggleMenuFlyoutItem Text="Base Policies" x:Name="IncludeBasePolicies" IsChecked="True">
                                <ToggleMenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xEB41;" />
                                </ToggleMenuFlyoutItem.Icon>
                            </ToggleMenuFlyoutItem>

                            <ToggleMenuFlyoutItem Text="Supplemental Policies" x:Name="IncludeSupplementalPolicies" IsChecked="True">
                                <ToggleMenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xECC4;" />
                                </ToggleMenuFlyoutItem.Icon>
                            </ToggleMenuFlyoutItem>

                            <ToggleMenuFlyoutItem Text="System Policies" x:Name="IncludeSystemPolicies" IsChecked="False">
                                <ToggleMenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE770;" />
                                </ToggleMenuFlyoutItem.Icon>
                            </ToggleMenuFlyoutItem>

                            <ToggleMenuFlyoutItem Text="Automatic Policies" x:Name="IncludeAppControlManagerSupplementalPolicy" IsChecked="False">
                                <ToggleMenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xEC12;" />
                                </ToggleMenuFlyoutItem.Icon>
                            </ToggleMenuFlyoutItem>

                        </customUI:MenuFlyoutV2>
                    </Button.Flyout>
                </Button>

                <Button>
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE8CB;" />
                            <TextBlock Text="Sort" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                    <Button.Flyout>
                        <MenuFlyout>

                            <ToggleMenuFlyoutItem x:Name="SortingDirectionToggle" Text="Descending Sorting" IsChecked="True"/>

                            <MenuFlyoutSeparator/>

                            <MenuFlyoutItem Text="Policy ID" Click="ColumnSortingButton_PolicyID_Click"/>
                            <MenuFlyoutItem Text="Base Policy ID" Click="ColumnSortingButton_BasePolicyID_Click"/>
                            <MenuFlyoutItem Text="Friendly Name" Click="ColumnSortingButton_FriendlyName_Click"/>
                            <MenuFlyoutItem Text="Version" Click="ColumnSortingButton_Version_Click"/>
                            <MenuFlyoutItem Text="Is Authorized" Click="ColumnSortingButton_IsAuthorized_Click"/>
                            <MenuFlyoutItem Text="Is Enforced" Click="ColumnSortingButton_IsEnforced_Click"/>
                            <MenuFlyoutItem Text="Is On Disk" Click="ColumnSortingButton_IsOnDisk_Click"/>
                            <MenuFlyoutItem Text="Is Signed Policy" Click="ColumnSortingButton_IsSignedPolicy_Click"/>
                            <MenuFlyoutItem Text="Is System Policy" Click="ColumnSortingButton_IsSystemPolicy_Click"/>
                            <MenuFlyoutItem Text="Policy Rule Option" Click="ColumnSortingButton_PolicyRuleOptions_Click"/>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>

                <Button Name="RetrievePoliciesButton" Click="RetrievePoliciesButton_Click" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTipService.ToolTip="Retrieve the latest deployed policies on the system">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                <AnimatedIcon.Source>
                                    <animatedvisuals:Refresh/>
                                </AnimatedIcon.Source>
                            </AnimatedIcon>
                            <TextBlock Text="Retrieve Policies" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <TextBlock Name="PoliciesCountTextBlock" Text="Number of Policies: 0" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTipService.ToolTip="The count of all of the displayed policies"/>

                <Button x:Name="RemovePolicyButton" Click="RemovePolicy_Click" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTipService.ToolTip="Remove any non-system policy from the system">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE74D;" />
                            <TextBlock Text="Remove Policy" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <ComboBox PlaceholderText="Swap Policy" x:Name="SwapPolicyComboBox" IsEnabled="False" SelectionChanged="SwapPolicyComboBox_SelectionChanged">
                    <x:String>Default Windows</x:String>
                    <x:String>Allow Microsoft</x:String>
                    <x:String>Signed and Reputable</x:String>
                    <x:String>Strict Kernel-Mode</x:String>
                    <x:String>Strict Kernel-Mode (No Flight Roots)</x:String>
                </ComboBox>

                <!-- Search Box for filtering policies -->
                <TextBox x:Name="SearchBox" Width="300" PlaceholderText="Search policies..." TextChanged="SearchBox_TextChanged" VerticalAlignment="Center" />

            </controls:WrapPanel>

        </Border>

        <ListView x:Name="DeployedPolicies"
                  Grid.Row="1"
                  SelectionMode="Single"
                  ScrollViewer.HorizontalScrollMode="Enabled"
                  ScrollViewer.IsHorizontalRailEnabled="True"
                  ScrollViewer.HorizontalScrollBarVisibility="Visible"
                  ShowsScrollingPlaceholders="True"
                  ScrollViewer.VerticalScrollBarVisibility="Visible"
                  SelectionChanged="DeployedPolicies_SelectionChanged"
                  ContainerContentChanging="ListView_ContainerContentChanging">

            <ListView.Header>

                <Border CornerRadius="5" Background="Black">
                    <interactivity:Interaction.Behaviors>
                        <behaviors:StickyHeaderBehavior />
                    </interactivity:Interaction.Behaviors>
                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind ColumnWidth1, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth2, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth3, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth4, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth5, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth6, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth7, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth8, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth9, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth10, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Uid="PolicyIDHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="0" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="BasePolicyIDHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="1" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="FriendlyNameHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="2" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="VersionHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="3" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="IsAuthorizedHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="4" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="IsEnforcedHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="5" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="IsOnDiskHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="6" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="IsSignedPolicyHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="7" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="IsSystemPolicyHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="8" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="PolicyOptionsHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="9" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                    </Grid>
                </Border>
            </ListView.Header>

            <!-- DataTemplate for ListView items -->
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="others:CiPolicyInfo">
                    <!-- Setting Background="Transparent" on the Grid makes it hit-test visible, meaning that even areas without any child elements (like empty spaces in the column) will respond to pointer events.  -->
                    <Grid Background="Transparent">
                        <Grid.ContextFlyout>
                            <MenuFlyout>

                                <MenuFlyoutItem Text="Copy Row" Click="ListViewFlyoutMenuCopy_Click">
                                    <MenuFlyoutItem.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="C" Modifiers="Control" Invoked="CtrlC_Invoked"/>
                                    </MenuFlyoutItem.KeyboardAccelerators>
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSubItem Text="Copy Individual Items">
                                    <MenuFlyoutSubItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutSubItem.Icon>

                                    <MenuFlyoutSubItem.Items>

                                        <MenuFlyoutItem x:Uid="PolicyIDHeader" Click="CopyPolicyID_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="BasePolicyIDHeader" Click="CopyBasePolicyID_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FriendlyNameHeader" Click="CopyFriendlyName_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="VersionHeader" Click="CopyVersion_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="IsAuthorizedHeader" Click="CopyIsAuthorized_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="IsEnforcedHeader" Click="CopyIsEnforced_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="IsOnDiskHeader" Click="CopyIsOnDisk_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="IsSignedPolicyHeader" Click="CopyIsSignedPolicy_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="IsSystemPolicyHeader" Click="CopyIsSystemPolicy_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="PolicyOptionsHeader" Click="CopyPolicyOptionsDisplay_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                    </MenuFlyoutSubItem.Items>

                                </MenuFlyoutSubItem>
                            </MenuFlyout>
                        </Grid.ContextFlyout>

                        <Grid.ColumnDefinitions>
                            <!-- Use standard Binding with ElementName to refer back to the page's properties because in here the Data Context is set to CiPolicyInfo so we cannot use x.Bind since CiPolicyInfo doesn't have the ColumnWidth properties -->
                            <ColumnDefinition Width="{Binding ColumnWidth1, ElementName=ViewCurrentPoliciesXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth2, ElementName=ViewCurrentPoliciesXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth3, ElementName=ViewCurrentPoliciesXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth4, ElementName=ViewCurrentPoliciesXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth5, ElementName=ViewCurrentPoliciesXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth6, ElementName=ViewCurrentPoliciesXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth7, ElementName=ViewCurrentPoliciesXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth8, ElementName=ViewCurrentPoliciesXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth9, ElementName=ViewCurrentPoliciesXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth10, ElementName=ViewCurrentPoliciesXAML}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Bind PolicyID}" HorizontalAlignment="Left" Grid.Column="0" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind BasePolicyID}" HorizontalAlignment="Left" Grid.Column="1" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind FriendlyName}" HorizontalAlignment="Left" Grid.Column="2" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind Version}" HorizontalAlignment="Left" Grid.Column="3" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind IsAuthorized}" HorizontalAlignment="Left" Grid.Column="4" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind IsEnforced}" HorizontalAlignment="Left" Grid.Column="5" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind IsOnDisk}" HorizontalAlignment="Left" Grid.Column="6" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind IsSignedPolicy}" HorizontalAlignment="Left" Grid.Column="7" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind IsSystemPolicy}" HorizontalAlignment="Left" Grid.Column="8" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind PolicyOptionsDisplay}" HorizontalAlignment="Left" Grid.Column="9" Margin="0,2,2,2"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</Page>
