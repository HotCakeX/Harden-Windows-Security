<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.EventLogsPolicyCreation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:customUI="using:AppControlManager.CustomUIElements"
    xmlns:intelgathering="using:AppControlManager.IntelGathering"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:CommunityToolkit.WinUI.Behaviors"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    FlowDirection="{x:Bind AppSettings.ApplicationGlobalFlowDirection, Mode=OneWay}"
    mc:Ignorable="d">

    <!--
    Never use a ScrollViewer in a page that's gonna have a ListView
    It would:
    1. Defeat the virtualization feature of the ListView.
    2. Make data injection to the ListView super slow.
    3. Make the UI very slow all the time.
    4. Prevent the horizontal scrollbar from working and appearing properly.
    -->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <controls:WrapPanel Grid.Row="0" VerticalSpacing="4" HorizontalSpacing="4" Orientation="Vertical" Margin="6,0,6,10">

            <TextBlock x:Uid="EventLogsPolicyCreationPageTitle" TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}" />

            <HyperlinkButton x:Uid="GuideButtonAtTop" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Create-Policy-From-Event-Logs" />

        </controls:WrapPanel>

        <customUI:InfoBarV2 Grid.Row="1"
                   IsOpen="{x:Bind ViewModel.MainInfoBarIsOpen, Mode=TwoWay}"
                   Message="{x:Bind ViewModel.MainInfoBarMessage, Mode=OneWay}"
                   Severity="{x:Bind ViewModel.MainInfoBarSeverity, Mode=OneWay}"
                   IsClosable="{x:Bind ViewModel.MainInfoBarIsClosable, Mode=OneWay}">
            <customUI:InfoBarV2.ActionButton>
                <Button x:Uid="OpenInPolicyEditorButton"
                Visibility="{x:Bind ViewModel.OpenInPolicyEditorInfoBarActionButtonVisibility, Mode=OneWay}"
                Click="{x:Bind ViewModel.OpenInPolicyEditor}" />
            </customUI:InfoBarV2.ActionButton>
        </customUI:InfoBarV2>

        <Border Grid.Row="2" Margin="0,10,0,10"
            Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                <ProgressRing Visibility="{x:Bind ViewModel.ScanLogsProgressRingVisibility, Mode=OneWay}"
                              IsActive="{x:Bind ViewModel.ScanLogsProgressRingIsActive, Mode=OneWay}" />

                <!-- Scan button -->
                <Button x:Uid="ScanLogsButton"
                        Style="{StaticResource AccentButtonStyle}"
                        IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                        Click="{x:Bind ViewModel.ScanLogs_Click}" >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xEE6F;" />
                            <TextBlock x:Uid="ScanLogsTextBlock" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <SplitButton ToolTipService.ToolTip="Create the supplemental policy"
                             IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                             Click="{x:Bind ViewModel.CreatePolicyButton_Click}">

                    <SplitButton.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xECCD;" />
                            <TextBlock Text="{x:Bind ViewModel.CreatePolicyButtonContent, Mode=OneWay}" Margin="5,0,0,0" />
                        </StackPanel>
                    </SplitButton.Content>

                    <SplitButton.Flyout>
                        <Flyout Placement="Bottom">

                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="Padding" Value="0" />
                                    <!-- Same corner radius as the one in PanelStyle  -->
                                    <Setter Property="CornerRadius" Value="8" />

                                    <!--
                                    Important: the "resolution order" for widths (at least in winui) is minwidth, maxwidth, width
                                    Width does not override MaxWidth
                                    https://learn.microsoft.com/uwp/api/windows.ui.xaml.frameworkelement.maxwidth?view=winrt-26100#remarks
                                    -->
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <StackPanel VerticalAlignment="Top" Orientation="Vertical" Spacing="8">
                                <controls:Segmented x:Name="segmentedControl"
                                    HorizontalAlignment="Stretch"
                                    SelectedIndex="{x:Bind ViewModel.SelectedCreationMethod, Mode=TwoWay}">
                                    <controls:SegmentedItem Content="Add To Policy"
                                        Tag="AddToPolicy" Width="160" Icon="{ui:FontIcon Glyph=&#xEB49;}" />
                                    <controls:SegmentedItem Content="Base Policy File"
                                        Tag="BasePolicyFile" Width="160" Icon="{ui:FontIcon Glyph=&#xEB49;}"/>
                                    <controls:SegmentedItem Content="Base GUID"
                                        Tag="BaseGUID" Width="130" Icon="{ui:FontIcon Glyph=&#xEB49;}"/>
                                </controls:Segmented>
                                <controls:SwitchPresenter Value="{x:Bind ((controls:SegmentedItem)segmentedControl.SelectedItem).Tag, Mode=OneWay}" HorizontalAlignment="Center">

                                    <controls:Case Value="AddToPolicy">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                            Style="{StaticResource PanelStyle}">

                                            <TextBlock Margin="5" VerticalAlignment="Center" TextWrapping="WrapWholeWords">
                                                <Span>Browse for a XML policy file to add <Bold>the logs</Bold> to </Span>
                                            </TextBlock>

                                            <Button Margin="5" Content="Browse"
                                                    ToolTipService.ToolTip="Select a XML file to add the scanned logs to"
                                                    Style="{StaticResource AccentButtonStyle}"
                                                    Click="{x:Bind ViewModel.AddToPolicyButton_Click}" />

                                        </StackPanel>
                                    </controls:Case>
                                    <controls:Case Value="BasePolicyFile">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                                    animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                                    Style="{StaticResource PanelStyle}">

                                            <TextBlock Margin="5" VerticalAlignment="Center" TextWrapping="WrapWholeWords" Width="290" >

                                                 <Span>Browse for a <Bold>base</Bold>
                                                    policy XML file that this <Underline>Supplemental</Underline> policy will belong to </Span>
                                            </TextBlock>

                                            <Button Margin="5" Content="Browse"
                                                    ToolTipService.ToolTip="Select a base policy that this supplemental policy will belong to."
                                                    Style="{StaticResource AccentButtonStyle}"
                                                    Click="{x:Bind ViewModel.BasePolicyFileButton_Click}" />
                                        </StackPanel>
                                    </controls:Case>

                                    <controls:Case Value="BaseGUID">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                             animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                             Style="{StaticResource PanelStyle}">

                                            <TextBox PlaceholderText="Enter a Base policy GUID"
                                                     Width="300" Margin="10"
                                                     Text="{x:Bind ViewModel.BasePolicyGUID, Mode=TwoWay}"
                                                     VerticalAlignment="Center"
                                                     VerticalContentAlignment="Center" ToolTipService.ToolTip="Enter the Base GUID" />

                                            <Button Margin="5" Content="Submit"
                                                    ToolTipService.ToolTip="Submit the GUID"
                                                    Style="{StaticResource AccentButtonStyle}"
                                                    Click="{x:Bind ViewModel.BaseGUIDSubmitButton_Click}" />
                                        </StackPanel>
                                    </controls:Case>
                                </controls:SwitchPresenter>
                            </StackPanel>
                        </Flyout>
                    </SplitButton.Flyout>
                </SplitButton>

                <customUI:ButtonV2 Content="Select Code Integrity EVTX Files"
                                   IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                   Click="{x:Bind ViewModel.SelectCodeIntegrityEVTXFiles_Click}">
                    <customUI:ButtonV2.Flyout>
                        <Flyout>
                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                <Button x:Uid="ClearButton" Click="{x:Bind ViewModel.SelectedCodeIntegrityEVTXFilesFlyout_Clear_Click}" />

                                <TextBlock x:Uid="ViewSelectedFilesTextBlock" TextWrapping="WrapWholeWords" />

                                <TextBox Text="{x:Bind ViewModel.CodeIntegrityEVTX, Mode=OneWay}"
                                         TextWrapping="Wrap"
                                         AcceptsReturn="True"
                                         IsSpellCheckEnabled="False"
                                         MinWidth="400"
                                         IsReadOnly="True" />

                            </controls:WrapPanel>
                        </Flyout>
                    </customUI:ButtonV2.Flyout>
                </customUI:ButtonV2>

                <customUI:ButtonV2 Content="Select AppLocker EVTX Files"
                                   IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                   Click="{x:Bind ViewModel.SelectAppLockerEVTXFiles_Click}">
                    <customUI:ButtonV2.Flyout>
                        <Flyout>
                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                <Button x:Uid="ClearButton" Click="{x:Bind ViewModel.SelectedAppLockerEVTXFilesFlyout_Clear_Click}" />

                                <TextBlock x:Uid="ViewSelectedFilesTextBlock" TextWrapping="WrapWholeWords" />

                                <TextBox Text="{x:Bind ViewModel.AppLockerEVTX, Mode=OneWay}"
                                         TextWrapping="Wrap"
                                         AcceptsReturn="True"
                                         IsSpellCheckEnabled="False"
                                         MinWidth="400"
                                         IsReadOnly="True" />

                            </controls:WrapPanel>
                        </Flyout>
                    </customUI:ButtonV2.Flyout>
                </customUI:ButtonV2>

                <DropDownButton x:Uid="ExtraActionsDropDownButton"
                                IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}">
                    <DropDownButton.Flyout>

                        <MenuFlyout Placement="Bottom">

                            <MenuFlyoutItem x:Uid="SelectAllMenuFlyoutItem" Click="{x:Bind ViewModel.SelectAll_Click}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE762;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutItem x:Uid="DeSelectAllMenuFlyoutItem" Click="{x:Bind ViewModel.DeSelectAll_Click}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE8E6;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutItem Click="{x:Bind ViewModel.ClearDataButton_Click}" x:Uid="ClearDataMenuFlyoutItem">
                                <MenuFlyoutItem.Icon>
                                    <SymbolIcon Symbol="Delete" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutSeparator/>

                            <ToggleMenuFlyoutItem x:Uid="DeployAfterCreationMenuFlyoutItem" IsChecked="{x:Bind ViewModel.DeployPolicyToggle, Mode=TwoWay}">
                                <ToggleMenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE896;"/>
                                </ToggleMenuFlyoutItem.Icon>

                            </ToggleMenuFlyoutItem>

                        </MenuFlyout>

                    </DropDownButton.Flyout>
                </DropDownButton>

                <TextBox x:Uid="TotalLogsTextBlock"
                         Text="{x:Bind ViewModel.TotalCountOfTheFilesTextBox, Mode=OneWay}"
                         IsReadOnly="True"
                         VerticalAlignment="Center"
                         VerticalContentAlignment="Center"/>

                <TextBox Width="300"
                         IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                         x:Uid="SearchBoxTextBox"
                         Text="{x:Bind ViewModel.SearchBoxText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         VerticalAlignment="Center"
                         VerticalContentAlignment="Center" />

                <Button x:Uid="PolicyNameColumnHeaderBtn" IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}">
                    <Button.Flyout>
                        <Flyout>
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="CornerRadius" Value="8" />
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="3" VerticalSpacing="8">
                                <TextBox Width="300"
                                         Header="Optional: Choose a policy name"
                                         Text="{x:Bind ViewModel.PolicyNameTextBox, Mode=TwoWay}"
                                         PlaceholderText="Policy Name..."/>
                            </controls:WrapPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <CalendarDatePicker PlaceholderText="Filter logs by date"
                                    Date="{x:Bind ViewModel.DatePickerDate, Mode=TwoWay}"
                                    IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                    ToolTipService.ToolTip="Will only show logs that are newer than the selected date" />

                <ComboBox x:Uid="ScanLevelComboBox"
                          IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                          SelectedItem="{x:Bind ViewModel.ScanLevelComboBoxSelectedItem, Mode=TwoWay}"
                          PlaceholderText="Scan level" >
                    <x:String>File Publisher</x:String>
                    <x:String>Publisher</x:String>
                    <x:String>Hash</x:String>
                </ComboBox>

                <ToggleButton IsChecked="{x:Bind ViewModel.OnlyIncludeSelectedItemsToggleButton, Mode=TwoWay}"
                              IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                              x:Uid="OnlyIncludeSelectedItemsToggleButton" />

            </controls:WrapPanel>
        </Border>

        <customUI:ListViewV2 x:Name="FileIdentitiesListView"
            RegistryKey="Event_Logs"
            Grid.Row="3"
            SelectionMode="Extended"
            ItemsSource="{x:Bind ViewModel.FileIdentities, Mode=OneWay}">

            <customUI:ListViewV2.Header>

                <Border CornerRadius="5" Background="Black">
                    <interactivity:Interaction.Behaviors>
                        <customUI:StickyHeaderBehaviorV2/>
                    </interactivity:Interaction.Behaviors>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth1, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth2, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth3, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth4, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth5, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth6, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth7, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth8, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth9, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth10, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth11, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth12, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth13, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth14, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth15, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth16, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth17, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth18, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth19, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth20, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth21, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>
                        <Button x:Uid="FileNameColumnHeaderBtn" Tag="FileName" Grid.Column="0" Margin="10,0,0,0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="TimeCreatedColumnHeaderBtn" Tag="TimeCreated" Grid.Column="1" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SignatureStatusColumnHeaderBtn" Tag="SignatureStatus" Grid.Column="2" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="ActionColumnHeaderBtn" Tag="Action" Grid.Column="3" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="OriginalFileNameColumnHeaderBtn" Tag="OriginalFileName" Grid.Column="4" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="InternalNameColumnHeaderBtn" Tag="InternalName" Grid.Column="5" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="FileDescriptionColumnHeaderBtn" Tag="FileDescription" Grid.Column="6" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="ProductNameColumnHeaderBtn" Tag="ProductName" Grid.Column="7" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="FileVersionColumnHeaderBtn" Tag="FileVersion" Grid.Column="8" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="PackageFamilyNameColumnHeaderBtn" Tag="PackageFamilyName" Grid.Column="9" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SHA256HashColumnHeaderBtn" Tag="SHA256Hash" Grid.Column="10" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SHA1HashColumnHeaderBtn" Tag="SHA1Hash" Grid.Column="11" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SigningScenarioColumnHeaderBtn" Tag="SISigningScenario" Grid.Column="12" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="FilePathColumnHeaderBtn" Tag="FilePath" Grid.Column="13" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SHA1FlatHashColumnHeaderBtn" Tag="SHA1FlatHash" Grid.Column="14" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SHA256FlatHashColumnHeaderBtn" Tag="SHA256FlatHash" Grid.Column="15" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="FilePublishersColumnHeaderBtn" Tag="FilePublishersToDisplay" Grid.Column="16" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="OpusDataColumnHeaderBtn" Tag="Opus" Grid.Column="17" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="PolicyGUIDColumnHeaderBtn" Tag="PolicyGUID" Grid.Column="18" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="PolicyNameColumnHeaderBtn" Tag="PolicyName" Grid.Column="19" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="ComputerNameColumnHeaderBtn" Tag="ComputerName" Grid.Column="20" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                    </Grid>
                </Border>
            </customUI:ListViewV2.Header>

            <!-- DataTemplate for ListView items -->
            <customUI:ListViewV2.ItemTemplate>
                <DataTemplate x:DataType="intelgathering:FileIdentity">
                    <!-- Setting Background="Transparent" on the Grid makes it hit-test visible, meaning that even areas without any child elements (like empty spaces in the column) will respond to pointer events.  -->
                    <Grid Background="Transparent">
                        <Grid.ContextFlyout>
                            <MenuFlyout>

                                <MenuFlyoutItem x:Uid="DeleteRow" Click="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ListViewFlyoutMenuDelete_Click}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE74D;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem x:Uid="CopyRow" Click="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ListViewFlyoutMenuCopy_Click}">
                                    <MenuFlyoutItem.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="C" Modifiers="Control" Invoked="CtrlC_Invoked"/>
                                    </MenuFlyoutItem.KeyboardAccelerators>
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSubItem x:Uid="CopyIndividualItems">
                                    <MenuFlyoutSubItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutSubItem.Icon>

                                    <MenuFlyoutSubItem.Items>

                                        <MenuFlyoutItem x:Uid="FileNameHeader" Tag="FileName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="TimeCreatedHeader" Tag="TimeCreated" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignatureStatusHeader" Tag="SignatureStatus" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="ActionHeader" Tag="Action" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="OriginalFileNameHeader" Tag="OriginalFileName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="InternalNameHeader" Tag="InternalName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FileDescriptionHeader" Tag="FileDescription" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="ProductNameHeader" Tag="ProductName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FileVersionHeader" Tag="FileVersion" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="PackageFamilyNameHeader" Tag="PackageFamilyName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA256HashHeader" Tag="SHA256Hash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA1HashHeader" Tag="SHA1Hash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SigningScenarioHeader" Tag="SISigningScenario" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FilePathHeader" Tag="FilePath" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA1FlatHashHeader" Tag="SHA1FlatHash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA256FlatHashHeader" Tag="SHA256FlatHash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FilePublishersHeader" Tag="FilePublishersToDisplay" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="OpusDataHeader" Tag="Opus" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="PolicyGUIDHeader" Tag="PolicyGUID" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="PolicyNameHeader" Tag="PolicyName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="ComputerNameHeader" Tag="ComputerName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                    </MenuFlyoutSubItem.Items>

                                </MenuFlyoutSubItem>
                            </MenuFlyout>
                        </Grid.ContextFlyout>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth1, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth2, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth3, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth4, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth5, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth6, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth7, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth8, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth9, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth10, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth11, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth12, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth13, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth14, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth15, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth16, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth17, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth18, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth19, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth20, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelEventLogsPolicyCreationVM.ColumnWidth21, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Bind FileName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="0"/>
                        <TextBlock Text="{x:Bind TimeCreated}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="1"/>
                        <TextBlock Text="{x:Bind SignatureStatus}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="2"/>
                        <TextBlock Text="{x:Bind Action}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="3"/>
                        <TextBlock Text="{x:Bind OriginalFileName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="4"/>
                        <TextBlock Text="{x:Bind InternalName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="5"/>
                        <TextBlock Text="{x:Bind FileDescription}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="6"/>
                        <TextBlock Text="{x:Bind ProductName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="7"/>
                        <TextBlock Text="{x:Bind FileVersion}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="8"/>
                        <TextBlock Text="{x:Bind PackageFamilyName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="9"/>
                        <TextBlock Text="{x:Bind SHA256Hash}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="10"/>
                        <TextBlock Text="{x:Bind SHA1Hash}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="11"/>
                        <TextBlock Text="{x:Bind SISigningScenario}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="12"/>
                        <TextBlock Text="{x:Bind FilePath}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="13"/>
                        <TextBlock Text="{x:Bind SHA1FlatHash}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="14"/>
                        <TextBlock Text="{x:Bind SHA256FlatHash}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="15"/>
                        <TextBlock Text="{x:Bind FilePublishersToDisplay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="16"/>
                        <TextBlock Text="{x:Bind Opus}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="17"/>
                        <TextBlock Text="{x:Bind PolicyGUID}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="18"/>
                        <TextBlock Text="{x:Bind PolicyName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="19"/>
                        <TextBlock Text="{x:Bind ComputerName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="20"/>
                    </Grid>
                </DataTemplate>
            </customUI:ListViewV2.ItemTemplate>
        </customUI:ListViewV2>

    </Grid>
</Page>
