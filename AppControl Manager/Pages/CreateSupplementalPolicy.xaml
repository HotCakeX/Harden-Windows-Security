<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.CreateSupplementalPolicy"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:others="using:AppControlManager.Others"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:tk7controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:animatedvisuals="using:AnimatedVisuals"
    mc:Ignorable="d">

    <Page.Resources>
        <!--  These styles can be referenced to create a consistent SettingsPage layout  -->
        <!--  Spacing between cards  -->
        <x:Double x:Key="SettingsCardSpacing">4</x:Double>
        <!--  Style (inc. the correct spacing) of a section header  -->
        <Style x:Key="SettingsSectionHeaderTextBlockStyle"
  BasedOn="{StaticResource BodyStrongTextBlockStyle}"
  TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Margin" Value="1,30,0,6" />
            </Style.Setters>
        </Style>
    </Page.Resources>

    <ScrollView x:Name="MainScrollView" PointerPressed="MainScrollView_PointerPressed">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style x:Key="GridCardStyle" TargetType="Border">
                    <Style.Setters>
                        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}" />
                        <Setter Property="CornerRadius" Value="{StaticResource OverlayCornerRadius}" />
                    </Style.Setters>
                </Style>


                <!-- For the Packaged Apps ListView Grouping -->
                <CollectionViewSource x:Name="PackagedAppsCollectionViewSource" IsSourceGrouped="True"/>


                <!-- Defines a single App that is displayed in the ListView -->

                <DataTemplate x:Key="PackagedAppsListViewTemplate" x:DataType="others:PackagedAppView">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>



                        <Border CornerRadius="15" VerticalAlignment="Center"
HorizontalAlignment="Center" BorderThickness="0" Grid.RowSpan="3" Grid.Column="0">
                            <Image 
                                Width ="32"
                                Height="32"
                                Margin="6"
                                Source="{x:Bind Logo}" />
                        </Border>



                        <TextBlock Grid.Column="1"
Grid.Row="0"                                   
Text="{x:Bind DisplayName}"
x:Phase="1"
Style="{ThemeResource BaseTextBlockStyle}"
Margin="12,6,0,0"/>
                        <TextBlock  Grid.Column="1"
Grid.Row="1"
Text="{x:Bind Version}"
x:Phase="2"
Style="{ThemeResource BodyTextBlockStyle}"
Margin="12,6,0,0"/>


                        <TextBlock  Grid.Column="1"
Grid.Row="2"
Text="{x:Bind PackageFamilyName}"
x:Phase="2"
Style="{ThemeResource BodyTextBlockStyle}"
Margin="12,0,0,6"/>
                    </Grid>
                </DataTemplate>



            </Grid.Resources>






            <controls:WrapPanel Grid.Row="0" VerticalSpacing="4" HorizontalSpacing="4" Orientation="Vertical" Margin="6,10,6,10">

                <TextBlock
TextWrapping="WrapWholeWords"
Style="{StaticResource BodyTextBlockStyle}">

          <Span>
            Create a <Bold>Supplemental</Bold> policy that will <Run Foreground="{ThemeResource SystemAccentColor}">expand</Run> the scope of a base policy. Supplemental policies can only allow files, they cannot have deny rules in them.
          </Span>
                </TextBlock>

                <HyperlinkButton Content="Guide" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Create-Supplemental-App-Control-Policy" />

            </controls:WrapPanel>

            <StackPanel HorizontalAlignment="Stretch"
      Spacing="{StaticResource SettingsCardSpacing}" Grid.Row="1" Margin="0,40,0,0">

                <win:StackPanel.ChildrenTransitions>
                    <win:EntranceThemeTransition FromVerticalOffset="50" />
                    <win:RepositionThemeTransition IsStaggeringEnabled="False" />
                </win:StackPanel.ChildrenTransitions>

                <!-- Files and Folders Scan -->

                <controls:SettingsExpander x:Name="FilesAndFoldersSettingsCard"
   Description="Create Supplemental policy by scanning files and folders"
   Header="Files and Folders"
   HeaderIcon="{ui:FontIcon Glyph=&#xE71D;}" IsExpanded="False">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="FilesAndFoldersInfoBar"
      Title="Current Status"
      BorderThickness="0"
      CornerRadius="0"
      IsIconVisible="True"
      IsOpen="False"
      IsClosable="False"
      Severity="Informational">
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>


                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="CreateFilesAndFoldersSupplementalPolicyButton" Content="Create Supplemental Policy"
Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" Click="CreateFilesAndFoldersSupplementalPolicyButton_Click" />

                        <ToggleButton x:Name="FilesAndFoldersPolicyDeployToggleButton" Click="FilesAndFoldersPolicyDeployToggleButton_Click" Content="Deploy after Creation" Margin="0,0,15,0" />


                        <TeachingTip x:Name="CreateSupplementalPolicyTeachingTip"
 Target="{x:Bind CreateFilesAndFoldersSupplementalPolicyButton}" />


                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard x:Name="FilesAndFoldersBrowseForFilesSettingsCard" Description="Browse for file paths to scan and include in the Supplemental policy."
       Header="Browse For Files"
       IsClickEnabled="True" IsActionIconVisible="False" Click="FilesAndFoldersBrowseForFilesSettingsCard_Click">

                            <Button x:Name="FilesAndFoldersBrowseForFilesButton" Content="Browse" Click="FilesAndFoldersBrowseForFilesButton_Click">

                                <Button.Flyout>
                                    <Flyout x:Name="FilesAndFoldersBrowseForFilesButton_Flyout">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button Content="Clear" Click="FilesAndFoldersBrowseForFilesButton_Flyout_Clear_Click" />

                                            <TextBlock Text="View the files you selected." TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="FilesAndFoldersBrowseForFilesButton_SelectedFilesTextBox"
    TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
    SelectionHighlightColor="Pink" MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>


                            </Button>

                        </controls:SettingsCard>

                        <controls:SettingsCard Description="Browse for Folder paths to scan and include in the Supplemental policy. The folders will be scanned recursively."
Header="Browse For Folders" x:Name="FilesAndFoldersBrowseForFoldersSettingsCard" Click="FilesAndFoldersBrowseForFoldersSettingsCard_Click" IsClickEnabled="True" IsActionIconVisible="False">

                            <Button x:Name="FilesAndFoldersBrowseForFoldersButton" Content="Browse" Click="FilesAndFoldersBrowseForFoldersButton_Click">

                                <Button.Flyout>
                                    <Flyout x:Name="FilesAndFoldersBrowseForFoldersButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button Content="Clear" Click="FilesAndFoldersBrowseForFoldersButton_Flyout_Clear_Click" />

                                            <TextBlock Text="View the folders you selected." TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="FilesAndFoldersBrowseForFoldersButton_SelectedFoldersTextBox"
                  TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                  SelectionHighlightColor="Pink" MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                            </Button>

                        </controls:SettingsCard>

                        <controls:SettingsCard Description="The name of the Supplemental policy that is going to be created."
Header="Policy Name" IsClickEnabled="False" IsActionIconVisible="False">

                            <TextBox x:Name="FilesAndFoldersPolicyNameTextBox" TextChanged="FilesAndFoldersPolicyNameTextBox_TextChanged" PlaceholderText="Supplemental Policy Name"/>

                        </controls:SettingsCard>

                        <controls:SettingsCard Description="Browse for the Base policy XML file that this Supplemental policy will be associated to."
Header="Base Policy File" IsClickEnabled="True" Click="FilesAndFoldersBrowseForBasePolicySettingsCard_Click"
x:Name="FilesAndFoldersBrowseForBasePolicySettingsCard" IsActionIconVisible="False">

                            <Button x:Name="FilesAndFoldersBrowseForBasePolicyButton" Click="FilesAndFoldersBrowseForBasePolicyButton_Click">

                                <Button.Flyout>
                                    <Flyout x:Name="FilesAndFoldersBrowseForBasePolicyButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button Content="Clear" Click="FilesAndFoldersBrowseForBasePolicyButton_Flyout_Clear_Click" />

                                            <TextBlock Text="View the Base policy path you selected." TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="FilesAndFoldersBrowseForBasePolicyButton_SelectedBasePolicyTextBox"
    TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
    SelectionHighlightColor="Pink" MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                                <Button.Content>
                                    <controls:WrapPanel Orientation="Horizontal">

                                        <AnimatedIcon x:Name="FilesAndFoldersBasePolicyLightAnimatedIcon" Height="20" Margin="0,0,5,0" Width="20">
                                            <AnimatedIcon.Source>
                                                <animatedvisuals:Light/>
                                            </AnimatedIcon.Source>
                                        </AnimatedIcon>

                                        <TextBlock Text="Browse" />

                                    </controls:WrapPanel>
                                </Button.Content>


                            </Button>

                        </controls:SettingsCard>

                        <controls:SettingsCard Description="Select the level based on which the detected files will be scanned."
Header="Select Scan Level" Click="ScanLevelComboBoxSettingsCard_Click" x:Name="ScanLevelComboBoxSettingsCard" IsClickEnabled="True" IsActionIconVisible="False">

                            <ComboBox x:Name="ScanLevelComboBox" SelectionChanged="ScanLevelComboBox_SelectionChanged" ToolTipService.ToolTip="Pick a level based on which the selected files will be scanned"
      SelectedIndex="0">
                                <ComboBoxItem>File Publisher</ComboBoxItem>
                                <ComboBoxItem>Publisher</ComboBoxItem>
                                <ComboBoxItem>Hash</ComboBoxItem>
                                <ComboBoxItem>File Path</ComboBoxItem>
                                <ComboBoxItem>WildCard Folder Path</ComboBoxItem>
                            </ComboBox>

                        </controls:SettingsCard>

                        <controls:SettingsCard Description="The higher this number, the faster the scan completes and the more system resources will be consumed."
Header="Scalability" IsClickEnabled="False" IsActionIconVisible="False">

                            <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="15">

                                <!-- Scalability Button with RadialGauge Flyout -->
                                <Button x:Name="ScalabilityButton" Content="Scalability" ToolTipService.ToolTip="The number of the concurrent/parallel tasks to use when scanning files. By default it uses 2 parallel tasks.">
                                    <Button.Flyout>
                                        <Flyout>
                                            <StackPanel>
                                                <controls:RadialGauge x:Name="ScalabilityRadialGauge"
                                                    StepSize="1"
                                                    TickSpacing="2"
                                                    ScaleWidth="12"
                                                    NeedleWidth="5"
                                                    NeedleLength="80"
                                                    TickLength="8"
                                                    TickWidth="0"
                                                    ScalePadding="0"
                                                    TickPadding="24"
                                                    Width="200"
                                                    Maximum="120"
                                                    Minimum="2"
                                                    ValueChanged="ScalabilityRadialGauge_ValueChanged"
                                                    ValueStringFormat="N0"/>
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                </Button>

                                <ProgressBar x:Name="FilesAndFoldersProgressBar" Width="200" Value="0" ToolTipService.ToolTip="The Supplemental policy creation progress" />

                            </controls:WrapPanel>

                        </controls:SettingsCard>

                        <controls:SettingsCard Description="View the details of all of the files that were detected in the file and folder paths you selected."
       Header="View detected file details"
       HeaderIcon="{ui:FontIcon Glyph=&#xE83B;}"
       IsClickEnabled="True" IsActionIconVisible="True"
       IsEnabled="False"
       x:Name="FilesAndFoldersViewFileDetailsSettingsCard"
       Click="FilesAndFoldersViewFileDetailsSettingsCard_Click">

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>


                <!-- Certificate -->

                <controls:SettingsExpander x:Name="CertificatesSettingsCard"
   Description="Create Supplemental policy based on certificates"
   Header="Certificates"
   HeaderIcon="{ui:FontIcon Glyph=&#xEB95;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="CertificatesInfoBar"
    Title="Current Status"
    BorderThickness="0"
    CornerRadius="0"
    IsIconVisible="True"
    IsOpen="False"
    IsClosable="False"
    Severity="Informational">
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>


                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="CreateCertificatesSupplementalPolicyButton" Click="CreateCertificatesSupplementalPolicyButton_Click" Content="Create Supplemental Policy"
Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" />

                        <ToggleButton x:Name="CertificatesPolicyDeployToggleButton" Click="CertificatesPolicyDeployToggleButton_Click" Content="Deploy after Creation" Margin="0,0,15,0" />

                        <TeachingTip x:Name="CreateCertificateBasedSupplementalPolicyTeachingTip"
    Target="{x:Bind CreateCertificatesSupplementalPolicyButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard Description="Browse for certificate file paths to scan and include in the Supplemental policy."
    x:Name="CertificatesBrowseForCertsSettingsCard"
    Header="Browse For Certificates" Click="CertificatesBrowseForCertsSettingsCard_Click"
    IsClickEnabled="True" IsActionIconVisible="False">

                            <Button x:Name="CertificatesBrowseForCertsButton" Content="Browse" Click="CertificatesBrowseForCertsButton_Click" />

                        </controls:SettingsCard>


                        <controls:SettingsCard Description="The name of the Supplemental policy that is going to be created."
Header="Policy Name" IsClickEnabled="False" IsActionIconVisible="False">

                            <TextBox x:Name="CertificatesPolicyNameTextBox" TextChanged="CertificatesPolicyNameTextBox_TextChanged" PlaceholderText="Supplemental Policy Name"/>

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Name="CertificatesBrowseForBasePolicySettingsCard" Description="Browse for the Base policy XML file that this Supplemental policy will be associated to."
Header="Base Policy File" IsClickEnabled="True" IsActionIconVisible="False" Click="CertificatesBrowseForBasePolicySettingsCard_Click">

                            <Button x:Name="CertificatesBrowseForBasePolicyButton" Click="CertificatesBrowseForBasePolicyButton_Click">

                                <Button.Flyout>
                                    <Flyout x:Name="CertificatesBrowseForBasePolicyButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button Content="Clear" Click="CertificatesBrowseForBasePolicyButton_Flyout_Clear_Click" />

                                            <TextBlock Text="View the Base policy path you selected." TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="CertificatesBrowseForBasePolicyButton_SelectedBasePolicyTextBox"
                 TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                 SelectionHighlightColor="Pink" MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                                <Button.Content>
                                    <controls:WrapPanel Orientation="Horizontal">

                                        <AnimatedIcon x:Name="CertificatesBasePolicyPathLightAnimatedIcon" Height="20" Margin="0,0,5,0" Width="20">
                                            <AnimatedIcon.Source>
                                                <animatedvisuals:Light/>
                                            </AnimatedIcon.Source>
                                        </AnimatedIcon>

                                        <TextBlock Text="Browse" />

                                    </controls:WrapPanel>
                                </Button.Content>


                            </Button>

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Name="CertificatesSigningScenarioSettingsCard" Description="Choose wether this certificate will be added to the User Mode or Kernel Mode Signing Scenario"
    Header="Signing Scenario" IsClickEnabled="False" IsActionIconVisible="False">

                            <RadioButtons Header="Signing Scenario" x:Name="SigningScenariosRadioButtons">
                                <RadioButton Content="User Mode" IsChecked="True" Checked="UserModeRadioButton_Checked"/>
                                <RadioButton Content="Kernel Mode" Checked="KernelModeRadioButton_Checked"/>
                            </RadioButtons>

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>




                <!-- ISG -->

                <controls:SettingsExpander x:Name="ISGSettingsCard"
   Description="Create a Supplemental policy that only enables the usage of the Intelligent Security Graph to automatically authorize reputable apps and files"
   Header="ISG"
   HeaderIcon="{ui:FontIcon Glyph=&#xE734;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="ISGInfoBar"
    Title="Current Status"
    BorderThickness="0"
    CornerRadius="0"
    IsIconVisible="True"
    IsOpen="False"
    IsClosable="False"
    Severity="Informational">
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="CreateISGSupplementalPolicyButton" Click="CreateISGSupplementalPolicyButton_Click" Content="Create Supplemental Policy"
Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" />

                        <ToggleButton x:Name="ISGPolicyDeployToggleButton" Click="ISGPolicyDeployToggleButton_Click" Content="Deploy after Creation" Margin="0,0,15,0" />

                        <TeachingTip x:Name="CreateISGSupplementalPolicyTeachingTip"
    Target="{x:Bind CreateISGSupplementalPolicyButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard Description="The name of the Supplemental policy that is going to be created."
Header="Policy Name" IsClickEnabled="False" IsActionIconVisible="False">

                            <TextBox x:Name="ISGPolicyNameTextBox" TextChanged="ISGPolicyNameTextBox_TextChanged" PlaceholderText="Supplemental Policy Name"/>

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Name="ISGBrowseForBasePolicySettingsCard" Description="Browse for the Base policy XML file that this Supplemental policy will be associated to."
Header="Base Policy File" IsClickEnabled="True" IsActionIconVisible="False" Click="ISGBrowseForBasePolicySettingsCard_Click">

                            <Button x:Name="ISGBrowseForBasePolicyButton" Click="ISGBrowseForBasePolicyButton_Click">

                                <Button.Flyout>
                                    <Flyout x:Name="ISGBrowseForBasePolicyButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button Content="Clear" Click="ISGBrowseForBasePolicyButton_Flyout_Clear_Click" />

                                            <TextBlock Text="View the Base policy path you selected." TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="ISGBrowseForBasePolicyButton_SelectedBasePolicyTextBox"
                 TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                 SelectionHighlightColor="Pink" MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                                <Button.Content>
                                    <controls:WrapPanel Orientation="Horizontal">

                                        <AnimatedIcon x:Name="ISGBasePolicyPathLightAnimatedIcon" Height="20" Margin="0,0,5,0" Width="20">
                                            <AnimatedIcon.Source>
                                                <animatedvisuals:Light/>
                                            </AnimatedIcon.Source>
                                        </AnimatedIcon>

                                        <TextBlock Text="Browse" />

                                    </controls:WrapPanel>
                                </Button.Content>


                            </Button>

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>



                <!-- Strict Kernel-Mode -->

                <controls:SettingsExpander x:Name="StrictKernelModeSection"
  Description="Create a Kernel-mode policy by scanning the event logs or scanning all local drivers"
  Header="Kernel-mode policy"
  HeaderIcon="{ui:FontIcon Glyph=&#xE71D;}" IsExpanded="False">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="StrictKernelModeInfoBar"
 Title="Current Status"
 BorderThickness="0"
 CornerRadius="0"
 IsIconVisible="True"
 IsOpen="False"
 IsClosable="False"
 Severity="Informational">
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>


                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="StrictKernelModeCreateButton" Content="Create Supplemental Policy"
Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" Click="StrictKernelModeCreateButton_Click" />

                        <ToggleButton x:Name="StrictKernelModeDeployToggleButton" Content="Deploy After Creation" Margin="0,0,15,0" />

                        <TeachingTip x:Name="StrictKernelModeCreateButtonTeachingTip"
          Target="{x:Bind StrictKernelModeCreateButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>


                        <controls:SettingsCard x:Name="StrictKernelModeAutoDetectAllDriversSettingsCard" Description="Automatically detect and list all of the drivers on the system"
                             Header="Auto Driver Detection"
                             IsClickEnabled="True" IsActionIconVisible="False" Click="StrictKernelModeAutoDetectAllDriversSettingsCard_Click">

                            <Button x:Name="StrictKernelModeAutoDetectAllDriversButton" Content="Begin" Click="StrictKernelModeAutoDetectAllDriversButton_Click" />

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Name="StrictKernelModeScanButtonSettingsCard" Description="Scan the event logs for Kernel-mode files only"
                             Header="Scan Event Logs"
                             IsClickEnabled="False" IsActionIconVisible="False" >

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="10" VerticalSpacing="10">

                                <Button x:Name="StrictKernelModeScanButton" Click="StrictKernelModeScanButton_Click" HorizontalAlignment="Center" Content="Scan for All Kernel-mode Logs" />

                                <Button x:Name="StrictKernelModeScanSinceLastRebootButton" Click="StrictKernelModeScanSinceLastRebootButton_Click" HorizontalAlignment="Center" Content="Scan for Kernel-mode Logs Since Last Reboot" />

                            </controls:WrapPanel>

                        </controls:SettingsCard>


                        <controls:SettingsCard x:Name="StrictKernelModeBrowseForBasePolicySettingsCard" Description="Browse for the Base policy XML file that this Supplemental policy will be associated to."
    Header="Base Policy File" IsClickEnabled="True" IsActionIconVisible="False" Click="StrictKernelModeBrowseForBasePolicySettingsCard_Click">

                            <Button x:Name="StrictKernelModeBrowseForBasePolicyButton" Content="Browse" Click="StrictKernelModeBrowseForBasePolicyButton_Click">

                                <Button.Flyout>
                                    <Flyout x:Name="StrictKernelModeBrowseForBasePolicyButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button Content="Clear" Click="StrictKernelModeBrowseForBasePolicyButton_Flyout_Clear_Click" />

                                            <TextBlock Text="View the Base policy path you selected." TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="StrictKernelModeBrowseForBasePolicyButton_SelectedBasePolicyTextBox"
    TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
    SelectionHighlightColor="Pink" MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                            </Button>

                        </controls:SettingsCard>


                        <controls:SettingsCard Description="The name of the Supplemental policy that is going to be created."
Header="Policy Name" IsClickEnabled="False" IsActionIconVisible="False">

                            <TextBox x:Name="StrictKernelModePolicyNameTextBox" PlaceholderText="Supplemental Policy Name"/>

                        </controls:SettingsCard>


                        <controls:SettingsCard Description="View the details of all of the Kernel-mode files that were found"
  Header="View detected Kernel-mode files"
  HeaderIcon="{ui:FontIcon Glyph=&#xE83B;}"
  IsClickEnabled="True" IsActionIconVisible="True"
  IsEnabled="False"
  Click="DetectedKernelModeFilesDetailsSettingsCard_Click"
  x:Name="DetectedKernelModeFilesDetailsSettingsCard">

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>






                <!-- Package Family Name (PFN -->

                <controls:SettingsExpander x:Name="PFNSettingsCard"
                    Description="Create a Supplemental policy based on an app's Package Family Name (PFN)"
                    Header="Package Family Name"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE734;}" Expanded="PFNSettingsCard_Expanded">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="PFNInfoBar"
                            Title="Current Status"
                            BorderThickness="0"
                            CornerRadius="0"
                            IsIconVisible="True"
                            IsOpen="False"
                            IsClosable="False"
                            Severity="Informational">
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="CreatePFNSupplementalPolicyButton" Click="CreatePFNSupplementalPolicyButton_Click" Content="Create Supplemental Policy"
Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" />

                        <ToggleButton x:Name="PFNPolicyDeployToggleButton" Content="Deploy after Creation" Margin="0,0,15,0" />

                        <TeachingTip x:Name="CreatePFNSupplementalPolicyTeachingTip"
    Target="{x:Bind CreatePFNSupplementalPolicyButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard Description="The name of the Supplemental policy that is going to be created."
                            Header="Policy Name" IsClickEnabled="False" IsActionIconVisible="False">

                            <TextBox x:Name="PFNPolicyNameTextBox" PlaceholderText="Supplemental Policy Name"/>

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Name="PFNBrowseForBasePolicySettingsCard" Description="Browse for the Base policy XML file that this Supplemental policy will be associated to."
                            Header="Base Policy File" IsClickEnabled="True" Click="PFNBrowseForBasePolicySettingsCard_Click" IsActionIconVisible="False">

                            <Button x:Name="PFNBrowseForBasePolicyButton" Click="PFNBrowseForBasePolicyButton_Click">

                                <Button.Flyout>
                                    <Flyout x:Name="PFNBrowseForBasePolicyButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button Content="Clear" Click="PFNBasePolicyClearButton_Click"/>

                                            <TextBlock Text="View the Base policy path you selected." TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="PFNBrowseForBasePolicyButton_SelectedBasePolicyTextBox"
                 TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                 SelectionHighlightColor="Pink" MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                                <Button.Content>
                                    <controls:WrapPanel Orientation="Horizontal">

                                        <AnimatedIcon x:Name="PFNBasePolicyPathLightAnimatedIcon" Height="20" Margin="0,0,5,0" Width="20">
                                            <AnimatedIcon.Source>
                                                <animatedvisuals:Light/>
                                            </AnimatedIcon.Source>
                                        </AnimatedIcon>

                                        <TextBlock Text="Browse" />

                                    </controls:WrapPanel>
                                </Button.Content>


                            </Button>

                        </controls:SettingsCard>


                        <controls:SettingsCard Description="Select one or more installed packages to create a supplemental policy for"
                            Header="Package Family Names" x:Name="PFNSelectPackagedAppsSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">


                            <controls:WrapPanel Orientation="Horizontal">


                                <controls:WrapPanel VerticalAlignment="Center" Orientation="Vertical" Margin="0,0,15,0" VerticalSpacing="15" HorizontalSpacing="10">

                                    <TextBox x:Name="PFNAppFilteringTextBox" TextChanged="PFNAppFilteringTextBox_TextChanged" PlaceholderText="Search among the apps"/>

                                    <TextBlock x:Name="PFNSelectedItemsCount" HorizontalAlignment="Center" Text="Selected Apps: 0"/>
                                    <Button Content="Refresh" HorizontalAlignment="Center" x:Name="PFNRefreshAppsListButton" Click="PFNRefreshAppsListButton_Click" />
                                    <Button Content="Select All" HorizontalAlignment="Center" x:Name="PFNSelectAllAppsListButton" Click="PFNSelectAllAppsListButton_Click" />
                                    <Button Content="Remove Selections" HorizontalAlignment="Center" x:Name="PFNRemoveSelectionAppsListButton" Click="PFNRemoveSelectionAppsListButton_Click" />

                                </controls:WrapPanel>


                                <RefreshContainer x:Name="PFNRefreshContainer" RefreshRequested="PFNRefreshContainer_RefreshRequested">


                                    <ListView
                                 x:Name="PFNPackagedAppsListView"                                 
                                 BorderThickness="1"
                                 CornerRadius="5"
                                 ItemsSource="{x:Bind PackagedAppsCollectionViewSource.View, Mode=OneWay}"
                                 BorderBrush="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                                 Width="450"
                                 Height="400"
                                 HorizontalAlignment="Left"
                                 SelectionMode="Multiple"                               
                                 PointerEntered="PFNPackagedAppsListView_PointerEntered"
                                 PointerExited="PFNPackagedAppsListView_PointerExited"
                                 SelectionChanged="PFNPackagedAppsListView_SelectionChanged"
                                 ItemTemplate="{StaticResource PackagedAppsListViewTemplate}">

                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ItemsStackPanel AreStickyGroupHeadersEnabled="True"/>
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.GroupStyle>
                                            <GroupStyle >
                                                <GroupStyle.HeaderTemplate>
                                                    <DataTemplate x:DataType="others:GroupInfoListForPackagedAppView">
                                                        <Border AutomationProperties.AccessibilityView="Raw">
                                                            <TextBlock Text="{x:Bind Key}" Style="{ThemeResource TitleTextBlockStyle}" AutomationProperties.AccessibilityView="Raw"/>
                                                        </Border>
                                                    </DataTemplate>
                                                </GroupStyle.HeaderTemplate>
                                            </GroupStyle>
                                        </ListView.GroupStyle>

                                    </ListView>

                                </RefreshContainer>


                            </controls:WrapPanel>

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>





            </StackPanel>

        </Grid>

    </ScrollView>

</Page>
