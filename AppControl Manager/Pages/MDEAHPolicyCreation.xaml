<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.MDEAHPolicyCreation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:intelgathering="using:AppControlManager.IntelGathering"
    xmlns:customUI="using:AppControlManager.CustomUIElements"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:CommunityToolkit.WinUI.Behaviors"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:animatedvisuals="using:AnimatedVisuals"
    xmlns:MSGraph="using:AppControlManager.MicrosoftGraph"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI"
    FlowDirection="{x:Bind AppSettings.ApplicationGlobalFlowDirection, Mode=OneWay}"
    mc:Ignorable="d">


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <controls:WrapPanel Grid.Row="0" VerticalSpacing="4" HorizontalSpacing="4" Orientation="Vertical" Margin="6,0,6,0">

            <TextBlock x:Uid="MDEAHPolicyCreationPageTitle" TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}" />

            <HyperlinkButton x:Uid="GuideButtonAtTop" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Create-Policy-From-MDE-Advanced-Hunting" />

        </controls:WrapPanel>

        <customUI:InfoBarV2 Grid.Row="1"
                 IsOpen="{x:Bind ViewModel.MainInfoBarIsOpen, Mode=TwoWay}"
                 Message="{x:Bind ViewModel.MainInfoBarMessage, Mode=OneWay}"
                 Severity="{x:Bind ViewModel.MainInfoBarSeverity, Mode=OneWay}"
                 IsClosable="{x:Bind ViewModel.MainInfoBarIsClosable, Mode=OneWay}">
            <customUI:InfoBarV2.ActionButton>
                <Button x:Uid="OpenInPolicyEditorButton"
                        Visibility="{x:Bind ViewModel.OpenInPolicyEditorInfoBarActionButtonVisibility, Mode=OneWay}"
                        Click="{x:Bind ViewModel.OpenInPolicyEditor}" />
            </customUI:InfoBarV2.ActionButton>
        </customUI:InfoBarV2>

        <controls:WrapPanel Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

            <ProgressRing Visibility="{x:Bind ViewModel.ScanLogsProgressRingVisibility, Mode=OneWay}"
                          IsActive="{x:Bind ViewModel.ScanLogsProgressRingIsActive, Mode=OneWay}"/>

            <SelectorBar x:Name="MenuSelectorBar"                        
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center">
                <SelectorBarItem x:Name="SelectorBarItemMain" Text="Local"/>
                <SelectorBarItem x:Name="SelectorBarItemCloud" Text="Cloud"/>
                <SelectorBarItem x:Name="SelectorBarItemCreate" Text="Create"/>
            </SelectorBar>

            <TextBox x:Uid="TotalLogsTextBlock"
                     Text="{x:Bind ViewModel.TotalCountOfTheFilesTextBox, Mode=OneWay}"
                     IsReadOnly="True"
                     HorizontalAlignment="Right"
                     VerticalAlignment="Center"
                     VerticalContentAlignment="Center"/>

            <TextBox x:Uid="SearchBoxTextBox"
                     Text="{x:Bind ViewModel.SearchBoxText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     VerticalAlignment="Center"
                     VerticalContentAlignment="Center" />

            <CalendarDatePicker PlaceholderText="Filter logs by date"
                                Date="{x:Bind ViewModel.DatePickerDate, Mode=TwoWay}"
                                ToolTipService.ToolTip="Will only show logs that are newer than the selected date"/>

        </controls:WrapPanel>

        <Border Grid.Row="3" Visibility="{x:Bind IsLocalSelected, Mode=OneWay}"
            Margin="0,10,0,10"
            Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                <!-- Scan MDE Advanced Hunting button -->
                <Button IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                        ToolTipService.ToolTip="Once you select MDE Advanced Hunting logs, you can use this button to scan them and display their results in the grid below"
                        Style="{StaticResource AccentButtonStyle}"
                        Click="{x:Bind ViewModel.ScanLogs_Click}" >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xEE6F;" />
                            <TextBlock Text="Scan Logs" Margin="5,0,0,0" />

                        </StackPanel>
                    </Button.Content>
                </Button>

                <customUI:ButtonV2 ToolTipService.ToolTip="Browse for Advanced Hunting Logs"
                                   IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                   Click="{x:Bind ViewModel.BrowseForLogs_Click}">

                    <customUI:ButtonV2.Flyout>
                        <Flyout>

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                <Button x:Uid="ClearButton" Click="{x:Bind ViewModel.BrowseForLogs_Flyout_Clear_Click}" />

                                <TextBlock Text="View the log files you selected." TextWrapping="WrapWholeWords" />

                                <TextBox Text="{x:Bind ViewModel.MDEAdvancedHuntingLogs, Mode=OneWay}"
                                    TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                    MinWidth="400" IsReadOnly="True" />

                            </controls:WrapPanel>

                        </Flyout>
                    </customUI:ButtonV2.Flyout>

                    <customUI:ButtonV2.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xEC50;" />
                            <TextBlock Text="Browse for MDE Advanced Hunting logs" Margin="5,0,0,0" />
                        </StackPanel>
                    </customUI:ButtonV2.Content>
                </customUI:ButtonV2>


            </controls:WrapPanel>
        </Border>


        <Border Grid.Row="3" Visibility="{x:Bind IsCloudSelected, Mode=OneWay}"
              Margin="0,10,0,10" Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                <Button BorderThickness="0.8" x:Uid="MicrosoftGraphButton">

                    <Button.Resources>
                        <!-- https://github.com/microsoft/microsoft-ui-xaml/blob/main/src/controls/dev/CommonStyles/Button_themeresources.xaml#L13-L16 -->
                        <ResourceDictionary>
                            <LinearGradientBrush x:Key="ButtonBorderBrush" StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="HotPink" Offset="0.0"/>
                                <GradientStop Color="#D1C4E9" Offset="0.3"/>
                                <GradientStop Color="#BBDEFB" Offset="0.6"/>
                                <GradientStop Color="MediumPurple" Offset="1.0"/>
                            </LinearGradientBrush>

                            <LinearGradientBrush x:Key="ButtonBorderBrushPointerOver" StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="HotPink" Offset="0.0"/>
                                <GradientStop Color="#D1C4E9" Offset="0.3"/>
                                <GradientStop Color="#BBDEFB" Offset="0.6"/>
                                <GradientStop Color="MediumPurple" Offset="1.0"/>
                            </LinearGradientBrush>

                            <LinearGradientBrush x:Key="ButtonBorderBrushPressed" StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="HotPink" Offset="0.0"/>
                                <GradientStop Color="#D1C4E9" Offset="0.3"/>
                                <GradientStop Color="#BBDEFB" Offset="0.6"/>
                                <GradientStop Color="MediumPurple" Offset="1.0"/>
                            </LinearGradientBrush>
                        </ResourceDictionary>
                    </Button.Resources>

                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                <AnimatedIcon.Source>
                                    <animatedvisuals:MicrosoftCloud/>
                                </AnimatedIcon.Source>
                            </AnimatedIcon>
                            <TextBlock Text="Microsoft Graph" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout Placement="Bottom">

                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">

                                    <Setter Property="Padding" Value="5,5,5,0"/>

                                    <!-- Same corner radius as the one in PanelStyle  -->
                                    <Setter Property="CornerRadius" Value="8" />

                                    <!--
                                        Important: the "resolution order" for widths (at least in winui) is minwidth, maxwidth, width
                                        Width does not override MaxWidth
                                        https://learn.microsoft.com/uwp/api/windows.ui.xaml.frameworkelement.maxwidth?view=winrt-26100#remarks
                                        -->
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <StackPanel Width="500"
                                    VerticalAlignment="Top"
                                    Orientation="Vertical"
                                    Spacing="8">

                                <controls:Segmented x:Name="segmentedControl1"
                                                    SelectedIndex="0"
                                                    HorizontalAlignment="Stretch">
                                    <controls:SegmentedItem Content="Active Account"
                                                            Tag="Active">
                                        <controls:SegmentedItem.Icon>
                                            <IconSourceElement>
                                                <BitmapIconSource UriSource="/Assets/External/Bottle.png" ShowAsMonochrome="False" />
                                            </IconSourceElement>
                                        </controls:SegmentedItem.Icon>

                                    </controls:SegmentedItem>

                                    <controls:SegmentedItem Content="Sign In"
                                            Tag="Authentication" >
                                        <controls:SegmentedItem.Icon>
                                            <IconSourceElement>
                                                <BitmapIconSource UriSource="/Assets/External/Authentication.png" ShowAsMonochrome="False" />
                                            </IconSourceElement>
                                        </controls:SegmentedItem.Icon>
                                    </controls:SegmentedItem>

                                    <controls:SegmentedItem Content="Signed In Accounts"
                                            Tag="SignedIn">
                                        <controls:SegmentedItem.Icon>
                                            <IconSourceElement>
                                                <BitmapIconSource UriSource="/Assets/External/Vault.png" ShowAsMonochrome="False" />
                                            </IconSourceElement>
                                        </controls:SegmentedItem.Icon>
                                    </controls:SegmentedItem>
                                </controls:Segmented>

                                <controls:SwitchPresenter Value="{x:Bind ((controls:SegmentedItem)segmentedControl1.SelectedItem).Tag, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center">

                                    <controls:Case Value="Active">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                                animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                                Style="{StaticResource PanelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" Spacing="10" Padding="10">

                                            <controls:WrapPanel Orientation="Vertical" VerticalSpacing="5" HorizontalSpacing="10" HorizontalAlignment="Center">

                                                <TextBlock x:Uid="CurrentlyInUseAccountDetailsTextBlock"
                                                           Margin="0,0,0,5"
                                                           HorizontalAlignment="Center"/>

                                                <TextBox IsReadOnly="True" x:Uid="CurrentActiveAccountUsername" Text="{x:Bind ViewModel.AuthCompanionCLS.CurrentActiveAccountUsername, Mode=OneWay}" HorizontalAlignment="Center" Width="470"/>
                                                <TextBox IsReadOnly="True" x:Uid="CurrentActiveAccountTenantID" Text="{x:Bind ViewModel.AuthCompanionCLS.CurrentActiveAccountTenantID, Mode=OneWay}" Margin="0,8,0,0" HorizontalAlignment="Center" Width="470"/>
                                                <TextBox IsReadOnly="True" x:Uid="CurrentActiveAccountAccountIdentifier" Text="{x:Bind ViewModel.AuthCompanionCLS.CurrentActiveAccountAccountIdentifier, Mode=OneWay}" Margin="0,8,0,0" HorizontalAlignment="Center" Width="470"/>
                                                <TextBox IsReadOnly="True" x:Uid="CurrentActiveAccountPermissions" Text="{x:Bind ViewModel.AuthCompanionCLS.CurrentActiveAccountPermissions, Mode=OneWay}" Margin="0,8,0,0" HorizontalAlignment="Center" Width="470"/>

                                            </controls:WrapPanel>

                                        </StackPanel>

                                    </controls:Case>

                                    <controls:Case Value="Authentication">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                                animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                                Style="{StaticResource PanelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical" Spacing="10" Padding="10">

                                            <StackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Center">

                                                <Button IsEnabled="{x:Bind ViewModel.AuthCompanionCLS.SignInButtonState, Mode=OneWay}"
                                                        x:Uid="SignInButton" Click="{x:Bind ViewModel.AuthCompanionCLS.SignIn}">
                                                    <Button.Content>
                                                        <StackPanel Orientation="Horizontal">
                                                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                                                <AnimatedIcon.Source>
                                                                    <animatedvisuals:SignIn/>
                                                                </AnimatedIcon.Source>
                                                            </AnimatedIcon>
                                                            <TextBlock x:Uid="SignInTextBlock"
                                                                       Margin="5,0,0,0" />
                                                        </StackPanel>
                                                    </Button.Content>
                                                </Button>

                                                <Button IsEnabled="{x:Bind ViewModel.AuthCompanionCLS.SignOutButtonState, Mode=OneWay}"
                                                        x:Uid="CancelSigningInButton" Click="{x:Bind ViewModel.AuthCompanionCLS.MSGraphCancelSignInButton_Click}">
                                                    <Button.Content>
                                                        <StackPanel Orientation="Horizontal">
                                                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                                                <AnimatedIcon.Source>
                                                                    <animatedvisuals:Cancel/>
                                                                </AnimatedIcon.Source>
                                                            </AnimatedIcon>
                                                            <TextBlock x:Uid="CancelSigningInTextBlock"
                                                                       Margin="5,0,0,0" />
                                                        </StackPanel>
                                                    </Button.Content>
                                                </Button>

                                            </StackPanel>

                                            <ComboBox
                                                ItemsSource="{x:Bind ViewModel.AuthCompanionCLS.SignInMethodsComboBoxSource}"
                                                Margin="0,5,0,0"
                                                IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                                HorizontalAlignment="Center"
                                                x:Uid="SignInMethodsComboBox"
                                                SelectedItem="{x:Bind ViewModel.AuthCompanionCLS.SignInMethodsComboBoxSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <!-- To center the header text -->
                                                <ComboBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}"
                                                            HorizontalAlignment="Center"
                                                            TextAlignment="Center" />
                                                    </DataTemplate>
                                                </ComboBox.HeaderTemplate>
                                            </ComboBox>


                                            <ComboBox
                                                ItemsSource="{x:Bind ViewModel.AuthCompanionCLS.AuthenticationContextComboBoxSource}"
                                                Margin="0,5,0,0"
                                                HorizontalAlignment="Center"
                                                x:Uid="AuthenticationContextComboBox"
                                                SelectedItem="{x:Bind ViewModel.AuthCompanionCLS.AuthenticationContextComboBoxSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                <!-- To center the header text -->
                                                <ComboBox.HeaderTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}"
                                                            HorizontalAlignment="Center"
                                                            TextAlignment="Center" />
                                                    </DataTemplate>
                                                </ComboBox.HeaderTemplate>
                                            </ComboBox>

                                        </StackPanel>
                                    </controls:Case>


                                    <controls:Case Value="SignedIn">

                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                                 animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                                 Style="{StaticResource PanelStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical" Spacing="5" Padding="3">

                                            <StackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Center" VerticalAlignment="Top">

                                                <Button HorizontalAlignment="Center" VerticalAlignment="Top" x:Uid="RemoveAccountButton" Click="{x:Bind ViewModel.AuthCompanionCLS.LogOutOfSelectedAccount}">
                                                    <Button.Content>
                                                        <StackPanel Orientation="Horizontal">
                                                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                                                <AnimatedIcon.Source>
                                                                    <animatedvisuals:Logout/>
                                                                </AnimatedIcon.Source>
                                                            </AnimatedIcon>
                                                            <TextBlock x:Uid="RemoveTextBlock" Margin="5,0,0,0" />
                                                        </StackPanel>
                                                    </Button.Content>
                                                </Button>


                                                <Button HorizontalAlignment="Center" x:Uid="SetAccountAsActiveButton" VerticalAlignment="Top" Click="{x:Bind ViewModel.AuthCompanionCLS.SetActiveFromListView}">
                                                    <Button.Content>
                                                        <StackPanel Orientation="Horizontal">
                                                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                                                <AnimatedIcon.Source>
                                                                    <animatedvisuals:Select/>
                                                                </AnimatedIcon.Source>
                                                            </AnimatedIcon>
                                                            <TextBlock x:Uid="SetAsActiveTextBlock" Margin="5,0,0,0" />
                                                        </StackPanel>
                                                    </Button.Content>
                                                </Button>

                                            </StackPanel>


                                            <!-- Shimmer -->

                                            <StackPanel Margin="0,10,0,0"
                                                    Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsShimmerVisibility, Mode=OneWay}"
                                                    Width="450"
                                                    Height="255"
                                                    Padding="16"
                                                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                                                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                                                    BorderThickness="1"
                                                    CornerRadius="4"
                                                    Spacing="12">

                                                <Grid Width="400" Height="45" CornerRadius="7" HorizontalAlignment="Center">
                                                    <labs:Shimmer Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsShimmerVisibility, Mode=OneWay}" />
                                                </Grid>

                                                <Grid Width="400" Height="45" CornerRadius="7" HorizontalAlignment="Center">
                                                    <labs:Shimmer Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsShimmerVisibility, Mode=OneWay}" />
                                                </Grid>

                                                <Grid Width="400" Height="45" CornerRadius="7" HorizontalAlignment="Center">
                                                    <labs:Shimmer Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsShimmerVisibility, Mode=OneWay}" />
                                                </Grid>

                                                <Grid Width="400" Height="45" CornerRadius="7" HorizontalAlignment="Center">
                                                    <labs:Shimmer Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsShimmerVisibility, Mode=OneWay}" />
                                                </Grid>

                                            </StackPanel>


                                            <ListView HorizontalAlignment="Center"
                                                    Visibility="{x:Bind ViewModel.AuthCompanionCLS.AuthenticatedAccountsListViewVisibility, Mode=OneWay}"
                                                    x:Name="AuthenticatedAccountsListView"
                                                    BorderThickness="0"
                                                    CornerRadius="5"
                                                    ItemsSource="{x:Bind ViewModel.ViewModelMSGraph.AuthenticatedAccounts, Mode=OneWay}"
                                                    SelectedItem="{x:Bind ViewModel.AuthCompanionCLS.ListViewSelectedAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    Height="300"
                                                    SelectionMode="Single">
                                                <ListView.ItemTemplate>
                                                    <DataTemplate x:DataType="MSGraph:AuthenticatedAccounts">
                                                        <Grid Padding="2,10,2,10">
                                                            <Grid.Resources>
                                                                <ResourceDictionary
                                                     Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml"/>
                                                            </Grid.Resources>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>

                                                            <TextBox IsReadOnly="True" Header="UserName" Text="{x:Bind Username}" Grid.Column="0" Grid.Row="0"/>
                                                            <TextBox IsReadOnly="True" Header="Tenant ID" Text="{x:Bind TenantID}" Margin="0,8,0,0" Grid.Column="0" Grid.Row="1"/>
                                                            <TextBox IsReadOnly="True" Header="Account Identifier" Text="{x:Bind AccountIdentifier}" Margin="0,8,0,0" Grid.Column="0" Grid.Row="2"/>
                                                            <TextBox IsReadOnly="True" Header="Permissions" Text="{x:Bind Permissions}" Margin="0,8,0,0" Grid.Column="0" Grid.Row="3"/>

                                                        </Grid>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>

                                            </ListView>

                                        </StackPanel>

                                    </controls:Case>
                                </controls:SwitchPresenter>

                            </StackPanel>

                        </Flyout>
                    </Button.Flyout>
                </Button>


                <Button Content="Device Name"                        
                        IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                        ToolTipService.ToolTip="Enter a device name to filter the incoming logs">
                    <Button.Flyout>
                        <Flyout>
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="CornerRadius" Value="8" />
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="3" VerticalSpacing="8">
                                <TextBox Width="300"
                                         Header="Optional: Choose a device name to filter the logs before retrieval"
                                         PlaceholderText="Device Name..."
                                         Text="{x:Bind ViewModel.DeviceNameTextBox, Mode=TwoWay}"/>
                            </controls:WrapPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>


                <Button Content="Retrieve The Logs"                        
                        IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                        Click="{x:Bind ViewModel.RetrieveTheLogsButton_Click}"
                        ToolTipService.ToolTip="Retrieve the logs by submitting an Advanced Hunting query to MDE"/>

                <Button Content="Query Examples" ToolTipService.ToolTip="You can copy the following queries and use them in the MDE Advanced Hunting portal to generate standard logs that are compatible with the AppControl Manager, or you can use the built-in functionality of the application to automatically retrieve the logs and process them">
                    <Button.Flyout>
                        <Flyout>

                            <ListView ItemsSource="{x:Bind ViewModel.AdvancedHuntingQueries}"
                                    SelectionMode="None">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" Width="300"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>

                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="local:MDEAdvancedHuntingQueriesForMDEAHPolicyCreationPage">
                                        <StackPanel Margin="0,0,0,12" HorizontalAlignment="Center">
                                            <!-- Title -->
                                            <TextBlock
                                                Text="{x:Bind QueryTitle}"
                                                TextWrapping="WrapWholeWords"
                                                FontWeight="Bold"
                                                HorizontalAlignment="Center"
                                                FontSize="16"
                                                Margin="0,5,0,5"/>

                                            <!-- Copy Button -->
                                            <!-- The button's content is a Grid containing two TextBlocks: one for the normal text and one for the copied state -->
                                            <Button x:Name="CopyButton" Click="CopyButton_Click" HorizontalAlignment="Center" Margin="0,0,0,5">
                                                <Grid>
                                                    <TextBlock x:Name="NormalText" Text="Copy" Opacity="1"/>
                                                    <TextBlock x:Name="CopiedText" Text="Copied" Opacity="0"/>
                                                </Grid>
                                            </Button>

                                            <!-- Query Text -->
                                            <TextBox Text="{x:Bind Query}" IsReadOnly="True" TextWrapping="Wrap"
                                            HorizontalAlignment="Center"
                                            Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                        </Flyout>
                    </Button.Flyout>
                </Button>

            </controls:WrapPanel>

        </Border>


        <Border Grid.Row="3" Visibility="{x:Bind IsCreateSelected, Mode=OneWay}"
            Margin="0,10,0,10" Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">


                <SplitButton IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                             ToolTipService.ToolTip="Create the supplemental policy based on the MDE Advanced Hunting logs"
                             Click="{x:Bind ViewModel.CreatePolicyButton_Click}">

                    <SplitButton.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xECCD;" />
                            <TextBlock Text="{x:Bind ViewModel.CreatePolicyButtonContent, Mode=OneWay}" Margin="5,0,0,0" />
                        </StackPanel>
                    </SplitButton.Content>

                    <SplitButton.Flyout>
                        <Flyout Placement="Bottom">

                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="Padding" Value="0" />
                                    <!-- Same corner radius as the one in PanelStyle  -->
                                    <Setter Property="CornerRadius" Value="8" />

                                    <!--
                                  Important: the "resolution order" for widths (at least in winui) is minwidth, maxwidth, width
                                  Width does not override MaxWidth
                                  https://learn.microsoft.com/uwp/api/windows.ui.xaml.frameworkelement.maxwidth?view=winrt-26100#remarks
                                  -->
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>


                            <StackPanel
                                VerticalAlignment="Top"
                                Orientation="Vertical"
                                Spacing="8">
                                <controls:Segmented x:Name="segmentedControl"
                                    HorizontalAlignment="Stretch"
                                    SelectedIndex="{x:Bind ViewModel.SelectedCreationMethod, Mode=TwoWay}">
                                    <controls:SegmentedItem Content="Add To Policy"
                                            Tag="AddToPolicy" Width="160" Icon="{ui:FontIcon Glyph=&#xEB49;}" />
                                    <controls:SegmentedItem Content="Base Policy File"
                                            Tag="BasePolicyFile" Width="160" Icon="{ui:FontIcon Glyph=&#xEB49;}"/>
                                    <controls:SegmentedItem Content="Base GUID"
                                            Tag="BaseGUID" Width="130" Icon="{ui:FontIcon Glyph=&#xEB49;}"/>
                                </controls:Segmented>
                                <controls:SwitchPresenter Value="{x:Bind ((controls:SegmentedItem)segmentedControl.SelectedItem).Tag, Mode=OneWay}" HorizontalAlignment="Center">

                                    <controls:Case Value="AddToPolicy">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                            Style="{StaticResource PanelStyle}">

                                            <TextBlock Margin="5" VerticalAlignment="Center" TextWrapping="WrapWholeWords">
                                                <Span>Browse for a XML policy file to add <Bold>the logs</Bold> to </Span>
                                            </TextBlock>

                                            <Button Margin="5"  
                                                    Content="Browse"
                                                    ToolTipService.ToolTip="Select a XML file to add the scanned logs to"
                                                    Style="{StaticResource AccentButtonStyle}"
                                                    Click="{x:Bind ViewModel.AddToPolicyButton_Click}" />

                                        </StackPanel>
                                    </controls:Case>
                                    <controls:Case Value="BasePolicyFile">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                            Style="{StaticResource PanelStyle}">


                                            <TextBlock Margin="5" VerticalAlignment="Center" TextWrapping="WrapWholeWords" Width="290" >
                                               <Span>Browse for a <Bold>base</Bold>
                                                    policy XML file that this <Underline>Supplemental</Underline> policy will belong to </Span>
                                            </TextBlock>

                                            <Button Margin="5"
                                                    Content="Browse"
                                                    ToolTipService.ToolTip="Select a base policy that this supplemental policy will belong to."
                                                    Style="{StaticResource AccentButtonStyle}"
                                                    Click="{x:Bind ViewModel.BasePolicyFileButton_Click}" />


                                        </StackPanel>
                                    </controls:Case>

                                    <controls:Case Value="BaseGUID">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                            Style="{StaticResource PanelStyle}">

                                            <TextBox PlaceholderText="Enter a Base policy GUID"
                                                     Width="300"
                                                     Margin="10"
                                                     VerticalAlignment="Center"
                                                     VerticalContentAlignment="Center"
                                                     Text="{x:Bind ViewModel.BasePolicyGUID, Mode=TwoWay}"
                                                     ToolTipService.ToolTip="Enter the Base GUID" />

                                            <Button Margin="5"
                                                    Content="Submit"
                                                    ToolTipService.ToolTip="Submit the GUID"
                                                    Style="{StaticResource AccentButtonStyle}"
                                                    Click="{x:Bind ViewModel.BaseGUIDSubmitButton_Click}" />

                                        </StackPanel>
                                    </controls:Case>
                                </controls:SwitchPresenter>
                            </StackPanel>

                        </Flyout>
                    </SplitButton.Flyout>

                </SplitButton>

                <DropDownButton x:Uid="ExtraActionsDropDownButton"
                                IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}">
                    <DropDownButton.Flyout>

                        <MenuFlyout Placement="Bottom">

                            <MenuFlyoutItem x:Uid="SelectAllMenuFlyoutItem" Click="{x:Bind ViewModel.SelectAll_Click}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE762;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutItem x:Uid="DeSelectAllMenuFlyoutItem" Click="{x:Bind ViewModel.DeSelectAll_Click}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE8E6;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutItem Click="{x:Bind ViewModel.ClearDataButton_Click}" x:Uid="ClearDataMenuFlyoutItem">
                                <MenuFlyoutItem.Icon>
                                    <SymbolIcon Symbol="Delete" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutSeparator/>

                            <ToggleMenuFlyoutItem x:Uid="DeployAfterCreationMenuFlyoutItem"
                                                  IsChecked="{x:Bind ViewModel.DeployPolicyToggle, Mode=TwoWay}">
                                <ToggleMenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE896;"/>
                                </ToggleMenuFlyoutItem.Icon>
                            </ToggleMenuFlyoutItem>

                        </MenuFlyout>

                    </DropDownButton.Flyout>
                </DropDownButton>

                <Button Content="Policy Name"
                        IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}">
                    <Button.Flyout>
                        <Flyout>
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="CornerRadius" Value="8" />
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="3" VerticalSpacing="8">
                                <TextBox Width="300"
                                         Header="Optional: Choose a policy name"
                                         Text="{x:Bind ViewModel.PolicyNameTextBox, Mode=TwoWay}"
                                         PlaceholderText="Policy Name..."/>
                            </controls:WrapPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <ComboBox SelectedItem="{x:Bind ViewModel.ScanLevelComboBoxSelectedItem, Mode=TwoWay}"                         
                          x:Uid="ScanLevelComboBox">
                    <x:String>File Publisher</x:String>
                    <x:String>Publisher</x:String>
                    <x:String>Hash</x:String>
                </ComboBox>

                <ToggleButton IsChecked="{x:Bind ViewModel.OnlyIncludeSelectedItemsToggleButton, Mode=TwoWay}"
                              x:Uid="OnlyIncludeSelectedItemsToggleButton" />

            </controls:WrapPanel>

        </Border>

        <customUI:ListViewV2 x:Name="FileIdentitiesListView"
             RegistryKey="MDE_AdvancedHunting"
             ItemsSource="{x:Bind ViewModel.FileIdentities, Mode=OneWay}"
             Grid.Row="4"
             SelectionMode="Extended">

            <customUI:ListViewV2.Header>

                <Border CornerRadius="5" Background="Black">
                    <interactivity:Interaction.Behaviors>
                        <customUI:StickyHeaderBehaviorV2/>
                    </interactivity:Interaction.Behaviors>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth1, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth2, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth3, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth4, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth5, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth6, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth7, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth8, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth9, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth10, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth11, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth12, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth13, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth14, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth15, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth16, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth17, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth18, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>
                        <Button x:Uid="FileNameColumnHeaderBtn" Tag="FileName" Grid.Column="0" Margin="10,0,0,0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="TimeCreatedColumnHeaderBtn" Tag="TimeCreated" Grid.Column="1" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SignatureStatusColumnHeaderBtn" Tag="SignatureStatus" Grid.Column="2" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="ActionColumnHeaderBtn" Tag="Action" Grid.Column="3" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="OriginalFileNameColumnHeaderBtn" Tag="OriginalFileName" Grid.Column="4" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="InternalNameColumnHeaderBtn" Tag="InternalName" Grid.Column="5" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="FileDescriptionColumnHeaderBtn" Tag="FileDescription" Grid.Column="6" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="FileVersionColumnHeaderBtn" Tag="FileVersion" Grid.Column="7" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SHA256HashColumnHeaderBtn" Tag="SHA256Hash" Grid.Column="8" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SHA1HashColumnHeaderBtn" Tag="SHA1Hash" Grid.Column="9" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SHA256FlatHashColumnHeaderBtn" Tag="SHA256FlatHash" Grid.Column="10" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SHA1FlatHashColumnHeaderBtn" Tag="SHA1FlatHash" Grid.Column="11" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="SigningScenarioColumnHeaderBtn" Tag="SISigningScenario" Grid.Column="12" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="FilePathColumnHeaderBtn" Tag="FilePath" Grid.Column="13" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="ComputerNameColumnHeaderBtn" Tag="ComputerName" Grid.Column="14" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="PolicyGUIDColumnHeaderBtn" Tag="PolicyGUID" Grid.Column="15" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="PolicyNameColumnHeaderBtn" Tag="PolicyName" Grid.Column="16" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                        <Button x:Uid="FilePublishersColumnHeaderBtn" Tag="FilePublishersToDisplay" Grid.Column="17" Margin="0" Style="{StaticResource ListViewHeaderButton}" Click="HeaderColumnSortingButton_Click"/>
                    </Grid>
                </Border>
            </customUI:ListViewV2.Header>

            <!-- DataTemplate for ListView items -->
            <customUI:ListViewV2.ItemTemplate>
                <DataTemplate x:DataType="intelgathering:FileIdentity">
                    <!-- Setting Background="Transparent" on the Grid makes it hit-test visible, meaning that even areas without any child elements (like empty spaces in the column) will respond to pointer events.  -->
                    <Grid Background="Transparent">
                        <Grid.ContextFlyout>
                            <MenuFlyout>

                                <MenuFlyoutItem x:Uid="DeleteRow" Click="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ListViewFlyoutMenuDelete_Click}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE74D;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem x:Uid="CopyRow" Click="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ListViewFlyoutMenuCopy_Click}">
                                    <MenuFlyoutItem.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="C" Modifiers="Control" Invoked="CtrlC_Invoked"/>
                                    </MenuFlyoutItem.KeyboardAccelerators>
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSubItem x:Uid="CopyIndividualItems">
                                    <MenuFlyoutSubItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutSubItem.Icon>

                                    <MenuFlyoutSubItem.Items>

                                        <MenuFlyoutItem x:Uid="FileNameHeader" Tag="FileName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="TimeCreatedHeader" Tag="TimeCreated" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignatureStatusHeader" Tag="SignatureStatus" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="ActionHeader" Tag="Action" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="OriginalFileNameHeader" Tag="OriginalFileName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="InternalNameHeader" Tag="InternalName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FileDescriptionHeader" Tag="FileDescription" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FileVersionHeader" Tag="FileVersion" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA256HashHeader" Tag="SHA256Hash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA1HashHeader" Tag="SHA1Hash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA256FlatHashHeader" Tag="SHA256FlatHash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA1FlatHashHeader" Tag="SHA1FlatHash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SigningScenarioHeader" Tag="SISigningScenario" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FilePathHeader" Tag="FilePath" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="ComputerNameHeader" Tag="ComputerName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="PolicyGUIDHeader" Tag="PolicyGUID" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="PolicyNameHeader" Tag="PolicyName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FilePublishersHeader" Tag="FilePublishersToDisplay" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                    </MenuFlyoutSubItem.Items>

                                </MenuFlyoutSubItem>
                            </MenuFlyout>
                        </Grid.ContextFlyout>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth1, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth2, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth3, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth4, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth5, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth6, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth7, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth8, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth9, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth10, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth11, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth12, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth13, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth14, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth15, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth16, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth17, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelMDEAHPolicyCreationVM.ColumnWidth18, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Bind FileName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="0"/>
                        <TextBlock Text="{x:Bind TimeCreated}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="1"/>
                        <TextBlock Text="{x:Bind SignatureStatus}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="2"/>
                        <TextBlock Text="{x:Bind Action}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="3"/>
                        <TextBlock Text="{x:Bind OriginalFileName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="4"/>
                        <TextBlock Text="{x:Bind InternalName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="5"/>
                        <TextBlock Text="{x:Bind FileDescription}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="6"/>
                        <TextBlock Text="{x:Bind FileVersion}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="7"/>
                        <TextBlock Text="{x:Bind SHA256Hash}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="8"/>
                        <TextBlock Text="{x:Bind SHA1Hash}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="9"/>
                        <TextBlock Text="{x:Bind SHA256FlatHash}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="10"/>
                        <TextBlock Text="{x:Bind SHA1FlatHash}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="11"/>
                        <TextBlock Text="{x:Bind SISigningScenario}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="12"/>
                        <TextBlock Text="{x:Bind FilePath}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="13"/>
                        <TextBlock Text="{x:Bind ComputerName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="14"/>
                        <TextBlock Text="{x:Bind PolicyGUID}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="15"/>
                        <TextBlock Text="{x:Bind PolicyName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="16"/>
                        <TextBlock Text="{x:Bind FilePublishersToDisplay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="17"/>
                    </Grid>
                </DataTemplate>
            </customUI:ListViewV2.ItemTemplate>
        </customUI:ListViewV2>

    </Grid>
</Page>
