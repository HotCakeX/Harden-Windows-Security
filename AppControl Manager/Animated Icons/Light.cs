//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.1.240821.1+077322fa26
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile Light.json
//       
//       Input file:
//           Light.json (569749 bytes created 18:46+02:00 Dec 16 2024)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   230 |
// |--------------------------+-------|
// | Expression animators     |     1 |
// | KeyFrame animators       |    27 |
// | Reference parameters     |     1 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     1 |
// |--------------------------+-------|
// | ContainerVisuals         |     3 |
// | ShapeVisuals             |     4 |
// |--------------------------+-------|
// | ContainerShapes          |     5 |
// | CompositionSpriteShapes  |    31 |
// |--------------------------+-------|
// | Brushes                  |     9 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     2 |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        light-on
    // Frame rate:  24 fps
    // Frame count: 28
    // Duration:    1166.7 mS
    // _____________________________________________________________________________________________
    // |           Marker           |           Constant           | Frame |   mS   |   Progress   |
    // |____________________________|______________________________|_______|________|______________|
    // | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
    // | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
    // | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
    // | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
    // ---------------------------------------------------------------------------------------------
    sealed partial class Light
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 1.167 seconds.
        internal const long c_durationTicks = 11666666;

        // Marker: NormalToPressed_Start.
        internal const float M_NormalToPressed_Start = 0F;

        // Marker: NormalToPressed_End.
        internal const float M_NormalToPressed_End = 0.323214293F;

        // Marker: PointerOverToPressed_Start.
        internal const float M_PointerOverToPressed_Start = 0.323214293F;

        // Marker: PointerOverToPressed_End.
        internal const float M_PointerOverToPressed_End = 0.680357158F;

        // Marker: PressedToNormal_Start.
        internal const float M_PressedToNormal_Start = 0.716071427F;

        // Marker: PressedToNormal_End.
        internal const float M_PressedToNormal_End = 1F;

        // Marker: PressedToPointerOver_Start.
        internal const float M_PressedToPointerOver_Start = 1F;

        // Marker: PressedToPointerOver_End.
        internal const float M_PressedToPointerOver_End = 1F;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res =
                new Light_AnimatedVisual(
                    compositor
                    );
            res.CreateAnimations();
            return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 28d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 24d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(11666666);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 28d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "NormalToPressed_Start", 0d },
                { "NormalToPressed_End", 0.323214285714286 },
                { "PointerOverToPressed_Start", 0.323214285714286 },
                { "PointerOverToPressed_End", 0.680357142857143 },
                { "PressedToNormal_Start", 0.716071428571429 },
                { "PressedToNormal_End", 1d },
                { "PressedToPointerOver_Start", 1d },
                { "PressedToPointerOver_End", 1d },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed partial class Light_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 11666666;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CompositionColorBrush _colorBrush_AlmostGold_FFFFEA00;
            CompositionColorBrush _colorBrush_AlmostLightSteelBlue_FF9FA8DA;
            CompositionColorBrush _colorBrush_AlmostSlateBlue_FF5C6BC0;
            CompositionContainerShape _containerShape_0;
            CompositionContainerShape _containerShape_1;
            CompositionContainerShape _containerShape_2;
            CompositionContainerShape _containerShape_3;
            CompositionContainerShape _containerShape_4;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPathGeometry _pathGeometry_30;
            CompositionSpriteShape _spriteShape_00;
            CompositionSpriteShape _spriteShape_01;
            CompositionSpriteShape _spriteShape_02;
            CompositionSpriteShape _spriteShape_03;
            CompositionSpriteShape _spriteShape_04;
            CompositionSpriteShape _spriteShape_05;
            CompositionSpriteShape _spriteShape_06;
            CompositionSpriteShape _spriteShape_07;
            CompositionSpriteShape _spriteShape_08;
            CompositionSpriteShape _spriteShape_09;
            CompositionSpriteShape _spriteShape_10;
            CompositionSpriteShape _spriteShape_11;
            CompositionSpriteShape _spriteShape_12;
            CompositionSpriteShape _spriteShape_13;
            CompositionSpriteShape _spriteShape_14;
            CompositionSpriteShape _spriteShape_15;
            CompositionSpriteShape _spriteShape_16;
            CompositionSpriteShape _spriteShape_17;
            CompositionSpriteShape _spriteShape_18;
            CompositionSpriteShape _spriteShape_19;
            CompositionSpriteShape _spriteShape_20;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation_00;
            Vector2KeyFrameAnimation _offsetVector2Animation_01;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-13.1000004F, 8.39999962F));
                    builder.AddCubicBezier(new Vector2(-13.5F, 8F), new Vector2(-13.5F, 7.4000001F), new Vector2(-13.1000004F, 7F));
                    builder.AddCubicBezier(new Vector2(-12.6999998F, 6.5999999F), new Vector2(-12.1000004F, 6.5999999F), new Vector2(-11.6999998F, 7F));
                    builder.AddCubicBezier(new Vector2(-11.3000002F, 7.4000001F), new Vector2(-11.3000002F, 8F), new Vector2(-11.8000002F, 8.39999962F));
                    builder.AddCubicBezier(new Vector2(-12F, 8.60000038F), new Vector2(-12.1999998F, 8.69999981F), new Vector2(-12.5F, 8.69999981F));
                    builder.AddCubicBezier(new Vector2(-12.6000004F, 8.69999981F), new Vector2(-12.8999996F, 8.60000038F), new Vector2(-13.1000004F, 8.39999962F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(11.6999998F, 8.39999962F));
                    builder.AddCubicBezier(new Vector2(11.3000002F, 8F), new Vector2(11.3000002F, 7.4000001F), new Vector2(11.6999998F, 7F));
                    builder.AddCubicBezier(new Vector2(12.1000004F, 6.5999999F), new Vector2(12.6999998F, 6.5999999F), new Vector2(13.1000004F, 6.9000001F));
                    builder.AddCubicBezier(new Vector2(13.5F, 7.30000019F), new Vector2(13.5F, 7.9000001F), new Vector2(13.1000004F, 8.30000019F));
                    builder.AddCubicBezier(new Vector2(12.8999996F, 8.5F), new Vector2(12.6000004F, 8.60000038F), new Vector2(12.3999996F, 8.60000038F));
                    builder.AddCubicBezier(new Vector2(12.1000004F, 8.69999981F), new Vector2(11.8999996F, 8.60000038F), new Vector2(11.6999998F, 8.39999962F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-15.6000004F, 5F));
                    builder.AddCubicBezier(new Vector2(-15.8999996F, 4.5F), new Vector2(-15.6999998F, 3.9000001F), new Vector2(-15.1999998F, 3.5999999F));
                    builder.AddCubicBezier(new Vector2(-14.6999998F, 3.29999995F), new Vector2(-14.1000004F, 3.5F), new Vector2(-13.8000002F, 4F));
                    builder.AddCubicBezier(new Vector2(-13.5F, 4.5F), new Vector2(-13.6999998F, 5.0999999F), new Vector2(-14.1999998F, 5.4000001F));
                    builder.AddCubicBezier(new Vector2(-14.3999996F, 5.5F), new Vector2(-14.5F, 5.5F), new Vector2(-14.6999998F, 5.5F));
                    builder.AddCubicBezier(new Vector2(-15.1000004F, 5.5F), new Vector2(-15.3999996F, 5.30000019F), new Vector2(-15.6000004F, 5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(14.1999998F, 5.4000001F));
                    builder.AddCubicBezier(new Vector2(13.6999998F, 5.0999999F), new Vector2(13.6000004F, 4.5F), new Vector2(13.8000002F, 4F));
                    builder.AddCubicBezier(new Vector2(14.1000004F, 3.5F), new Vector2(14.6999998F, 3.29999995F), new Vector2(15.1999998F, 3.5999999F));
                    builder.AddCubicBezier(new Vector2(15.6999998F, 3.9000001F), new Vector2(15.8000002F, 4.5F), new Vector2(15.6000004F, 5F));
                    builder.AddCubicBezier(new Vector2(15.3999996F, 5.30000019F), new Vector2(15.1000004F, 5.5F), new Vector2(14.6999998F, 5.5F));
                    builder.AddCubicBezier(new Vector2(14.5F, 5.5F), new Vector2(14.3999996F, 5.4000001F), new Vector2(14.1999998F, 5.4000001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-17.2000008F, 1.20000005F));
                    builder.AddCubicBezier(new Vector2(-17.3999996F, 0.699999988F), new Vector2(-17.1000004F, 0.100000001F), new Vector2(-16.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-16F, -0.200000003F), new Vector2(-15.3999996F, 0.100000001F), new Vector2(-15.3000002F, 0.699999988F));
                    builder.AddCubicBezier(new Vector2(-15.1999998F, 1.20000005F), new Vector2(-15.3999996F, 1.79999995F), new Vector2(-16F, 1.89999998F));
                    builder.AddLine(new Vector2(-16.2999992F, 1.89999998F));
                    builder.AddCubicBezier(new Vector2(-16.7000008F, 1.89999998F), new Vector2(-17.1000004F, 1.60000002F), new Vector2(-17.2000008F, 1.20000005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(16F, 1.79999995F));
                    builder.AddCubicBezier(new Vector2(15.5F, 1.60000002F), new Vector2(15.1999998F, 1.10000002F), new Vector2(15.3000002F, 0.600000024F));
                    builder.AddCubicBezier(new Vector2(15.5F, 0.100000001F), new Vector2(16F, -0.200000003F), new Vector2(16.6000004F, -0.100000001F));
                    builder.AddCubicBezier(new Vector2(17.1000004F, 0F), new Vector2(17.3999996F, 0.600000024F), new Vector2(17.2999992F, 1.10000002F));
                    builder.AddCubicBezier(new Vector2(17.2000008F, 1.5F), new Vector2(16.7999992F, 1.79999995F), new Vector2(16.2999992F, 1.79999995F));
                    builder.AddCubicBezier(new Vector2(16.2000008F, 1.89999998F), new Vector2(16.1000004F, 1.89999998F), new Vector2(16F, 1.79999995F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-18F, -2.9000001F));
                    builder.AddCubicBezier(new Vector2(-18F, -2.9000001F), new Vector2(-18F, -3F), new Vector2(-18F, -2.9000001F));
                    builder.AddCubicBezier(new Vector2(-18F, -3F), new Vector2(-18F, -3F), new Vector2(-18F, -2.9000001F));
                    builder.AddCubicBezier(new Vector2(-18F, -3.5F), new Vector2(-17.6000004F, -4F), new Vector2(-17F, -4F));
                    builder.AddCubicBezier(new Vector2(-16.3999996F, -4F), new Vector2(-16F, -3.5999999F), new Vector2(-15.8999996F, -3.0999999F));
                    builder.AddCubicBezier(new Vector2(-15.8999996F, -2.5999999F), new Vector2(-16.2999992F, -2.0999999F), new Vector2(-16.7999992F, -2F));
                    builder.AddCubicBezier(new Vector2(-16.7999992F, -2F), new Vector2(-16.7999992F, -2F), new Vector2(-16.8999996F, -2F));
                    builder.AddCubicBezier(new Vector2(-17.5F, -2F), new Vector2(-17.8999996F, -2.4000001F), new Vector2(-18F, -2.9000001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(16.8999996F, -2F));
                    builder.AddCubicBezier(new Vector2(16.2999992F, -2F), new Vector2(15.8999996F, -2.5F), new Vector2(15.8999996F, -3.0999999F));
                    builder.AddCubicBezier(new Vector2(15.8999996F, -3.5999999F), new Vector2(16.3999996F, -4.0999999F), new Vector2(17F, -4F));
                    builder.AddCubicBezier(new Vector2(17.5F, -4F), new Vector2(18F, -3.5F), new Vector2(17.8999996F, -2.9000001F));
                    builder.AddCubicBezier(new Vector2(17.8999996F, -2.4000001F), new Vector2(17.5F, -2F), new Vector2(16.8999996F, -2F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(15.8000002F, -6.80000019F));
                    builder.AddCubicBezier(new Vector2(15.6999998F, -7.30000019F), new Vector2(16.1000004F, -7.9000001F), new Vector2(16.6000004F, -8F));
                    builder.AddCubicBezier(new Vector2(17.1000004F, -8.10000038F), new Vector2(17.7000008F, -7.69999981F), new Vector2(17.7999992F, -7.19999981F));
                    builder.AddCubicBezier(new Vector2(17.8999996F, -6.5999999F), new Vector2(17.5F, -6.0999999F), new Vector2(17F, -6F));
                    builder.AddLine(new Vector2(16.7999992F, -6F));
                    builder.AddCubicBezier(new Vector2(16.2999992F, -6F), new Vector2(15.8000002F, -6.30000019F), new Vector2(15.8000002F, -6.80000019F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-16.8999996F, -6F));
                    builder.AddCubicBezier(new Vector2(-17.3999996F, -6.0999999F), new Vector2(-17.7999992F, -6.5999999F), new Vector2(-17.7000008F, -7.19999981F));
                    builder.AddCubicBezier(new Vector2(-17.6000004F, -7.69999981F), new Vector2(-17.1000004F, -8.10000038F), new Vector2(-16.6000004F, -8F));
                    builder.AddCubicBezier(new Vector2(-16F, -7.9000001F), new Vector2(-15.6999998F, -7.4000001F), new Vector2(-15.8000002F, -6.80000019F));
                    builder.AddCubicBezier(new Vector2(-15.8999996F, -6.30000019F), new Vector2(-16.2999992F, -6F), new Vector2(-16.7999992F, -6F));
                    builder.AddLine(new Vector2(-16.8999996F, -6F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(14.6999998F, -10.3000002F));
                    builder.AddCubicBezier(new Vector2(14.5F, -10.8000002F), new Vector2(14.6999998F, -11.3999996F), new Vector2(15.1999998F, -11.6000004F));
                    builder.AddCubicBezier(new Vector2(15.6999998F, -11.8000002F), new Vector2(16.2999992F, -11.6000004F), new Vector2(16.5F, -11.1000004F));
                    builder.AddCubicBezier(new Vector2(16.7000008F, -10.6000004F), new Vector2(16.5F, -10F), new Vector2(16F, -9.80000019F));
                    builder.AddCubicBezier(new Vector2(15.8999996F, -9.80000019F), new Vector2(15.6999998F, -9.69999981F), new Vector2(15.6000004F, -9.69999981F));
                    builder.AddCubicBezier(new Vector2(15.1999998F, -9.69999981F), new Vector2(14.8999996F, -10F), new Vector2(14.6999998F, -10.3000002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-16F, -9.89999962F));
                    builder.AddCubicBezier(new Vector2(-16.5F, -10.1000004F), new Vector2(-16.7000008F, -10.6999998F), new Vector2(-16.5F, -11.1999998F));
                    builder.AddCubicBezier(new Vector2(-16.2999992F, -11.6999998F), new Vector2(-15.6999998F, -11.8999996F), new Vector2(-15.1999998F, -11.6999998F));
                    builder.AddCubicBezier(new Vector2(-14.6999998F, -11.5F), new Vector2(-14.5F, -10.8999996F), new Vector2(-14.6999998F, -10.3999996F));
                    builder.AddCubicBezier(new Vector2(-14.8999996F, -10F), new Vector2(-15.1999998F, -9.80000019F), new Vector2(-15.6000004F, -9.80000019F));
                    builder.AddCubicBezier(new Vector2(-15.6999998F, -9.80000019F), new Vector2(-15.8999996F, -9.80000019F), new Vector2(-16F, -9.89999962F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12.8000002F, -13.6000004F));
                    builder.AddCubicBezier(new Vector2(12.5F, -14F), new Vector2(12.6000004F, -14.6000004F), new Vector2(13F, -15F));
                    builder.AddCubicBezier(new Vector2(13.3999996F, -15.3000002F), new Vector2(14.1000004F, -15.1999998F), new Vector2(14.3999996F, -14.8000002F));
                    builder.AddCubicBezier(new Vector2(14.6999998F, -14.3999996F), new Vector2(14.6000004F, -13.6999998F), new Vector2(14.1999998F, -13.3999996F));
                    builder.AddCubicBezier(new Vector2(14F, -13.3000002F), new Vector2(13.8000002F, -13.1999998F), new Vector2(13.6000004F, -13.1999998F));
                    builder.AddCubicBezier(new Vector2(13.3000002F, -13.1999998F), new Vector2(13F, -13.3000002F), new Vector2(12.8000002F, -13.6000004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_13()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-14.1999998F, -13.3999996F));
                    builder.AddCubicBezier(new Vector2(-14.6000004F, -13.6999998F), new Vector2(-14.6999998F, -14.3000002F), new Vector2(-14.3999996F, -14.8000002F));
                    builder.AddCubicBezier(new Vector2(-14.1000004F, -15.1999998F), new Vector2(-13.3999996F, -15.3000002F), new Vector2(-13F, -15F));
                    builder.AddCubicBezier(new Vector2(-12.6000004F, -14.6999998F), new Vector2(-12.5F, -14F), new Vector2(-12.8000002F, -13.6000004F));
                    builder.AddCubicBezier(new Vector2(-13F, -13.3000002F), new Vector2(-13.3000002F, -13.1999998F), new Vector2(-13.6000004F, -13.1999998F));
                    builder.AddCubicBezier(new Vector2(-13.8000002F, -13.1999998F), new Vector2(-14F, -13.1999998F), new Vector2(-14.1999998F, -13.3999996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_14()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(10.3000002F, -16.2000008F));
                    builder.AddCubicBezier(new Vector2(9.89999962F, -16.6000004F), new Vector2(9.80000019F, -17.2000008F), new Vector2(10.1999998F, -17.6000004F));
                    builder.AddCubicBezier(new Vector2(10.6000004F, -18F), new Vector2(11.1999998F, -18.1000004F), new Vector2(11.6000004F, -17.7000008F));
                    builder.AddCubicBezier(new Vector2(12F, -17.2999992F), new Vector2(12.1000004F, -16.7000008F), new Vector2(11.6999998F, -16.2999992F));
                    builder.AddCubicBezier(new Vector2(11.5F, -16.1000004F), new Vector2(11.1999998F, -16F), new Vector2(10.8999996F, -16F));
                    builder.AddCubicBezier(new Vector2(10.6999998F, -16F), new Vector2(10.5F, -16.1000004F), new Vector2(10.3000002F, -16.2000008F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_15()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-11.6999998F, -16.3999996F));
                    builder.AddCubicBezier(new Vector2(-12.1000004F, -16.7999992F), new Vector2(-12F, -17.3999996F), new Vector2(-11.6000004F, -17.7999992F));
                    builder.AddCubicBezier(new Vector2(-11.1999998F, -18.2000008F), new Vector2(-10.5F, -18.1000004F), new Vector2(-10.1999998F, -17.7000008F));
                    builder.AddCubicBezier(new Vector2(-9.80000019F, -17.2999992F), new Vector2(-9.89999962F, -16.7000008F), new Vector2(-10.3000002F, -16.2999992F));
                    builder.AddCubicBezier(new Vector2(-10.5F, -16.1000004F), new Vector2(-10.6999998F, -16F), new Vector2(-10.8999996F, -16F));
                    builder.AddCubicBezier(new Vector2(-11.1999998F, -16F), new Vector2(-11.5F, -16.2000008F), new Vector2(-11.6999998F, -16.3999996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_16()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(7.19999981F, -18.2999992F));
                    builder.AddCubicBezier(new Vector2(6.69999981F, -18.5F), new Vector2(6.5F, -19.2000008F), new Vector2(6.80000019F, -19.6000004F));
                    builder.AddCubicBezier(new Vector2(7.0999999F, -20.1000004F), new Vector2(7.5999999F, -20.2999992F), new Vector2(8.10000038F, -20F));
                    builder.AddCubicBezier(new Vector2(8.60000038F, -19.7000008F), new Vector2(8.80000019F, -19.1000004F), new Vector2(8.5F, -18.7000008F));
                    builder.AddCubicBezier(new Vector2(8.30000019F, -18.2999992F), new Vector2(8F, -18.1000004F), new Vector2(7.5999999F, -18.1000004F));
                    builder.AddCubicBezier(new Vector2(7.5F, -18.2000008F), new Vector2(7.30000019F, -18.2000008F), new Vector2(7.19999981F, -18.2999992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_17()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-8.5F, -18.7999992F));
                    builder.AddCubicBezier(new Vector2(-8.69999981F, -19.2999992F), new Vector2(-8.5F, -19.8999996F), new Vector2(-8F, -20.1000004F));
                    builder.AddCubicBezier(new Vector2(-7.5F, -20.3999996F), new Vector2(-6.9000001F, -20.2000008F), new Vector2(-6.69999981F, -19.7000008F));
                    builder.AddCubicBezier(new Vector2(-6.4000001F, -19.2000008F), new Vector2(-6.69999981F, -18.6000004F), new Vector2(-7.0999999F, -18.3999996F));
                    builder.AddCubicBezier(new Vector2(-7.19999981F, -18.2999992F), new Vector2(-7.4000001F, -18.2999992F), new Vector2(-7.5999999F, -18.2999992F));
                    builder.AddCubicBezier(new Vector2(-8F, -18.2000008F), new Vector2(-8.30000019F, -18.3999996F), new Vector2(-8.5F, -18.7999992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_18()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(3.70000005F, -19.6000004F));
                    builder.AddCubicBezier(new Vector2(3.20000005F, -19.7000008F), new Vector2(2.79999995F, -20.2999992F), new Vector2(2.9000001F, -20.7999992F));
                    builder.AddCubicBezier(new Vector2(3F, -21.2999992F), new Vector2(3.5999999F, -21.7000008F), new Vector2(4.0999999F, -21.6000004F));
                    builder.AddCubicBezier(new Vector2(4.5999999F, -21.5F), new Vector2(5F, -20.8999996F), new Vector2(4.80000019F, -20.3999996F));
                    builder.AddCubicBezier(new Vector2(4.69999981F, -19.8999996F), new Vector2(4.30000019F, -19.6000004F), new Vector2(3.79999995F, -19.6000004F));
                    builder.AddCubicBezier(new Vector2(3.9000001F, -19.5F), new Vector2(3.79999995F, -19.6000004F), new Vector2(3.70000005F, -19.6000004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_19()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-4.9000001F, -20.2999992F));
                    builder.AddCubicBezier(new Vector2(-5F, -20.7999992F), new Vector2(-4.69999981F, -21.3999996F), new Vector2(-4.0999999F, -21.5F));
                    builder.AddCubicBezier(new Vector2(-3.5999999F, -21.6000004F), new Vector2(-3F, -21.2999992F), new Vector2(-2.9000001F, -20.7999992F));
                    builder.AddCubicBezier(new Vector2(-2.79999995F, -20.2999992F), new Vector2(-3.0999999F, -19.7000008F), new Vector2(-3.5999999F, -19.6000004F));
                    builder.AddLine(new Vector2(-3.79999995F, -19.6000004F));
                    builder.AddCubicBezier(new Vector2(-4.4000001F, -19.6000004F), new Vector2(-4.80000019F, -19.8999996F), new Vector2(-4.9000001F, -20.2999992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Light
            CanvasGeometry Geometry_20()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1F, -21F));
                    builder.AddCubicBezier(new Vector2(-1F, -21.6000004F), new Vector2(-0.600000024F, -22F), new Vector2(0F, -22F));
                    builder.AddCubicBezier(new Vector2(0.5F, -22F), new Vector2(1F, -21.6000004F), new Vector2(1F, -21F));
                    builder.AddCubicBezier(new Vector2(1F, -20.5F), new Vector2(0.5F, -20F), new Vector2(0F, -20F));
                    builder.AddCubicBezier(new Vector2(-0.5F, -20F), new Vector2(-1F, -20.5F), new Vector2(-1F, -21F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 3
            CanvasGeometry Geometry_21()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(14F, -4F));
                    builder.AddCubicBezier(new Vector2(14F, -11.6999998F), new Vector2(7.69999981F, -18F), new Vector2(0F, -18F));
                    builder.AddCubicBezier(new Vector2(-7.69999981F, -18F), new Vector2(-14F, -11.6999998F), new Vector2(-14F, -4F));
                    builder.AddCubicBezier(new Vector2(-14F, 1F), new Vector2(-11.3999996F, 5.30000019F), new Vector2(-7.5F, 7.80000019F));
                    builder.AddCubicBezier(new Vector2(-6.5999999F, 8.89999962F), new Vector2(-6F, 10.3000002F), new Vector2(-6F, 11.6999998F));
                    builder.AddLine(new Vector2(-6F, 12F));
                    builder.AddLine(new Vector2(6F, 12F));
                    builder.AddLine(new Vector2(6F, 11.8999996F));
                    builder.AddCubicBezier(new Vector2(6F, 10.3999996F), new Vector2(6.5F, 9F), new Vector2(7.4000001F, 7.9000001F));
                    builder.AddCubicBezier(new Vector2(11.3999996F, 5.4000001F), new Vector2(14F, 1F), new Vector2(14F, -4F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 3
            CanvasGeometry Geometry_22()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2F, 20F));
                    builder.AddLine(new Vector2(-2F, 20F));
                    builder.AddCubicBezier(new Vector2(-4.19999981F, 20F), new Vector2(-6F, 18.2000008F), new Vector2(-6F, 16F));
                    builder.AddLine(new Vector2(-6F, 11F));
                    builder.AddLine(new Vector2(6F, 11F));
                    builder.AddLine(new Vector2(6F, 16F));
                    builder.AddCubicBezier(new Vector2(6F, 18.2000008F), new Vector2(4.19999981F, 20F), new Vector2(2F, 20F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 3
            CanvasGeometry Geometry_23()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.79999995F, 19.8999996F));
                    builder.AddCubicBezier(new Vector2(2.5F, 21.1000004F), new Vector2(1.29999995F, 22F), new Vector2(0F, 22F));
                    builder.AddCubicBezier(new Vector2(-1.29999995F, 22F), new Vector2(-2.5F, 21.1000004F), new Vector2(-2.79999995F, 19.8999996F));
                    builder.AddCubicBezier(new Vector2(-2.5999999F, 20F), new Vector2(-2.29999995F, 20F), new Vector2(-2F, 20F));
                    builder.AddLine(new Vector2(2F, 20F));
                    builder.AddCubicBezier(new Vector2(2.29999995F, 20F), new Vector2(2.5999999F, 20F), new Vector2(2.79999995F, 19.8999996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Shape tree root for layer: Lines
            // - - - Transforms: Lines Offset:<-0.5, -0.5>
            // - - Path 1
            CanvasGeometry Geometry_24()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-6F, 13.6999998F));
                    builder.AddLine(new Vector2(-6F, 15.6999998F));
                    builder.AddLine(new Vector2(6F, 14F));
                    builder.AddLine(new Vector2(6F, 12F));
                    builder.AddLine(new Vector2(-6F, 13.6999998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Shape tree root for layer: Lines
            // - - - Transforms: Lines Offset:<-0.5, -0.5>
            // - - Path 1
            CanvasGeometry Geometry_25()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-6F, 17.7000008F));
                    builder.AddLine(new Vector2(-6F, 19.7000008F));
                    builder.AddLine(new Vector2(6F, 18F));
                    builder.AddLine(new Vector2(6F, 16F));
                    builder.AddLine(new Vector2(-6F, 17.7000008F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Shape tree root for layer: Lines
            // - - - Transforms: Lines Offset:<-0.5, -0.5>
            // - - Path 1
            CanvasGeometry Geometry_26()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-6F, 21.7000008F));
                    builder.AddLine(new Vector2(-6F, 23.7000008F));
                    builder.AddLine(new Vector2(6F, 22F));
                    builder.AddLine(new Vector2(6F, 20F));
                    builder.AddLine(new Vector2(-6F, 21.7000008F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Shape tree root for layer: Lines
            // - - - Transforms: Lines Offset:<-0.5, -0.5>
            // - - Path 1
            CanvasGeometry Geometry_27()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-6F, 25.7000008F));
                    builder.AddLine(new Vector2(-6F, 27.7000008F));
                    builder.AddLine(new Vector2(6F, 26F));
                    builder.AddLine(new Vector2(6F, 24F));
                    builder.AddLine(new Vector2(-6F, 25.7000008F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Masks
            // - - Transforms: Lines Offset:<-0.5, -0.5>
            CanvasGeometry Geometry_28()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(6.5F, 11.5F));
                    builder.AddLine(new Vector2(-5.5F, 11.5F));
                    builder.AddLine(new Vector2(-5.5F, 16.5F));
                    builder.AddCubicBezier(new Vector2(-5.5F, 18.7000008F), new Vector2(-3.70000005F, 20.5F), new Vector2(-1.5F, 20.5F));
                    builder.AddLine(new Vector2(2.5F, 20.5F));
                    builder.AddCubicBezier(new Vector2(4.69999981F, 20.5F), new Vector2(6.5F, 18.7000008F), new Vector2(6.5F, 16.5F));
                    builder.AddLine(new Vector2(6.5F, 11.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: Lamp hold top
            CanvasGeometry Geometry_29()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6F, 12F));
                    builder.AddLine(new Vector2(-6F, 12F));
                    builder.AddLine(new Vector2(-6F, 11F));
                    builder.AddLine(new Vector2(6F, 11F));
                    builder.AddLine(new Vector2(6F, 12F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_30()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.5999999F, -5.80000019F));
                    builder.AddCubicBezier(new Vector2(6.5999999F, -5.80000019F), new Vector2(3.5999999F, -7.80000019F), new Vector2(3.5999999F, -7.80000019F));
                    builder.AddCubicBezier(new Vector2(3.29999995F, -8F), new Vector2(2.79999995F, -8F), new Vector2(2.5F, -7.80000019F));
                    builder.AddCubicBezier(new Vector2(2.5F, -7.80000019F), new Vector2(0F, -6.19999981F), new Vector2(0F, -6.19999981F));
                    builder.AddCubicBezier(new Vector2(0F, -6.19999981F), new Vector2(-2.4000001F, -7.80000019F), new Vector2(-2.4000001F, -7.80000019F));
                    builder.AddCubicBezier(new Vector2(-2.70000005F, -8F), new Vector2(-3.20000005F, -8F), new Vector2(-3.5F, -7.80000019F));
                    builder.AddCubicBezier(new Vector2(-3.5F, -7.80000019F), new Vector2(-6.5F, -5.80000019F), new Vector2(-6.5F, -5.80000019F));
                    builder.AddCubicBezier(new Vector2(-6.69999981F, -5.5999999F), new Vector2(-6.9000001F, -5.4000001F), new Vector2(-6.9000001F, -5.0999999F));
                    builder.AddCubicBezier(new Vector2(-6.9000001F, -4.80000019F), new Vector2(-6.9000001F, -4.5F), new Vector2(-6.69999981F, -4.30000019F));
                    builder.AddCubicBezier(new Vector2(-6.69999981F, -4.30000019F), new Vector2(-2.9000001F, 0.400000006F), new Vector2(-2.9000001F, 0.400000006F));
                    builder.AddCubicBezier(new Vector2(-2.9000001F, 0.400000006F), new Vector2(-2.9000001F, 11F), new Vector2(-2.9000001F, 11F));
                    builder.AddCubicBezier(new Vector2(-2.9000001F, 11F), new Vector2(-0.899999976F, 11F), new Vector2(-0.899999976F, 11F));
                    builder.AddCubicBezier(new Vector2(-0.899999976F, 11F), new Vector2(-0.899999976F, 0F), new Vector2(-0.899999976F, 0F));
                    builder.AddCubicBezier(new Vector2(-0.899999976F, -0.200000003F), new Vector2(-1F, -0.400000006F), new Vector2(-1.10000002F, -0.600000024F));
                    builder.AddCubicBezier(new Vector2(-1.10000002F, -0.600000024F), new Vector2(-4.4000001F, -4.69999981F), new Vector2(-4.4000001F, -4.69999981F));
                    builder.AddCubicBezier(new Vector2(-4.4000001F, -4.69999981F), new Vector2(-2.9000001F, -5.69999981F), new Vector2(-2.9000001F, -5.69999981F));
                    builder.AddCubicBezier(new Vector2(-2.9000001F, -5.69999981F), new Vector2(-0.5F, -4.0999999F), new Vector2(-0.5F, -4.0999999F));
                    builder.AddCubicBezier(new Vector2(-0.200000003F, -3.9000001F), new Vector2(0.300000012F, -3.9000001F), new Vector2(0.600000024F, -4.0999999F));
                    builder.AddCubicBezier(new Vector2(0.600000024F, -4.0999999F), new Vector2(3F, -5.69999981F), new Vector2(3F, -5.69999981F));
                    builder.AddCubicBezier(new Vector2(3F, -5.69999981F), new Vector2(4.5F, -4.69999981F), new Vector2(4.5F, -4.69999981F));
                    builder.AddCubicBezier(new Vector2(4.5F, -4.69999981F), new Vector2(1.20000005F, -0.600000024F), new Vector2(1.20000005F, -0.600000024F));
                    builder.AddCubicBezier(new Vector2(1.10000002F, -0.400000006F), new Vector2(1F, -0.200000003F), new Vector2(1F, 0F));
                    builder.AddCubicBezier(new Vector2(1F, 0F), new Vector2(1F, 11F), new Vector2(1F, 11F));
                    builder.AddCubicBezier(new Vector2(1F, 11F), new Vector2(3F, 11F), new Vector2(3F, 11F));
                    builder.AddCubicBezier(new Vector2(3F, 11F), new Vector2(3F, 0.400000006F), new Vector2(3F, 0.400000006F));
                    builder.AddCubicBezier(new Vector2(3F, 0.400000006F), new Vector2(6.80000019F, -4.30000019F), new Vector2(6.80000019F, -4.30000019F));
                    builder.AddCubicBezier(new Vector2(7F, -4.5F), new Vector2(7.0999999F, -4.80000019F), new Vector2(7F, -5.0999999F));
                    builder.AddCubicBezier(new Vector2(6.9000001F, -5.4000001F), new Vector2(6.80000019F, -5.69999981F), new Vector2(6.5999999F, -5.80000019F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_31()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(1.86500001F, -5.80000019F));
                    builder.AddCubicBezier(new Vector2(1.86500001F, -5.80000019F), new Vector2(1.00800002F, -7.80000019F), new Vector2(1.00800002F, -7.80000019F));
                    builder.AddCubicBezier(new Vector2(0.921999991F, -8F), new Vector2(0.829999983F, -7.9920001F), new Vector2(0.677999973F, -7.98899984F));
                    builder.AddCubicBezier(new Vector2(0.677999973F, -7.98899984F), new Vector2(-0.0160000008F, -7.98899984F), new Vector2(-0.0160000008F, -7.98899984F));
                    builder.AddCubicBezier(new Vector2(-0.0160000008F, -7.98899984F), new Vector2(-0.722000003F, -7.98899984F), new Vector2(-0.722000003F, -7.98899984F));
                    builder.AddCubicBezier(new Vector2(-0.887000024F, -7.99599981F), new Vector2(-0.935000002F, -8F), new Vector2(-1.02100003F, -7.80000019F));
                    builder.AddCubicBezier(new Vector2(-1.02100003F, -7.80000019F), new Vector2(-1.87800002F, -5.80000019F), new Vector2(-1.87800002F, -5.80000019F));
                    builder.AddCubicBezier(new Vector2(-1.93499994F, -5.5999999F), new Vector2(-1.99199998F, -5.4000001F), new Vector2(-1.99199998F, -5.0999999F));
                    builder.AddCubicBezier(new Vector2(-1.99199998F, -4.80000019F), new Vector2(-1.99600005F, -4.52299976F), new Vector2(-1.98599994F, -4.29899979F));
                    builder.AddCubicBezier(new Vector2(-1.98599994F, -4.29899979F), new Vector2(-1.96200001F, 0.393999994F), new Vector2(-1.96200001F, 0.393999994F));
                    builder.AddCubicBezier(new Vector2(-1.96200001F, 0.393999994F), new Vector2(-1.96200001F, 10.9940004F), new Vector2(-1.96200001F, 10.9940004F));
                    builder.AddCubicBezier(new Vector2(-1.96200001F, 10.9940004F), new Vector2(0.050999999F, 11F), new Vector2(0.050999999F, 11F));
                    builder.AddCubicBezier(new Vector2(0.050999999F, 11F), new Vector2(0.050999999F, 0F), new Vector2(0.050999999F, 0F));
                    builder.AddCubicBezier(new Vector2(0.050999999F, -0.200000003F), new Vector2(0.050999999F, -0.400000006F), new Vector2(0.050999999F, -0.600000024F));
                    builder.AddCubicBezier(new Vector2(0.050999999F, -0.600000024F), new Vector2(0.0529999994F, -4.69999981F), new Vector2(0.0529999994F, -4.69999981F));
                    builder.AddCubicBezier(new Vector2(0.0529999994F, -4.69999981F), new Vector2(0.0520000011F, -5.69999981F), new Vector2(0.0520000011F, -5.69999981F));
                    builder.AddCubicBezier(new Vector2(0.0520000011F, -5.69999981F), new Vector2(0.0540000014F, -5.70200014F), new Vector2(0.0540000014F, -5.70200014F));
                    builder.AddCubicBezier(new Vector2(0.0540000014F, -5.50199986F), new Vector2(0.0529999994F, -5.50199986F), new Vector2(0.0529999994F, -5.70200014F));
                    builder.AddCubicBezier(new Vector2(0.0529999994F, -5.70200014F), new Vector2(0.0480000004F, -5.69999981F), new Vector2(0.0480000004F, -5.69999981F));
                    builder.AddCubicBezier(new Vector2(0.0480000004F, -5.69999981F), new Vector2(0.0469999984F, -4.69999981F), new Vector2(0.0469999984F, -4.69999981F));
                    builder.AddCubicBezier(new Vector2(0.0469999984F, -4.69999981F), new Vector2(0.0489999987F, -0.600000024F), new Vector2(0.0489999987F, -0.600000024F));
                    builder.AddCubicBezier(new Vector2(0.0489999987F, -0.400000006F), new Vector2(0.0489999987F, -0.200000003F), new Vector2(0.0489999987F, 0F));
                    builder.AddCubicBezier(new Vector2(0.0489999987F, 0F), new Vector2(0.0489999987F, 11F), new Vector2(0.0489999987F, 11F));
                    builder.AddCubicBezier(new Vector2(0.0489999987F, 11F), new Vector2(1.96899998F, 10.9940004F), new Vector2(1.96899998F, 10.9940004F));
                    builder.AddCubicBezier(new Vector2(1.96899998F, 10.9940004F), new Vector2(1.96899998F, 0.393999994F), new Vector2(1.96899998F, 0.393999994F));
                    builder.AddCubicBezier(new Vector2(1.96899998F, 0.393999994F), new Vector2(1.96500003F, -4.29899979F), new Vector2(1.96500003F, -4.29899979F));
                    builder.AddCubicBezier(new Vector2(1.97599995F, -4.68300009F), new Vector2(1.96899998F, -4.75400019F), new Vector2(1.97899997F, -5.0999999F));
                    builder.AddCubicBezier(new Vector2(1.97599995F, -5.42999983F), new Vector2(1.92200005F, -5.69999981F), new Vector2(1.86500001F, -5.80000019F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostGold_FFFFEA00()
            {
                return (_colorBrush_AlmostGold_FFFFEA00 == null)
                    ? _colorBrush_AlmostGold_FFFFEA00 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xEA, 0x00))
                    : _colorBrush_AlmostGold_FFFFEA00;
            }

            // - - Layer aggregator
            // ShapeGroup: Group 3
            CompositionColorBrush ColorBrush_AlmostGoldenrod_FFFBC02D()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFB, 0xC0, 0x2D));
            }

            CompositionColorBrush ColorBrush_AlmostLightSteelBlue_FF9FA8DA()
            {
                return (_colorBrush_AlmostLightSteelBlue_FF9FA8DA == null)
                    ? _colorBrush_AlmostLightSteelBlue_FF9FA8DA = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x9F, 0xA8, 0xDA))
                    : _colorBrush_AlmostLightSteelBlue_FF9FA8DA;
            }

            // - - Layer aggregator
            // Transforms: Middle
            CompositionColorBrush ColorBrush_AlmostPaleGoldenrod_FFFFF59D()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xF5, 0x9D));
            }

            CompositionColorBrush ColorBrush_AlmostSlateBlue_FF5C6BC0()
            {
                return (_colorBrush_AlmostSlateBlue_FF5C6BC0 == null)
                    ? _colorBrush_AlmostSlateBlue_FF5C6BC0 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x5C, 0x6B, 0xC0))
                    : _colorBrush_AlmostSlateBlue_FF5C6BC0;
            }

            // - - Masks
            // Transforms: Lines Offset:<-0.5, -0.5>
            CompositionColorBrush ColorBrush_Black()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00));
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_0()
            {
                if (_containerShape_0 != null) { return _containerShape_0; }
                var result = _containerShape_0 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 22F);
                result.Offset = new Vector2(24F, 24F);
                var shapes = result.Shapes;
                // Transforms: Light
                shapes.Add(SpriteShape_00());
                // Transforms: Light
                shapes.Add(SpriteShape_01());
                // Transforms: Light
                shapes.Add(SpriteShape_02());
                // Transforms: Light
                shapes.Add(SpriteShape_03());
                // Transforms: Light
                shapes.Add(SpriteShape_04());
                // Transforms: Light
                shapes.Add(SpriteShape_05());
                // Transforms: Light
                shapes.Add(SpriteShape_06());
                // Transforms: Light
                shapes.Add(SpriteShape_07());
                // Transforms: Light
                shapes.Add(SpriteShape_08());
                // Transforms: Light
                shapes.Add(SpriteShape_09());
                // Transforms: Light
                shapes.Add(SpriteShape_10());
                // Transforms: Light
                shapes.Add(SpriteShape_11());
                // Transforms: Light
                shapes.Add(SpriteShape_12());
                // Transforms: Light
                shapes.Add(SpriteShape_13());
                // Transforms: Light
                shapes.Add(SpriteShape_14());
                // Transforms: Light
                shapes.Add(SpriteShape_15());
                // Transforms: Light
                shapes.Add(SpriteShape_16());
                // Transforms: Light
                shapes.Add(SpriteShape_17());
                // Transforms: Light
                shapes.Add(SpriteShape_18());
                // Transforms: Light
                shapes.Add(SpriteShape_19());
                // Transforms: Light
                shapes.Add(SpriteShape_20());
                // ShapeGroup: Group 3
                shapes.Add(SpriteShape_21());
                // ShapeGroup: Group 3
                shapes.Add(SpriteShape_22());
                // ShapeGroup: Group 3
                shapes.Add(SpriteShape_23());
                return result;
            }

            // Shape tree root for layer: Lines
            CompositionContainerShape ContainerShape_1()
            {
                if (_containerShape_1 != null) { return _containerShape_1; }
                var result = _containerShape_1 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 22F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: Lines Offset:<-0.5, -0.5>
                result.Shapes.Add(ContainerShape_2());
                return result;
            }

            // - Shape tree root for layer: Lines
            // ShapeGroup: Group 4
            CompositionContainerShape ContainerShape_2()
            {
                if (_containerShape_2 != null) { return _containerShape_2; }
                var result = _containerShape_2 = _c.CreateContainerShape();
                // Offset:<-0.5, -0.5>
                result.TransformMatrix = new Matrix3x2(1F, 0F, 0F, 1F, -0.5F, -0.5F);
                var shapes = result.Shapes;
                // Path 1
                shapes.Add(SpriteShape_24());
                // Path 1
                shapes.Add(SpriteShape_25());
                // Path 1
                shapes.Add(SpriteShape_26());
                // Path 1
                shapes.Add(SpriteShape_27());
                return result;
            }

            // Masks
            CompositionContainerShape ContainerShape_3()
            {
                if (_containerShape_3 != null) { return _containerShape_3; }
                var result = _containerShape_3 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 22F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: Lines Offset:<-0.5, -0.5>
                result.Shapes.Add(SpriteShape_28());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_4()
            {
                if (_containerShape_4 != null) { return _containerShape_4; }
                var result = _containerShape_4 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 22F);
                result.Offset = new Vector2(24F, 24F);
                var shapes = result.Shapes;
                // Transforms: Lamp hold top
                shapes.Add(SpriteShape_29());
                // Transforms: Middle
                shapes.Add(SpriteShape_30());
                return result;
            }

            CompositionEffectBrush EffectBrush()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            CompositionEffectFactory EffectFactory()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var result = _c.CreateEffectFactory(compositeEffect);
                return result;
            }

            CompositionPath Path_0()
            {
                if (_path_0 != null) { return _path_0; }
                var result = _path_0 = new CompositionPath(Geometry_30());
                return result;
            }

            CompositionPath Path_1()
            {
                if (_path_1 != null) { return _path_1; }
                var result = _path_1 = new CompositionPath(Geometry_31());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_00()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_01()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_01()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_02()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_02()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_03()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_03()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_04()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_04()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_05()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_05()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_06()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_06()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_07()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_07()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_08()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_08()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_09()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_09()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_10()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_10()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_11()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_11()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_12()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_12()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_13()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_13()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_14()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_14()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_15()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_15()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_16()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_16()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_17()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_17()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_18()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_18()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_19()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_19()));
            }

            // - - Layer aggregator
            // Transforms: Light
            CompositionPathGeometry PathGeometry_20()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_20()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 3
            CompositionPathGeometry PathGeometry_21()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_21()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 3
            CompositionPathGeometry PathGeometry_22()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_22()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 3
            CompositionPathGeometry PathGeometry_23()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_23()));
            }

            // - - - Shape tree root for layer: Lines
            // - Transforms: Lines Offset:<-0.5, -0.5>
            // Path 1
            CompositionPathGeometry PathGeometry_24()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_24()));
            }

            // - - - Shape tree root for layer: Lines
            // - Transforms: Lines Offset:<-0.5, -0.5>
            // Path 1
            CompositionPathGeometry PathGeometry_25()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_25()));
            }

            // - - - Shape tree root for layer: Lines
            // - Transforms: Lines Offset:<-0.5, -0.5>
            // Path 1
            CompositionPathGeometry PathGeometry_26()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_26()));
            }

            // - - - Shape tree root for layer: Lines
            // - Transforms: Lines Offset:<-0.5, -0.5>
            // Path 1
            CompositionPathGeometry PathGeometry_27()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_27()));
            }

            // - - Masks
            // Transforms: Lines Offset:<-0.5, -0.5>
            CompositionPathGeometry PathGeometry_28()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_28()));
            }

            // - - Layer aggregator
            // Transforms: Lamp hold top
            CompositionPathGeometry PathGeometry_29()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_29()));
            }

            // - - Layer aggregator
            // Transforms: Middle
            CompositionPathGeometry PathGeometry_30()
            {
                if (_pathGeometry_30 != null) { return _pathGeometry_30; }
                var result = _pathGeometry_30 = _c.CreatePathGeometry();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                if (_spriteShape_00 != null) { return _spriteShape_00; }
                var result = _spriteShape_00 = _c.CreateSpriteShape(PathGeometry_00());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                if (_spriteShape_01 != null) { return _spriteShape_01; }
                var result = _spriteShape_01 = _c.CreateSpriteShape(PathGeometry_01());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                if (_spriteShape_02 != null) { return _spriteShape_02; }
                var result = _spriteShape_02 = _c.CreateSpriteShape(PathGeometry_02());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                if (_spriteShape_03 != null) { return _spriteShape_03; }
                var result = _spriteShape_03 = _c.CreateSpriteShape(PathGeometry_03());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                if (_spriteShape_04 != null) { return _spriteShape_04; }
                var result = _spriteShape_04 = _c.CreateSpriteShape(PathGeometry_04());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                if (_spriteShape_05 != null) { return _spriteShape_05; }
                var result = _spriteShape_05 = _c.CreateSpriteShape(PathGeometry_05());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                if (_spriteShape_06 != null) { return _spriteShape_06; }
                var result = _spriteShape_06 = _c.CreateSpriteShape(PathGeometry_06());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                if (_spriteShape_07 != null) { return _spriteShape_07; }
                var result = _spriteShape_07 = _c.CreateSpriteShape(PathGeometry_07());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                if (_spriteShape_08 != null) { return _spriteShape_08; }
                var result = _spriteShape_08 = _c.CreateSpriteShape(PathGeometry_08());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                if (_spriteShape_09 != null) { return _spriteShape_09; }
                var result = _spriteShape_09 = _c.CreateSpriteShape(PathGeometry_09());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                if (_spriteShape_10 != null) { return _spriteShape_10; }
                var result = _spriteShape_10 = _c.CreateSpriteShape(PathGeometry_10());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                if (_spriteShape_11 != null) { return _spriteShape_11; }
                var result = _spriteShape_11 = _c.CreateSpriteShape(PathGeometry_11());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                if (_spriteShape_12 != null) { return _spriteShape_12; }
                var result = _spriteShape_12 = _c.CreateSpriteShape(PathGeometry_12());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                if (_spriteShape_13 != null) { return _spriteShape_13; }
                var result = _spriteShape_13 = _c.CreateSpriteShape(PathGeometry_13());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                if (_spriteShape_14 != null) { return _spriteShape_14; }
                var result = _spriteShape_14 = _c.CreateSpriteShape(PathGeometry_14());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_15()
            {
                if (_spriteShape_15 != null) { return _spriteShape_15; }
                var result = _spriteShape_15 = _c.CreateSpriteShape(PathGeometry_15());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_16()
            {
                if (_spriteShape_16 != null) { return _spriteShape_16; }
                var result = _spriteShape_16 = _c.CreateSpriteShape(PathGeometry_16());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_17()
            {
                if (_spriteShape_17 != null) { return _spriteShape_17; }
                var result = _spriteShape_17 = _c.CreateSpriteShape(PathGeometry_17());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_18()
            {
                if (_spriteShape_18 != null) { return _spriteShape_18; }
                var result = _spriteShape_18 = _c.CreateSpriteShape(PathGeometry_18());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_19()
            {
                if (_spriteShape_19 != null) { return _spriteShape_19; }
                var result = _spriteShape_19 = _c.CreateSpriteShape(PathGeometry_19());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_20()
            {
                if (_spriteShape_20 != null) { return _spriteShape_20; }
                var result = _spriteShape_20 = _c.CreateSpriteShape(PathGeometry_20());
                result.FillBrush = ColorBrush_AlmostGold_FFFFEA00();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_21()
            {
                var result = _c.CreateSpriteShape(PathGeometry_21());
                result.FillBrush = ColorBrush_AlmostGoldenrod_FFFBC02D();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_22()
            {
                var result = _c.CreateSpriteShape(PathGeometry_22());
                result.FillBrush = ColorBrush_AlmostLightSteelBlue_FF9FA8DA();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_23()
            {
                var result = _c.CreateSpriteShape(PathGeometry_23());
                result.FillBrush = ColorBrush_AlmostSlateBlue_FF5C6BC0();
                return result;
            }

            // - - Shape tree root for layer: Lines
            // Transforms: Lines Offset:<-0.5, -0.5>
            // Path 1
            CompositionSpriteShape SpriteShape_24()
            {
                var result = _c.CreateSpriteShape(PathGeometry_24());
                result.FillBrush = ColorBrush_AlmostSlateBlue_FF5C6BC0();
                return result;
            }

            // - - Shape tree root for layer: Lines
            // Transforms: Lines Offset:<-0.5, -0.5>
            // Path 1
            CompositionSpriteShape SpriteShape_25()
            {
                var result = _c.CreateSpriteShape(PathGeometry_25());
                result.FillBrush = ColorBrush_AlmostSlateBlue_FF5C6BC0();
                return result;
            }

            // - - Shape tree root for layer: Lines
            // Transforms: Lines Offset:<-0.5, -0.5>
            // Path 1
            CompositionSpriteShape SpriteShape_26()
            {
                var result = _c.CreateSpriteShape(PathGeometry_26());
                result.FillBrush = ColorBrush_AlmostSlateBlue_FF5C6BC0();
                return result;
            }

            // - - Shape tree root for layer: Lines
            // Transforms: Lines Offset:<-0.5, -0.5>
            // Path 1
            CompositionSpriteShape SpriteShape_27()
            {
                var result = _c.CreateSpriteShape(PathGeometry_27());
                result.FillBrush = ColorBrush_AlmostSlateBlue_FF5C6BC0();
                return result;
            }

            // - Masks
            // Transforms for Lines Offset:<-0.5, -0.5>
            CompositionSpriteShape SpriteShape_28()
            {
                // Offset:<-0.5, -0.5>
                var geometry = PathGeometry_28();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, -0.5F, -0.5F), ColorBrush_Black()); ;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_29()
            {
                var result = _c.CreateSpriteShape(PathGeometry_29());
                result.FillBrush = ColorBrush_AlmostLightSteelBlue_FF9FA8DA();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_30()
            {
                var result = _c.CreateSpriteShape(PathGeometry_30());
                result.FillBrush = ColorBrush_AlmostPaleGoldenrod_FFFFF59D();
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Lines
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_2());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_0());
                children.InsertAtTop(SpriteVisual_0());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_3());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return (_cubicBezierEasingFunction_1 == null)
                    ? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.333000004F), new Vector2(0.666999996F, 0.666999996F))
                    : _cubicBezierEasingFunction_1;
            }

            // - - - Layer aggregator
            // - Transforms: Middle
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, Path_0(), HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.25F, Path_1(), CubicBezierEasingFunction_0());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, Path_0(), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, Path_0(), CubicBezierEasingFunction_0());
                // Frame 21.
                result.InsertKeyFrame(0.75F, Path_1(), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, Path_0(), CubicBezierEasingFunction_0());
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0()
            {
                // Frame 0.
                if (_rotationAngleInDegreesScalarAnimation_0_to_0 != null) { return _rotationAngleInDegreesScalarAnimation_0_to_0; }
                var result = _rotationAngleInDegreesScalarAnimation_0_to_0 = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, 0F, HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.25F, -5F, CubicBezierEasingFunction_0());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, 0F, CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, 0F, CubicBezierEasingFunction_0());
                // Frame 21.
                result.InsertKeyFrame(0.75F, 5F, CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, 0F, CubicBezierEasingFunction_0());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_0());
                return result;
            }

            // Shape tree root for layer: Lines
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_1());
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_3());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_3()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_4());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_00()
            {
                // Frame 0.
                if (_offsetVector2Animation_00 != null) { return _offsetVector2Animation_00; }
                var result = _offsetVector2Animation_00 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(7F, -2F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(7F, -2F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_01()
            {
                // Frame 0.
                if (_offsetVector2Animation_01 != null) { return _offsetVector2Animation_01; }
                var result = _offsetVector2Animation_01 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(-7F, -2F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(-7F, -2F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_02()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(6F, -1F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(6F, -1F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_03()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(-6F, -1F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(-6F, -1F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_04()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(6F, 0F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(6F, 0F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_05()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(-6F, 0F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(-6F, 0F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_06()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(-6F, 1F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(-6F, 1F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_07()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(6F, 1F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(6F, 1F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_08()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(-6F, 2F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(-6F, 2F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_09()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(6F, 2F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(6F, 2F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_10()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(-6F, 3F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(-6F, 3F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_11()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(6F, 3F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(6F, 3F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_12()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(-5F, 4F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(-5F, 4F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_13()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(5F, 4F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(5F, 4F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_14()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(-3F, 5F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(-3F, 5F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_15()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(3F, 5F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(3F, 5F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_16()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(-1F, 5F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(-1F, 5F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_17()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(1F, 5F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(1F, 5F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // Transforms: Light
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_18()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(0F, 5F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(0F, 5F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Shape tree root for layer: Lines
            // Transforms: Lines Offset:<-0.5, -0.5>
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_19()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0.5F, 0.5F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0.5F, 0.5F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.392857134F, new Vector2(0.5F, -7.5F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.607142866F, new Vector2(0.5F, -7.5F), CubicBezierEasingFunction_1());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0.5F, 0.5F), CubicBezierEasingFunction_0());
                return result;
            }

            internal Light_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(48F, 48F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_0.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0(), AnimationController_0());
                _containerShape_1.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0(), AnimationController_0());
                _containerShape_2.StartAnimation("Offset", OffsetVector2Animation_19(), AnimationController_0());
                _containerShape_3.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0(), AnimationController_0());
                _containerShape_4.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0(), AnimationController_0());
                _pathGeometry_30.StartAnimation("Path", PathKeyFrameAnimation_0(), AnimationController_0());
                _spriteShape_00.StartAnimation("Offset", OffsetVector2Animation_00(), AnimationController_0());
                _spriteShape_01.StartAnimation("Offset", OffsetVector2Animation_01(), AnimationController_0());
                _spriteShape_02.StartAnimation("Offset", OffsetVector2Animation_00(), AnimationController_0());
                _spriteShape_03.StartAnimation("Offset", OffsetVector2Animation_01(), AnimationController_0());
                _spriteShape_04.StartAnimation("Offset", OffsetVector2Animation_02(), AnimationController_0());
                _spriteShape_05.StartAnimation("Offset", OffsetVector2Animation_03(), AnimationController_0());
                _spriteShape_06.StartAnimation("Offset", OffsetVector2Animation_04(), AnimationController_0());
                _spriteShape_07.StartAnimation("Offset", OffsetVector2Animation_05(), AnimationController_0());
                _spriteShape_08.StartAnimation("Offset", OffsetVector2Animation_06(), AnimationController_0());
                _spriteShape_09.StartAnimation("Offset", OffsetVector2Animation_07(), AnimationController_0());
                _spriteShape_10.StartAnimation("Offset", OffsetVector2Animation_08(), AnimationController_0());
                _spriteShape_11.StartAnimation("Offset", OffsetVector2Animation_09(), AnimationController_0());
                _spriteShape_12.StartAnimation("Offset", OffsetVector2Animation_10(), AnimationController_0());
                _spriteShape_13.StartAnimation("Offset", OffsetVector2Animation_11(), AnimationController_0());
                _spriteShape_14.StartAnimation("Offset", OffsetVector2Animation_12(), AnimationController_0());
                _spriteShape_15.StartAnimation("Offset", OffsetVector2Animation_13(), AnimationController_0());
                _spriteShape_16.StartAnimation("Offset", OffsetVector2Animation_14(), AnimationController_0());
                _spriteShape_17.StartAnimation("Offset", OffsetVector2Animation_15(), AnimationController_0());
                _spriteShape_18.StartAnimation("Offset", OffsetVector2Animation_16(), AnimationController_0());
                _spriteShape_19.StartAnimation("Offset", OffsetVector2Animation_17(), AnimationController_0());
                _spriteShape_20.StartAnimation("Offset", OffsetVector2Animation_18(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _containerShape_0.StopAnimation("RotationAngleInDegrees");
                _containerShape_1.StopAnimation("RotationAngleInDegrees");
                _containerShape_2.StopAnimation("Offset");
                _containerShape_3.StopAnimation("RotationAngleInDegrees");
                _containerShape_4.StopAnimation("RotationAngleInDegrees");
                _pathGeometry_30.StopAnimation("Path");
                _spriteShape_00.StopAnimation("Offset");
                _spriteShape_01.StopAnimation("Offset");
                _spriteShape_02.StopAnimation("Offset");
                _spriteShape_03.StopAnimation("Offset");
                _spriteShape_04.StopAnimation("Offset");
                _spriteShape_05.StopAnimation("Offset");
                _spriteShape_06.StopAnimation("Offset");
                _spriteShape_07.StopAnimation("Offset");
                _spriteShape_08.StopAnimation("Offset");
                _spriteShape_09.StopAnimation("Offset");
                _spriteShape_10.StopAnimation("Offset");
                _spriteShape_11.StopAnimation("Offset");
                _spriteShape_12.StopAnimation("Offset");
                _spriteShape_13.StopAnimation("Offset");
                _spriteShape_14.StopAnimation("Offset");
                _spriteShape_15.StopAnimation("Offset");
                _spriteShape_16.StopAnimation("Offset");
                _spriteShape_17.StopAnimation("Offset");
                _spriteShape_18.StopAnimation("Offset");
                _spriteShape_19.StopAnimation("Offset");
                _spriteShape_20.StopAnimation("Offset");
            }

        }
    }
}
