<Project Sdk="Microsoft.NET.Sdk">

  <!-- https://github.com/microsoft/CsWinRT/blob/master/nuget/Microsoft.Windows.CsWinRT.targets -->

  <!-- Global -->
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net9.0-windows10.0.26100.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.22621.0</TargetPlatformMinVersion>

    <!-- https://learn.microsoft.com/dotnet/standard/frameworks#support-older-os-versions -->
    <SupportedOSPlatformVersion>10.0.22621.0</SupportedOSPlatformVersion>

    <!-- https://learn.microsoft.com/dotnet/core/project-sdk/msbuild-props#invariantglobalization -->
    <InvariantGlobalization>true</InvariantGlobalization>

    <RootNamespace>AppControlManager</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x64;arm64</Platforms>
    <RuntimeIdentifiers>win-x64;win-arm64</RuntimeIdentifiers>
    <PublishProfile>win-$(Platform).pubxml</PublishProfile>
    <UseWinUI>true</UseWinUI>
    <EnableMsixTooling>true</EnableMsixTooling>
    <Nullable>enable</Nullable>

    <!-- Defined by CsWinRT https://github.com/microsoft/CsWinRT
        Using the latest version as defined in the CsWinRT release notes guarantees that we use the latest CsWinRT projections features.

        The reason Windows.SDK.NET.Ref is released in batches of 3: https://www.nuget.org/packages/Microsoft.Windows.SDK.NET.Ref
        is that they have different targets. Lowest one is .NET 6, middle one is .NET 8 without UWP XAML and highest one is .NET 8 with UWP XAML.
    -->
    <WindowsSdkPackageVersion>10.0.26100.56</WindowsSdkPackageVersion>

    <!--
    By default .NET runtimes are contained in the MSIX. This line will also include the WindowsAppSDK in the MSIX file
    so that the App will be installable on any system that neither has the .NET runtime nor the latest AppSDK

    Without this, we'd have to download the latest SDK and install it manually on the user's system, which will add the relevant packages
    and satisfy the requirements of the MSIX instlaler.
    https://learn.microsoft.com/windows/apps/windows-app-sdk/downloads
    -->
    <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>

    <!-- Publish Properties -->
    <!-- Can't use and don't need Ready2Run when using Native AOT -->
    <!-- <PublishReadyToRun Condition="'$(Configuration)' != 'Debug'">true</PublishReadyToRun> -->
    <PublishReadyToRun>false</PublishReadyToRun>

    <ImplicitUsings>disable</ImplicitUsings>
    <Description>A modern secure application that simplifies management of Application Control in Windows.</Description>
    <PackageProjectUrl>https://github.com/HotCakeX/Harden-Windows-Security</PackageProjectUrl>
    <RepositoryUrl>https://github.com/HotCakeX/Harden-Windows-Security</RepositoryUrl>
    <PackageTags>App Control,WDAC,AppControl For Business, AppControl Manager</PackageTags>
    <PackageReleaseNotes>https://github.com/HotCakeX/Harden-Windows-Security/releases</PackageReleaseNotes>

    <!-- https://learn.microsoft.com/dotnet/core/project-sdk/msbuild-props#rollforward -->
    <RollForward>LatestMajor</RollForward>

    <!-- Automatically created for packing -->
    <!-- https://learn.microsoft.com/windows/msix/app-installer/create-appinstallerfile-vs -->
    <GenerateAppInstallerFile>False</GenerateAppInstallerFile>
    <AppxPackageSigningEnabled>False</AppxPackageSigningEnabled>
    <!-- This specifies what hashing algorithm must be used for the certificate that will sign the MSIX package -->
    <AppxPackageSigningTimestampDigestAlgorithm>SHA512</AppxPackageSigningTimestampDigestAlgorithm>
    <!-- <AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm> -->
    <AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>

    <!-- Defining custom directory in the root directory to be created if it doesn't exist. MSIX package after packing will be stored there -->
    <!-- Defining it in each publish profile -->
    <!-- <AppxPackageDir>MSIXOutputX64\</AppxPackageDir> -->

    <AppxSymbolPackageEnabled>True</AppxSymbolPackageEnabled>
    <GenerateTestArtifacts>True</GenerateTestArtifacts>
    <AppxBundle>Always</AppxBundle>
    <AppxBundlePlatforms>x64|arm64</AppxBundlePlatforms>
    <HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
    <AssemblyName>AppControlManager</AssemblyName>
    <!-- https://learn.microsoft.com/dotnet/core/deploying/native-aot/optimizing -->

    <ErrorReport>send</ErrorReport>
    <FileVersion>2.0.23.0</FileVersion>
    <AssemblyVersion>$(FileVersion)</AssemblyVersion>
    <NeutralLanguage>en-US</NeutralLanguage>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <StartupObject>AppControlManager.Program</StartupObject>

    <!-- https://learn.microsoft.com/dotnet/csharp/language-reference/unsafe-code -->
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>

    <Version>$(FileVersion)</Version>
    <Copyright>Â© 2024-Present</Copyright>
    <Title>AppControl Manager</Title>
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>

    <IlcMaxVectorTBitWidth>512</IlcMaxVectorTBitWidth>

    <!-- https://learn.microsoft.com/dotnet/standard/garbage-collection/workstation-server-gc -->
    <!-- https://learn.microsoft.com/dotnet/standard/garbage-collection/background-gc -->
    <!-- https://learn.microsoft.com/dotnet/core/runtime-config/garbage-collector -->

    <!--
      <ServerGarbageCollection>true</ServerGarbageCollection>
      <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>
    -->

    <!-- https://learn.microsoft.com/dotnet/core/project-sdk/msbuild-props#optimizeimplicitlytriggeredbuild -->
    <OptimizeImplicitlyTriggeredBuild>True</OptimizeImplicitlyTriggeredBuild>

    <!-- https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/issues/5226 -->
    <NoWarn>IL3000</NoWarn>
    <LangVersion>preview</LangVersion>

  </PropertyGroup>


  <!-- Only for Debug -->
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">

    <EnableXAMLDiagnostics>true</EnableXAMLDiagnostics>

    <NuGetAudit>false</NuGetAudit>

    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>

  </PropertyGroup>


  <!-- Only for Release -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">

    <NuGetAudit>true</NuGetAudit>

    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>

    <!-- https://learn.microsoft.com/dotnet/core/project-sdk/msbuild-props#satelliteresourcelanguages -->
    <SatelliteResourceLanguages>en-US,he-IL</SatelliteResourceLanguages>

    <RepositoryType>GitHub</RepositoryType>

    <!-- There should be absolutely no trim warnings before this can be enabled
    Otherwise there is no guarantee that the app will work as expected at all times -->
    <!-- https://learn.microsoft.com/dotnet/core/deploying/trimming/trimming-options -->
    <PublishTrimmed>True</PublishTrimmed>
    <TrimMode>full</TrimMode>
    <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
    <SuppressTrimAnalysisWarnings>false</SuppressTrimAnalysisWarnings>
    <ILLinkTreatWarningsAsErrors>true</ILLinkTreatWarningsAsErrors>
    <TrimmerSingleWarn>false</TrimmerSingleWarn>
    <TrimmerRemoveSymbols>true</TrimmerRemoveSymbols>
    <!-- WASDK isn't a .NET libary so it can't use these features and cannot be affected
    We won't get warnings for these in compile time if a code or library relies on them.
    We can get NotSupportedException exception during runtime instead. -->
    <EnableUnsafeUTF7Encoding>false</EnableUnsafeUTF7Encoding>
    <EnableUnsafeBinaryFormatterSerialization>false</EnableUnsafeBinaryFormatterSerialization>
    <XmlResolverIsNetworkingEnabledByDefault>false</XmlResolverIsNetworkingEnabledByDefault>
    <DebuggerSupport>false</DebuggerSupport>
    <MetadataUpdaterSupport>false</MetadataUpdaterSupport>

    <!-- Disabled by default in the default ILC.exe config -->
    <EventSourceSupport>false</EventSourceSupport>

    <!--
        Will cause the "Fold identical method bodies" feature to be implicitly enabled which can also be enabled by supplying "- -methodbodyfolding" to the ILC.exe .
        It also won't use "System.Private.StackTraceMetadata" during static code gen; supplying "- -methodbodyfolding" to the ILC.exe would not have this effect.
        Compared to that parameter, this option reduces package size even more but removes stack trace info.

        If we use "- -methodbodyfolding" parameter of the ILC.exe only, the stack traces will sometimes be nonsensical,
        because they will have methods we're not calling (they got folded with something we're actually calling)

        This is the only suported way to enable folding. Disabling stack traces means I don't care about stack, feel free to fold method bodies.
     -->
    <StackTraceSupport>true</StackTraceSupport>

    <!-- https://learn.microsoft.com/dotnet/core/deploying/native-aot/security#control-flow-guard -->
    <ControlFlowGuard>Guard</ControlFlowGuard>

    <!-- https://learn.microsoft.com/dotnet/core/deploying/native-aot/security#control-flow-enforcement-technology-shadow-stack-net-9 -->
    <CetCompat>true</CetCompat>

    <GenerateAssemblyInfo>True</GenerateAssemblyInfo>
    <PublishAot>True</PublishAot>
    <OptimizationPreference>Speed</OptimizationPreference>

    <!-- https://learn.microsoft.com/dotnet/fundamentals/apicompat/package-validation/overview -->
    <EnablePackageValidation>true</EnablePackageValidation>
    <EnableStrictModeForCompatibleFrameworksInPackage>true</EnableStrictModeForCompatibleFrameworksInPackage>
    <EnableStrictModeForCompatibleTfms>true</EnableStrictModeForCompatibleTfms>

    <EnforceCodeStyleInBuild>True</EnforceCodeStyleInBuild>

    <NuGetAuditMode>all</NuGetAuditMode>
    <NuGetAuditLevel>low</NuGetAuditLevel>

    <GenerateDocumentationFile>True</GenerateDocumentationFile>

    <DocumentationFile>AppControlManagerAPIDocumentation.xml</DocumentationFile>

    <PackageReadmeFile>AppControl Manager.md</PackageReadmeFile>

    <GenerateTemporaryStoreCertificate>True</GenerateTemporaryStoreCertificate>

    <CodeAnalysisTreatWarningsAsErrors>true</CodeAnalysisTreatWarningsAsErrors>

    <!-- https://learn.microsoft.com/dotnet/core/project-sdk/msbuild-props#analysismodecategory -->
    <AnalysisModeDocumentation>All</AnalysisModeDocumentation>
    <AnalysisModeGlobalization>All</AnalysisModeGlobalization>
    <AnalysisModePerformance>All</AnalysisModePerformance>
    <AnalysisModeInteroperability>All</AnalysisModeInteroperability>

    <!-- https://learn.microsoft.com/en-us/dotnet/core/extensions/configuration-generator -->
    <EnableConfigurationBindingGenerator>true</EnableConfigurationBindingGenerator>

  </PropertyGroup>


  <!--
  The default parameters passed to the ILC.exe during compilation
  https://github.com/dotnet/runtime/blob/main/src/coreclr/nativeaot/BuildIntegration/Microsoft.NETCore.Native.targets


  We can pass the parameters displayed by the - -help switch of the ilc.exe using the syntax below
  "C:\Users\HotCakeX\.nuget\packages\runtime.win-x64.microsoft.dotnet.ilcompiler\9.0.2\tools\ilc.exe"


  We can see what parameters were used by the NAOT code generator, ILC, by inspecting the response file located at:
  "Harden-Windows-Security\AppControl Manager\obj\x64\Release\net9.0-windows10.0.26100.0\win-x64\native\AppControlManager.ilc.rsp"

  -->
  <ItemGroup>
    <!-- The logs generated by the following parameters will be included in the binlog file specified by the -bl:X64MSBuildLog.binlog parameter on the CLI -->
    <IlcArg Include="--debug" />
    <IlcArg Include="--verbose" />

    <!--  <IlcArg Include="- -methodbodyfolding" /> -->
  </ItemGroup>


  <!--
  Not needed for now

  <ItemGroup>
    <TrimmerRootDescriptor Include="MyRoots.xml" />
  </ItemGroup>
  -->

  <!-- Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored. -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>

  <!-- Nuget packages
  All transitive/nested packages under the main packages are added as well
  so they can be updated separately and receive bug/security vulnerability fixes faster
  https://devblogs.microsoft.com/nuget/introducing-transitive-dependencies-in-visual-studio/
  -->
  <ItemGroup>

    <!-- Main Packages - Without these packages, there will be compilaton errors related to missing types -->
    <PackageReference Include="CommunityToolkit.Labs.WinUI.Shimmer" Version="0.1.250319-build.2093" />
    <PackageReference Include="CommunityToolkit.WinUI.Animations" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.WinUI.Controls.Primitives" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.WinUI.Controls.RadialGauge" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.WinUI.Controls.Segmented" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.WinUI.Controls.SettingsControls" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.WinUI.Controls.Sizers" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.WinUI.Lottie" Version="8.1.240821" />
    <PackageReference Include="CommunityToolkit.WinUI.Media" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.WinUI.Triggers" Version="8.2.250402" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="9.0.5" />
    <PackageReference Include="Microsoft.Graphics.Win2D" Version="1.3.2" />
    <PackageReference Include="Microsoft.Identity.Client" Version="4.72.0" />
    <PackageReference Include="Microsoft.Identity.Client.Broker" Version="4.72.0" />
    <PackageReference Include="Microsoft.Windows.CsWin32" Version="0.3.183">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Windows.CsWinRT" Version="2.2.0" />
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.6.250430001" />
    <PackageReference Include="System.Security.Cryptography.Pkcs" Version="9.0.5" />
    <PackageReference Include="System.Diagnostics.EventLog" Version="9.0.5" />
    <PackageReference Include="CommunityToolkit.WinUI.Behaviors" Version="8.2.250402" />

    <!-- Transitive Packages - Without these packages, there will not be compilation error related to missing types -->
    <PackageReference Include="CommunityToolkit.WinUI.Extensions" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.WinUI.Helpers" Version="8.2.250402" />
    <PackageReference Include="CommunityToolkit.Common" Version="8.4.0" />
    <PackageReference Include="Microsoft.IdentityModel.Abstractions" Version="8.10.0" />
    <PackageReference Include="Microsoft.Web.WebView2" Version="1.0.3240.44" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.26100.4188" />
    <PackageReference Include="Microsoft.Windows.SDK.Win32Docs" Version="0.1.42-alpha" />
    <PackageReference Include="Microsoft.Windows.SDK.Win32Metadata" Version="63.0.31-preview" />
    <PackageReference Include="Microsoft.Windows.WDK.Win32Metadata" Version="0.13.25-experimental" />
    <PackageReference Include="Microsoft.Xaml.Behaviors.WinUI.Managed" Version="3.0.0" />
    <PackageReference Include="runtime.win-arm64.Microsoft.DotNet.ILCompiler" Version="9.0.5" />
    <PackageReference Include="runtime.win-x64.Microsoft.DotNet.ILCompiler" Version="9.0.5" />
    <PackageReference Include="System.Diagnostics.DiagnosticSource" Version="9.0.5" />
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.1.2" />
    <PackageReference Include="Microsoft.Identity.Client.NativeInterop" Version="0.19.0" />

  </ItemGroup>

  <ItemGroup>
    <Page Update="Pages\MicrosoftDocumentation.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\GitHubDocumentation.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\Settings.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\GetCIHashes.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <!--
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution
    Explorer "Package and Publish" context menu entry to be enabled for this project even if
    the Windows App SDK Nuget package has not yet been restored.
  -->
  <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="CppInterop\ScheduledTaskManager-ARM64.exe" />
    <None Remove="CppInterop\ScheduledTaskManager-x64.exe" />
    <None Remove="Pages\AllowNewAppsDataGrid.xaml" />
    <None Remove="Pages\AllowNewAppsEventLogsDataGrid.xaml" />
    <None Remove="Pages\AllowNewAppsLocalFilesDataGrid.xaml" />
    <None Remove="Pages\AllowNewAppsStart.xaml" />
    <None Remove="Pages\BuildNewCertificate.xaml" />
    <None Remove="Pages\ConfigurePolicyRuleOptions.xaml" />
    <None Remove="Pages\CreateDenyPolicy.xaml" />
    <None Remove="Pages\CreateDenyPolicyFilesAndFoldersScanResults.xaml" />
    <None Remove="Pages\CreateSupplementalPolicy.xaml" />
    <None Remove="Pages\CreateSupplementalPolicyFilesAndFoldersScanResults.xaml" />
    <None Remove="Pages\EventLogsPolicyCreation.xaml" />
    <None Remove="Pages\GetCIHashes.xaml" />
    <None Remove="Pages\GetSecurePolicySettings.xaml" />
    <None Remove="Pages\GitHubDocumentation.xaml" />
    <None Remove="Pages\Logs.xaml" />
    <None Remove="Pages\MDEAHPolicyCreation.xaml" />
    <None Remove="Pages\MergePolicies.xaml" />
    <None Remove="Pages\MicrosoftDocumentation.xaml" />
    <None Remove="Pages\PolicyEditor.xaml" />
    <None Remove="Pages\Settings.xaml" />
    <None Remove="Pages\Simulation.xaml" />
    <None Remove="Pages\StrictKernelPolicyScanResults.xaml" />
    <None Remove="Pages\SystemInformation\CodeIntegrityInfo.xaml" />
    <None Remove="Pages\SystemInformation\SystemInformation.xaml" />
    <None Remove="Pages\SystemInformation\ViewOnlinePolicies.xaml" />
    <None Remove="Pages\ValidatePolicy.xaml" />
    <None Remove="Pages\ViewCurrentPolicies.xaml" />
    <None Remove="Pages\ViewFileCertificates.xaml" />
    <None Remove="Resources\Allow All Policy.xml" />
    <None Remove="Resources\Allow Microsoft Template.xml" />
    <None Remove="Resources\AppControlManagerSupplementalPolicy.xml" />
    <None Remove="Resources\Default Windows Template.xml" />
    <None Remove="Resources\EmptyPolicy.xml" />
    <None Remove="Resources\ISGBasedSupplementalPolicy.xml" />
    <None Remove="Resources\StrictKernelMode.xml" />
    <None Remove="Resources\StrictKernelMode_NoFlightRoots.xml" />
    <None Remove="RustInterop\DeviceGuardWMIRetriever-ARM64.exe" />
    <None Remove="RustInterop\DeviceGuardWMIRetriever-X64.exe" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Assets\SplashScreen.scale-200.png" />
    <Content Include="Assets\LockScreenLogo.scale-200.png" />
    <Content Include="Assets\Square150x150Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
    <Content Include="Assets\Wide310x150Logo.scale-200.png" />
    <Content Include="CppInterop\ManageDefender-ARM64.exe">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="CppInterop\ManageDefender-x64.exe">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="CppInterop\ScheduledTaskManager-ARM64.exe">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="CppInterop\ScheduledTaskManager-x64.exe">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Resources\Allow All Policy.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Resources\Allow Microsoft Template.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Resources\AppControlManagerSupplementalPolicy.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Resources\Default Windows Template.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Resources\EmptyPolicy.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Resources\ISGBasedSupplementalPolicy.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Resources\StrictKernelMode.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Resources\StrictKernelMode_NoFlightRoots.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="RustInterop\DeviceGuardWMIRetriever-ARM64.exe">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="RustInterop\DeviceGuardWMIRetriever-X64.exe">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <!-- Exclude the following files and folders from compilation, build, search, solution explorer etc. -->
  <ItemGroup>
    <Compile Remove="version.txt" />
    <Content Remove="version.txt" />
    <None Remove="version.txt" />

    <Compile Remove="DownloadURL.txt" />
    <Content Remove="DownloadURL.txt" />
    <None Remove="DownloadURL.txt" />

    <Compile Remove="AppControlManagerAPIDocumentation.xml" />
    <Content Remove="AppControlManagerAPIDocumentation.xml" />
    <None Remove="AppControlManagerAPIDocumentation.xml" />

    <Compile Remove="MSIXBundleDownloadURL.txt" />
    <Content Remove="MSIXBundleDownloadURL.txt" />
    <None Remove="MSIXBundleDownloadURL.txt" />

    <Compile Remove="ARM64MSBuildLog.binlog" />
    <Content Remove="ARM64MSBuildLog.binlog" />
    <None Remove="ARM64MSBuildLog.binlog" />

    <Compile Remove="X64MSBuildLog.binlog" />
    <Content Remove="X64MSBuildLog.binlog" />
    <None Remove="X64MSBuildLog.binlog" />

    <Compile Remove="MSIXOutputX64\**" />
    <Content Remove="MSIXOutputX64\**" />
    <None Remove="MSIXOutputX64\**" />

    <Compile Remove="MSIXOutputARM64\**" />
    <Content Remove="MSIXOutputARM64\**" />
    <None Remove="MSIXOutputARM64\**" />

    <Compile Remove="MSIXBundleOutput\**" />
    <Content Remove="MSIXBundleOutput\**" />
    <None Remove="MSIXBundleOutput\**" />

    <Compile Remove="Animated Icon Sources\**" />
    <Content Remove="Animated Icon Sources\**" />
    <None Remove="Animated Icon Sources\**" />

    <Compile Remove="eXclude\**" />
    <Content Remove="eXclude\**" />
    <None Remove="eXclude\**" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\Wiki posts\AppControl Manager\AppControl Manager.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\AllowNewApps.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\MDEAHPolicyCreation.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\EventLogsPolicyCreation.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\DeploymentPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\UpdatePage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\SystemInformation\CodeIntegrityInfo.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\SystemInformation\SystemInformation.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\Simulation.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\Logs.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\ConfigurePolicyRuleOptions.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\ViewCurrentPolicies.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\GetSecurePolicySettings.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Pages\AllowNewApps\" />
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\SystemInformation\ViewOnlinePolicies.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\PolicyEditor.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\StrictKernelPolicyScanResults.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\ViewFileCertificates.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\ValidatePolicy.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\CreateDenyPolicyFilesAndFoldersScanResults.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\CreateDenyPolicy.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\MergePolicies.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\CreateSupplementalPolicyFilesAndFoldersScanResults.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\CreateSupplementalPolicy.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\BuildNewCertificate.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\UpdatePageCustomMSIXPath.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\AllowNewAppsStart.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\AllowNewAppsLocalFilesDataGrid.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\AllowNewAppsEventLogsDataGrid.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Pages\AllowNewAppsDataGrid.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>

</Project>