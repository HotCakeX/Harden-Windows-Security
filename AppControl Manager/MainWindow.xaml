<?xml version="1.0" encoding="utf-8"?>
<Window
    x:Class="WDACConfig.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:WDACConfig"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Title="AppControl Manager">

    <!-- For the Mica background -->
    <Window.SystemBackdrop>
        <MicaBackdrop Kind="BaseAlt"/>
    </Window.SystemBackdrop>

    <Grid x:Name="RootGrid">

        <!-- When using this, we shouldn't set PaneDisplayMode="" property on the navigation element itself, otherwise these dynamic triggers won't work on it -->
        <!-- Also apparently there are hardcoded minimum width that do not allow for smaller MinWindowWidth to be set for the triggers below and they are overriden when it happens -->

        <!-- VisualStateManager for responsive layout -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <!-- Very narrow window state -->
                <VisualState x:Name="DefaultState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainNavigation.PaneDisplayMode" Value="Top" />
                    </VisualState.Setters>
                </VisualState>

                <!-- Narrow window state -->
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="200" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainNavigation.PaneDisplayMode" Value="LeftCompact" />
                    </VisualState.Setters>
                </VisualState>

                <!-- Wide window state -->
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="400" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainNavigation.PaneDisplayMode" Value="Left" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!-- Doc: https://learn.microsoft.com/en-us/windows/apps/design/controls/navigationview -->
        <NavigationView x:Name="MainNavigation"
                    IsTabStop="True"
                    ItemInvoked="MainNavigation_ItemInvoked"
                    PaneTitle="Menu"
                    IsBackButtonVisible="Auto"
                    IsBackEnabled="True"
                    BackRequested="NavView_BackRequested"
                    AlwaysShowHeader="True">

            <!--
             Being controlled from MainWindow.xaml.cs

            <NavigationView.Resources>
                <SolidColorBrush x:Key="NavigationViewContentBackground" Color="Transparent" />
            </NavigationView.Resources>

            -->

            <NavigationView.AutoSuggestBox>
                <AutoSuggestBox x:Name="SearchBox"
                        QueryIcon="Find"
                        TextChanged="SearchBox_TextChanged"
                        SuggestionChosen="SearchBox_SuggestionChosen"
                        PlaceholderText="Search menu items..."/>
            </NavigationView.AutoSuggestBox>

            <!--
            <NavigationView.PaneCustomContent>
                <HyperlinkButton x:Name="PaneHyperlink" Content="More info" Margin="12,0" Visibility="Visible" />
            </NavigationView.PaneCustomContent>
            -->

            <NavigationView.MenuItems>
                <NavigationViewItem x:Name="CreatePolicyNavItem" Content="Create Policy" ToolTipService.ToolTip="Create AppControl Policies with different characteristics" Tag="CreatePolicy"/>
                <NavigationViewItem x:Name="CreateSupplementalPolicyNavItem" Content="Create Supplemental Policy" ToolTipService.ToolTip="Create Supplemental AppControl Policies" Tag="CreateSupplementalPolicy"/>
                <NavigationViewItem x:Name="SystemInformationNavItem" Content="System Information" ToolTipService.ToolTip="View information about the system" Tag="SystemInformation"/>
                <NavigationViewItem x:Name="ConfigurePolicyRuleOptionsNavItem" Content="Configure Policy Rule Options" ToolTipService.ToolTip="Configure Policy Rule Options" Tag="ConfigurePolicyRuleOptions"/>
                <NavigationViewItem x:Name="SimulationNavItem" Content="Simulation" ToolTipService.ToolTip="Simulate deployment of App Control policies" Tag="Simulation"/>
                <NavigationViewItem x:Name="AllowNewAppsNavItem" Content="Allow New Apps" ToolTipService.ToolTip="Allow new apps or programs that are being blocked from installation or are already installed but are being blocked from running." Tag="AllowNewApps"/>
                <NavigationViewItem x:Name="BuildNewCertificateNavItem" Content="Build New Certificate" ToolTipService.ToolTip="Generate Certificates that are suitable for signing App Control Policies" Tag="BuildNewCertificate"/>

                <!-- Make it expanded by default to show the import feature to the user at first sight -->
                <NavigationViewItem x:Name="CreatePolicyFromEventLogsNavItem" IsExpanded="True" Content="Create policy from Event Logs" ToolTipService.ToolTip="Create App Control policy either from the local event logs or EVTX files" Tag="EventLogsPolicyCreation">

                    <NavigationViewItem.MenuItems>
                        <NavigationViewItem x:Name="CreatePolicyFromMDEAHNavItem" Content="MDE Advanced Hunting" ToolTipService.ToolTip="Create App Control policy from Microsoft Defender for Endpoint (MDE) Advanced Hunting Logs" Tag="MDEAHPolicyCreation" />
                    </NavigationViewItem.MenuItems>

                </NavigationViewItem>

                <NavigationViewItemSeparator/>

                <NavigationViewItem x:Name="DeploymentNavItem" Content="Deploy App Control Policy" ToolTipService.ToolTip="Deploy signed or unsigned AppControl policies on the system" Tag="Deployment"/>

                <NavigationViewItem x:Name="GetCodeIntegrityHashesNavItem" Content="Get Code Integrity Hashes" ToolTipService.ToolTip="Get Code Integrity Hashes of files" Tag="GetCIHashes"/>

                <NavigationViewItem x:Name="GetSecurePolicySettingsNavItem" Content="Get Secure Policy Settings" ToolTipService.ToolTip="Get the secure policy settings among the deployed policies" Tag="GetSecurePolicySettings"/>

                <!-- These are still considered footer so important menu items must be placed above them -->

                <NavigationViewItem x:Name="LogsNavItem" Content="Logs" ToolTipService.ToolTip="View the application logs in real time" Tag="Logs" />

                <NavigationViewItemHeader Content="Documentation"/>

                <NavigationViewItem x:Name="GitHubDocsNavItem" Content="GitHub Documentation" ToolTipService.ToolTip="Get online documentations from GitHub about how to use the application" Tag="GitHubDocumentation"/>

                <NavigationViewItem x:Name="MSFTDocsNavItem" Content="Microsoft Documentation" ToolTipService.ToolTip="Get online documentations from Microsoft about App Control for Business policies" Tag="MicrosoftDocumentation"/>

            </NavigationView.MenuItems>

            <NavigationView.FooterMenuItems>

                <NavigationViewItem x:Name="UpdateNavItem" Content="Update" ToolTipService.ToolTip="Check for updates" Tag="Update">

                    <NavigationViewItem.InfoBadge>
                        <InfoBadge x:Name="AvailableUpdateInfoBadge"
                                   Opacity="{x:Bind ViewModel.InfoBadgeOpacity, Mode=OneWay}"
                                   Style="{ThemeResource AttentionIconInfoBadgeStyle}">
                            <InfoBadge.IconSource>
                                <FontIconSource Glyph="&#xEA6A;"/>
                            </InfoBadge.IconSource>
                        </InfoBadge>
                    </NavigationViewItem.InfoBadge>

                </NavigationViewItem>

            </NavigationView.FooterMenuItems>

            <!-- Global margin settings for every page -->
            <Frame x:Name="ContentFrame" Margin="15,15,15,10" />
        </NavigationView>
    </Grid>
</Window>
