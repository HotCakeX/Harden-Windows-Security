//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.1.240821.1+077322fa26
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile Confetti.json
//       
//       Input file:
//           Confetti.json (181710 bytes created 13:15+02:00 Mar 10 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   130 |
// |--------------------------+-------|
// | Expression animators     |     7 |
// | KeyFrame animators       |    12 |
// | Reference parameters     |     7 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     7 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     3 |
// | ShapeVisuals             |     3 |
// |--------------------------+-------|
// | ContainerShapes          |     - |
// | CompositionSpriteShapes  |    14 |
// |--------------------------+-------|
// | Brushes                  |     9 |
// | Gradient stops           |     4 |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
	// Name:        confetti
	// Frame rate:  24 fps
	// Frame count: 28
	// Duration:    1166.7 mS
	// _____________________________________________________________________________________________
	// |           Marker           |           Constant           | Frame |   mS   |   Progress   |
	// |____________________________|______________________________|_______|________|______________|
	// | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
	// | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
	// | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
	// | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
	// | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
	// | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
	// | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
	// | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
	// ---------------------------------------------------------------------------------------------
	sealed partial class Confetti
		: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
		, Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		// Animation duration: 1.167 seconds.
		internal const long c_durationTicks = 11666666;

		// Marker: NormalToPressed_Start.
		internal const float M_NormalToPressed_Start = 0F;

		// Marker: NormalToPressed_End.
		internal const float M_NormalToPressed_End = 0.323214293F;

		// Marker: PointerOverToPressed_Start.
		internal const float M_PointerOverToPressed_Start = 0.323214293F;

		// Marker: PointerOverToPressed_End.
		internal const float M_PointerOverToPressed_End = 0.680357158F;

		// Marker: PressedToNormal_Start.
		internal const float M_PressedToNormal_Start = 0.716071427F;

		// Marker: PressedToNormal_End.
		internal const float M_PressedToNormal_End = 1F;

		// Marker: PressedToPointerOver_Start.
		internal const float M_PressedToPointerOver_Start = 1F;

		// Marker: PressedToPointerOver_End.
		internal const float M_PressedToPointerOver_End = 1F;

		public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
		{
			object ignored = null;
			return TryCreateAnimatedVisual(compositor, out ignored);
		}

		public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
		{
			diagnostics = null;

			var res =
				new Confetti_AnimatedVisual(
					compositor
					);
			res.CreateAnimations();
			return res;
		}

		/// <summary>
		/// Gets the number of frames in the animation.
		/// </summary>
		public double FrameCount => 28d;

		/// <summary>
		/// Gets the frame rate of the animation.
		/// </summary>
		public double Framerate => 24d;

		/// <summary>
		/// Gets the duration of the animation.
		/// </summary>
		public TimeSpan Duration => TimeSpan.FromTicks(11666666);

		/// <summary>
		/// Converts a zero-based frame number to the corresponding progress value denoting the
		/// start of the frame.
		/// </summary>
		public double FrameToProgress(double frameNumber)
		{
			return frameNumber / 28d;
		}

		/// <summary>
		/// Returns a map from marker names to corresponding progress values.
		/// </summary>
		public IReadOnlyDictionary<string, double> Markers =>
			new Dictionary<string, double>
			{
				{ "NormalToPressed_Start", 0d },
				{ "NormalToPressed_End", 0.323214285714286 },
				{ "PointerOverToPressed_Start", 0.323214285714286 },
				{ "PointerOverToPressed_End", 0.680357142857143 },
				{ "PressedToNormal_Start", 0.716071428571429 },
				{ "PressedToNormal_End", 1d },
				{ "PressedToPointerOver_Start", 1d },
				{ "PressedToPointerOver_End", 1d },
			};

		/// <summary>
		/// Sets the color property with the given name, or does nothing if no such property
		/// exists.
		/// </summary>
		public void SetColorProperty(string propertyName, Color value)
		{
		}

		/// <summary>
		/// Sets the scalar property with the given name, or does nothing if no such property
		/// exists.
		/// </summary>
		public void SetScalarProperty(string propertyName, double value)
		{
		}

		sealed partial class Confetti_AnimatedVisual
			: Microsoft.UI.Xaml.Controls.IAnimatedVisual
			, Microsoft.UI.Xaml.Controls.IAnimatedVisual2
		{
			const long c_durationTicks = 11666666;
			readonly Compositor _c;
			readonly ExpressionAnimation _reusableExpressionAnimation;
			AnimationController _animationController_0;
			CompositionColorBrush _colorBrush_AlmostCrimson_FFCF1828;
			CompositionColorBrush _colorBrush_AlmostDodgerBlue_FF007AD9;
			CompositionColorGradientStop _gradientStop_0_AlmostOrchid_FFD15FF6;
			CompositionColorGradientStop _gradientStop_1_AlmostMediumOrchid_FFC545EC;
			CompositionPath _path;
			CompositionPathGeometry _pathGeometry_0;
			CompositionPathGeometry _pathGeometry_7;
			CompositionPathGeometry _pathGeometry_8;
			CompositionPathGeometry _pathGeometry_9;
			CompositionSpriteShape _spriteShape_00;
			CompositionSpriteShape _spriteShape_01;
			CompositionSpriteShape _spriteShape_02;
			CompositionSpriteShape _spriteShape_03;
			CompositionSpriteShape _spriteShape_04;
			ContainerVisual _containerVisual_0;
			ContainerVisual _root;
			CubicBezierEasingFunction _cubicBezierEasingFunction_0;
			ScalarKeyFrameAnimation _tEndScalarAnimation_1_to_0;
			ScalarKeyFrameAnimation _tStartScalarAnimation_1_to_0;
			StepEasingFunction _holdThenStepEasingFunction;
			StepEasingFunction _stepThenHoldEasingFunction;

			void BindProperty(
				CompositionObject target,
				string animatedPropertyName,
				string expression,
				string referenceParameterName,
				CompositionObject referencedObject)
			{
				_reusableExpressionAnimation.ClearAllParameters();
				_reusableExpressionAnimation.Expression = expression;
				_reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
				target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
			}

			ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreateScalarKeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreateVector2KeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			Vector3KeyFrameAnimation CreateVector3KeyFrameAnimation(float initialProgress, Vector3 initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreateVector3KeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
			{
				var result = _c.CreateSpriteShape(geometry);
				result.TransformMatrix = transformMatrix;
				return result;
			}

			CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
			{
				var result = _c.CreateSpriteShape(geometry);
				result.TransformMatrix = transformMatrix;
				result.FillBrush = fillBrush;
				return result;
			}

			AnimationController AnimationController_0()
			{
				if (_animationController_0 != null) { return _animationController_0; }
				var result = _animationController_0 = _c.CreateAnimationController();
				result.Pause();
				BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
				return result;
			}

			CanvasGeometry Geometry_0()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(0.289999992F, -2.79200006F));
					builder.AddLine(new Vector2(0.915000021F, -0.915000021F));
					builder.AddLine(new Vector2(2.79200006F, -0.289000005F));
					builder.AddCubicBezier(new Vector2(3.06999993F, -0.195999995F), new Vector2(3.06999993F, 0.196999997F), new Vector2(2.79200006F, 0.289999992F));
					builder.AddLine(new Vector2(0.915000021F, 0.916000009F));
					builder.AddLine(new Vector2(0.289999992F, 2.79299998F));
					builder.AddCubicBezier(new Vector2(0.196999997F, 3.0710001F), new Vector2(-0.196999997F, 3.0710001F), new Vector2(-0.289999992F, 2.79299998F));
					builder.AddLine(new Vector2(-0.915000021F, 0.916000009F));
					builder.AddLine(new Vector2(-2.79200006F, 0.289999992F));
					builder.AddCubicBezier(new Vector2(-3.06999993F, 0.196999997F), new Vector2(-3.06999993F, -0.195999995F), new Vector2(-2.79200006F, -0.289000005F));
					builder.AddLine(new Vector2(-0.915000021F, -0.915000021F));
					builder.AddLine(new Vector2(-0.289999992F, -2.79200006F));
					builder.AddCubicBezier(new Vector2(-0.196999997F, -3.0710001F), new Vector2(0.197999999F, -3.0710001F), new Vector2(0.289999992F, -2.79200006F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - PreComp layer: cone
			// - - - Layer aggregator
			// - -  Scale:4,4, Offset:<70.293, 121.707>
			CanvasGeometry Geometry_1()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-2.42700005F, -11.5740004F));
					builder.AddLine(new Vector2(-11.493F, 10.1859999F));
					builder.AddCubicBezier(new Vector2(-11.8360004F, 11.0100002F), new Vector2(-11.0100002F, 11.8369999F), new Vector2(-10.1859999F, 11.4940004F));
					builder.AddLine(new Vector2(11.573F, 2.44099998F));
					builder.AddLine(new Vector2(-2.42700005F, -11.5740004F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - PreComp layer: cone
			// - - - Layer aggregator
			// - -  Scale:4,4, Offset:<92.022, 116.254>
			CanvasGeometry Geometry_2()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(1.52900004F, 5.72300005F));
					builder.AddLine(new Vector2(3.37599993F, 4.954F));
					builder.AddLine(new Vector2(0.433999985F, -1.90799999F));
					builder.AddLine(new Vector2(-3.37599993F, -5.72300005F));
					builder.AddLine(new Vector2(1.52900004F, 5.72300005F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - PreComp layer: cone
			// - - - Layer aggregator
			// - -  Scale:4,4, Offset:<33.448, 155.764>
			CanvasGeometry Geometry_3()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-0.316000015F, 2.70499992F));
					builder.AddLine(new Vector2(1.53100002F, 1.93700004F));
					builder.AddLine(new Vector2(-0.458999991F, -2.70499992F));
					builder.AddLine(new Vector2(-1.53100002F, -0.130999997F));
					builder.AddLine(new Vector2(-0.316000015F, 2.70499992F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - PreComp layer: cone
			// - - - Layer aggregator
			// - -  Scale:4,4, Offset:<51.846, 134.696>
			CanvasGeometry Geometry_4()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-1.67799997F, -5.55100012F));
					builder.AddLine(new Vector2(-2.75099993F, -2.977F));
					builder.AddLine(new Vector2(0.903999984F, 5.55100012F));
					builder.AddLine(new Vector2(2.75099993F, 4.78299999F));
					builder.AddLine(new Vector2(-1.67799997F, -5.55100012F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - PreComp layer: cone
			// - - - Layer aggregator
			// - -  Scale:4,4, Offset:<68.714, 115.384>
			CanvasGeometry Geometry_5()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-2.796F, -8.15999985F));
					builder.AddLine(new Vector2(-3.86800003F, -5.58599997F));
					builder.AddLine(new Vector2(2.02099991F, 8.15999985F));
					builder.AddLine(new Vector2(3.86800003F, 7.3920002F));
					builder.AddLine(new Vector2(-2.796F, -8.15999985F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - PreComp layer: cone
			// - - - Layer aggregator
			// - -  Scale:4,4, Offset:<87.998, 104.002>
			CanvasGeometry Geometry_6()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(6.43900013F, 7.85400009F));
					builder.AddLine(new Vector2(-7.85400009F, -6.43900013F));
					builder.AddCubicBezier(new Vector2(-8.04899979F, -6.63399982F), new Vector2(-8.04899979F, -6.95100021F), new Vector2(-7.85400009F, -7.14599991F));
					builder.AddLine(new Vector2(-7.14599991F, -7.85400009F));
					builder.AddCubicBezier(new Vector2(-6.95100021F, -8.04899979F), new Vector2(-6.63399982F, -8.04899979F), new Vector2(-6.43900013F, -7.85400009F));
					builder.AddLine(new Vector2(7.85400009F, 6.43900013F));
					builder.AddCubicBezier(new Vector2(8.04899979F, 6.63399982F), new Vector2(8.04899979F, 6.95100021F), new Vector2(7.85400009F, 7.14599991F));
					builder.AddLine(new Vector2(7.14599991F, 7.85400009F));
					builder.AddCubicBezier(new Vector2(6.95100021F, 8.04899979F), new Vector2(6.63500023F, 8.04899979F), new Vector2(6.43900013F, 7.85400009F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_7()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.BeginFigure(new Vector2(-10F, 8.00899982F));
					builder.AddLine(new Vector2(-6.51599979F, 4.55900002F));
					builder.AddCubicBezier(new Vector2(-5.87200022F, 3.921F), new Vector2(-5.06699991F, 3.47000003F), new Vector2(-4.18599987F, 3.25500011F));
					builder.AddLine(new Vector2(-2.6500001F, 2.87899995F));
					builder.AddCubicBezier(new Vector2(-1.95799994F, 2.71000004F), new Vector2(-1.40799999F, 2.18400002F), new Vector2(-1.20700002F, 1.50100005F));
					builder.AddLine(new Vector2(-0.667999983F, -0.328000009F));
					builder.AddCubicBezier(new Vector2(-0.47299999F, -0.991999984F), new Vector2(0.0520000011F, -1.50699997F), new Vector2(0.718999982F, -1.69099998F));
					builder.AddLine(new Vector2(2.34200001F, -2.13800001F));
					builder.AddCubicBezier(new Vector2(3.13599992F, -2.35700011F), new Vector2(3.71499991F, -3.03999996F), new Vector2(3.79999995F, -3.8599999F));
					builder.AddLine(new Vector2(4.03499985F, -6.1329999F));
					builder.AddCubicBezier(new Vector2(4.12900019F, -6.95800018F), new Vector2(4.71999979F, -7.6329999F), new Vector2(5.52299976F, -7.84499979F));
					builder.AddCubicBezier(new Vector2(6.43300009F, -8.08600044F), new Vector2(7.86499977F, -7.99100018F), new Vector2(10F, -7.99100018F));
					builder.EndFigure(CanvasFigureLoop.Open);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_8()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.BeginFigure(new Vector2(-288F, -736F));
					builder.AddCubicBezier(new Vector2(-120F, -712F), new Vector2(36F, -616F), new Vector2(-48F, -280F));
					builder.EndFigure(CanvasFigureLoop.Open);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CompositionColorBrush ColorBrush_AlmostCrimson_FFCF1828()
			{
				return (_colorBrush_AlmostCrimson_FFCF1828 == null)
					? _colorBrush_AlmostCrimson_FFCF1828 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xCF, 0x18, 0x28))
					: _colorBrush_AlmostCrimson_FFCF1828;
			}

			CompositionColorBrush ColorBrush_AlmostDodgerBlue_FF007AD9()
			{
				return (_colorBrush_AlmostDodgerBlue_FF007AD9 == null)
					? _colorBrush_AlmostDodgerBlue_FF007AD9 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x7A, 0xD9))
					: _colorBrush_AlmostDodgerBlue_FF007AD9;
			}

			// - Layer aggregator
			// Scale:40,40, Offset:<1440, 559.624>
			CompositionColorBrush ColorBrush_AlmostOrange_FFEDBE00()
			{
				return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xED, 0xBE, 0x00));
			}

			// - - - - PreComp layer: cone
			// - - Layer aggregator
			// -  Scale:4,4, Offset:<70.293, 121.707>
			// Stop 0
			CompositionColorGradientStop GradientStop_0_AlmostMediumTurquoise_FF33BDEF()
			{
				return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x33, 0xBD, 0xEF));
			}

			// Stop 0
			CompositionColorGradientStop GradientStop_0_AlmostOrchid_FFD15FF6()
			{
				return (_gradientStop_0_AlmostOrchid_FFD15FF6 == null)
					? _gradientStop_0_AlmostOrchid_FFD15FF6 = _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xD1, 0x5F, 0xF6))
					: _gradientStop_0_AlmostOrchid_FFD15FF6;
			}

			// - - - - PreComp layer: cone
			// - - Layer aggregator
			// -  Scale:4,4, Offset:<70.293, 121.707>
			// Stop 1
			CompositionColorGradientStop GradientStop_1_AlmostDodgerBlue_FF0985D9()
			{
				return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x09, 0x85, 0xD9));
			}

			// Stop 1
			CompositionColorGradientStop GradientStop_1_AlmostMediumOrchid_FFC545EC()
			{
				return (_gradientStop_1_AlmostMediumOrchid_FFC545EC == null)
					? _gradientStop_1_AlmostMediumOrchid_FFC545EC = _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0xC5, 0x45, 0xEC))
					: _gradientStop_1_AlmostMediumOrchid_FFC545EC;
			}

			// - Layer aggregator
			// ShapeGroup: Group 1
			CompositionLinearGradientBrush LinearGradientBrush_0()
			{
				var result = _c.CreateLinearGradientBrush();
				var colorStops = result.ColorStops;
				colorStops.Add(GradientStop_0_AlmostOrchid_FFD15FF6());
				colorStops.Add(GradientStop_1_AlmostMediumOrchid_FFC545EC());
				result.MappingMode = CompositionMappingMode.Absolute;
				result.StartPoint = new Vector2(-6F, 20.0009995F);
				result.EndPoint = new Vector2(17.7719994F, -3.76999998F);
				return result;
			}

			// - Layer aggregator
			// ShapeGroup: Group 1
			CompositionLinearGradientBrush LinearGradientBrush_1()
			{
				var result = _c.CreateLinearGradientBrush();
				var colorStops = result.ColorStops;
				colorStops.Add(GradientStop_0_AlmostOrchid_FFD15FF6());
				colorStops.Add(GradientStop_1_AlmostMediumOrchid_FFC545EC());
				result.MappingMode = CompositionMappingMode.Absolute;
				result.StartPoint = new Vector2(-6F, -15.9989996F);
				result.EndPoint = new Vector2(17.7709999F, -39.7700005F);
				return result;
			}

			// - Layer aggregator
			// ShapeGroup: Group 1
			CompositionLinearGradientBrush LinearGradientBrush_2()
			{
				var result = _c.CreateLinearGradientBrush();
				var colorStops = result.ColorStops;
				colorStops.Add(GradientStop_0_AlmostOrchid_FFD15FF6());
				colorStops.Add(GradientStop_1_AlmostMediumOrchid_FFC545EC());
				result.MappingMode = CompositionMappingMode.Absolute;
				result.StartPoint = new Vector2(-6F, -39.9990005F);
				result.EndPoint = new Vector2(17.7719994F, -63.7700005F);
				return result;
			}

			// - Layer aggregator
			// ShapeGroup: Group 1
			CompositionLinearGradientBrush LinearGradientBrush_3()
			{
				var result = _c.CreateLinearGradientBrush();
				var colorStops = result.ColorStops;
				colorStops.Add(GradientStop_0_AlmostOrchid_FFD15FF6());
				colorStops.Add(GradientStop_1_AlmostMediumOrchid_FFC545EC());
				result.MappingMode = CompositionMappingMode.Absolute;
				result.StartPoint = new Vector2(-5.99900007F, -33.9990005F);
				result.EndPoint = new Vector2(17.7719994F, -57.7700005F);
				return result;
			}

			// - Layer aggregator
			// ShapeGroup: Group 1
			CompositionLinearGradientBrush LinearGradientBrush_4()
			{
				var result = _c.CreateLinearGradientBrush();
				var colorStops = result.ColorStops;
				colorStops.Add(GradientStop_0_AlmostOrchid_FFD15FF6());
				colorStops.Add(GradientStop_1_AlmostMediumOrchid_FFC545EC());
				result.MappingMode = CompositionMappingMode.Absolute;
				result.StartPoint = new Vector2(-5.99900007F, -13.9989996F);
				result.EndPoint = new Vector2(17.7709999F, -37.7700005F);
				return result;
			}

			// - - - PreComp layer: cone
			// - Layer aggregator
			// Scale:4,4, Offset:<70.293, 121.707>
			CompositionLinearGradientBrush LinearGradientBrush_5()
			{
				var result = _c.CreateLinearGradientBrush();
				var colorStops = result.ColorStops;
				colorStops.Add(GradientStop_0_AlmostMediumTurquoise_FF33BDEF());
				colorStops.Add(GradientStop_1_AlmostDodgerBlue_FF0985D9());
				result.MappingMode = CompositionMappingMode.Absolute;
				result.StartPoint = new Vector2(-7.57299995F, 2.42700005F);
				result.EndPoint = new Vector2(2.82800007F, -20.5650005F);
				return result;
			}

			CompositionPath Path()
			{
				if (_path != null) { return _path; }
				var result = _path = new CompositionPath(Geometry_8());
				return result;
			}

			CompositionPathGeometry PathGeometry_0()
			{
				return (_pathGeometry_0 == null)
					? _pathGeometry_0 = _c.CreatePathGeometry(new CompositionPath(Geometry_0()))
					: _pathGeometry_0;
			}

			// - - - PreComp layer: cone
			// - Layer aggregator
			// Scale:4,4, Offset:<70.293, 121.707>
			CompositionPathGeometry PathGeometry_1()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
			}

			// - - - PreComp layer: cone
			// - Layer aggregator
			// Scale:4,4, Offset:<92.022, 116.254>
			CompositionPathGeometry PathGeometry_2()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
			}

			// - - - PreComp layer: cone
			// - Layer aggregator
			// Scale:4,4, Offset:<33.448, 155.764>
			CompositionPathGeometry PathGeometry_3()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
			}

			// - - - PreComp layer: cone
			// - Layer aggregator
			// Scale:4,4, Offset:<51.846, 134.696>
			CompositionPathGeometry PathGeometry_4()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_4()));
			}

			// - - - PreComp layer: cone
			// - Layer aggregator
			// Scale:4,4, Offset:<68.714, 115.384>
			CompositionPathGeometry PathGeometry_5()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_5()));
			}

			// - - - PreComp layer: cone
			// - Layer aggregator
			// Scale:4,4, Offset:<87.998, 104.002>
			CompositionPathGeometry PathGeometry_6()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_6()));
			}

			CompositionPathGeometry PathGeometry_7()
			{
				if (_pathGeometry_7 != null) { return _pathGeometry_7; }
				var result = _pathGeometry_7 = _c.CreatePathGeometry(new CompositionPath(Geometry_7()));
				var propertySet = result.Properties;
				propertySet.InsertScalar("TEnd", 0F);
				propertySet.InsertScalar("TStart", 0F);
				BindProperty(_pathGeometry_7, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_7);
				BindProperty(_pathGeometry_7, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_7);
				return result;
			}

			CompositionPathGeometry PathGeometry_8()
			{
				if (_pathGeometry_8 != null) { return _pathGeometry_8; }
				var result = _pathGeometry_8 = _c.CreatePathGeometry(Path());
				var propertySet = result.Properties;
				propertySet.InsertScalar("TEnd", 1F);
				propertySet.InsertScalar("TStart", 1F);
				BindProperty(_pathGeometry_8, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_8);
				BindProperty(_pathGeometry_8, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_8);
				return result;
			}

			CompositionPathGeometry PathGeometry_9()
			{
				if (_pathGeometry_9 != null) { return _pathGeometry_9; }
				var result = _pathGeometry_9 = _c.CreatePathGeometry(Path());
				var propertySet = result.Properties;
				propertySet.InsertScalar("TEnd", 1F);
				propertySet.InsertScalar("TStart", 1F);
				BindProperty(_pathGeometry_9, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_9);
				BindProperty(_pathGeometry_9, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_9);
				return result;
			}

			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_00()
			{
				if (_spriteShape_00 != null) { return _spriteShape_00; }
				var result = _spriteShape_00 = _c.CreateSpriteShape(PathGeometry_0());
				result.Offset = new Vector2(1439.97998F, 1480.04504F);
				result.FillBrush = LinearGradientBrush_0();
				return result;
			}

			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_01()
			{
				if (_spriteShape_01 != null) { return _spriteShape_01; }
				var result = _spriteShape_01 = _c.CreateSpriteShape(PathGeometry_0());
				result.Offset = new Vector2(1679.97998F, 760.044983F);
				result.FillBrush = LinearGradientBrush_1();
				return result;
			}

			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_02()
			{
				if (_spriteShape_02 != null) { return _spriteShape_02; }
				var result = _spriteShape_02 = _c.CreateSpriteShape(PathGeometry_0());
				result.Offset = new Vector2(1279.97998F, 280.045013F);
				result.FillBrush = LinearGradientBrush_2();
				return result;
			}

			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_03()
			{
				if (_spriteShape_03 != null) { return _spriteShape_03; }
				var result = _spriteShape_03 = _c.CreateSpriteShape(PathGeometry_0());
				result.Offset = new Vector2(399.980011F, 400.045013F);
				result.FillBrush = LinearGradientBrush_3();
				return result;
			}

			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_04()
			{
				if (_spriteShape_04 != null) { return _spriteShape_04; }
				var result = _spriteShape_04 = _c.CreateSpriteShape(PathGeometry_0());
				result.Offset = new Vector2(319.980011F, 800.044983F);
				result.FillBrush = LinearGradientBrush_4();
				return result;
			}

			// - - PreComp layer: cone
			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_05()
			{
				// Offset:<70.293, 121.707>, Scale:<4, 4>
				var geometry = PathGeometry_1();
				var result = CreateSpriteShape(geometry, new Matrix3x2(4F, 0F, 0F, 4F, 70.2929993F, 121.707001F), LinearGradientBrush_5()); ;
				return result;
			}

			// - - PreComp layer: cone
			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_06()
			{
				// Offset:<92.022, 116.254>, Scale:<4, 4>
				var geometry = PathGeometry_2();
				var result = CreateSpriteShape(geometry, new Matrix3x2(4F, 0F, 0F, 4F, 92.0220032F, 116.253998F), ColorBrush_AlmostDodgerBlue_FF007AD9()); ;
				return result;
			}

			// - - PreComp layer: cone
			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_07()
			{
				// Offset:<33.448, 155.764>, Scale:<4, 4>
				var geometry = PathGeometry_3();
				var result = CreateSpriteShape(geometry, new Matrix3x2(4F, 0F, 0F, 4F, 33.4480019F, 155.764008F), ColorBrush_AlmostDodgerBlue_FF007AD9()); ;
				return result;
			}

			// - - PreComp layer: cone
			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_08()
			{
				// Offset:<51.846, 134.696>, Scale:<4, 4>
				var geometry = PathGeometry_4();
				var result = CreateSpriteShape(geometry, new Matrix3x2(4F, 0F, 0F, 4F, 51.8460007F, 134.695999F), ColorBrush_AlmostDodgerBlue_FF007AD9()); ;
				return result;
			}

			// - - PreComp layer: cone
			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_09()
			{
				// Offset:<68.714, 115.384>, Scale:<4, 4>
				var geometry = PathGeometry_5();
				var result = CreateSpriteShape(geometry, new Matrix3x2(4F, 0F, 0F, 4F, 68.7139969F, 115.384003F), ColorBrush_AlmostDodgerBlue_FF007AD9()); ;
				return result;
			}

			// - - PreComp layer: cone
			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_10()
			{
				// Offset:<87.998, 104.002>, Scale:<4, 4>
				var geometry = PathGeometry_6();
				var result = CreateSpriteShape(geometry, new Matrix3x2(4F, 0F, 0F, 4F, 87.9980011F, 104.001999F), ColorBrush_AlmostDodgerBlue_FF007AD9()); ;
				return result;
			}

			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_11()
			{
				// Offset:<1440, 559.624>, Scale:<40, 40>
				var result = CreateSpriteShape(PathGeometry_7(), new Matrix3x2(40F, 0F, 0F, 40F, 1440F, 559.624023F)); ;
				result.StrokeBrush = ColorBrush_AlmostOrange_FFEDBE00();
				result.StrokeMiterLimit = 5F;
				result.StrokeThickness = 2F;
				return result;
			}

			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_12()
			{
				// Offset:<960, 960>
				var result = CreateSpriteShape(PathGeometry_8(), new Matrix3x2(1F, 0F, 0F, 1F, 960F, 960F)); ;
				result.StrokeBrush = ColorBrush_AlmostCrimson_FFCF1828();
				result.StrokeDashCap = CompositionStrokeCap.Round;
				result.StrokeStartCap = CompositionStrokeCap.Round;
				result.StrokeEndCap = CompositionStrokeCap.Round;
				result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
				result.StrokeMiterLimit = 2F;
				result.StrokeThickness = 100F;
				return result;
			}

			// Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_13()
			{
				// Offset:<960, 960>, Rotation:-84.99999861749261 degrees, Scale:<1, -1>
				var result = CreateSpriteShape(PathGeometry_9(), new Matrix3x2(0.0871557668F, -0.99619472F, -0.99619472F, -0.0871557668F, 960F, 960F)); ;
				result.StrokeBrush = ColorBrush_AlmostCrimson_FFCF1828();
				result.StrokeDashCap = CompositionStrokeCap.Round;
				result.StrokeStartCap = CompositionStrokeCap.Round;
				result.StrokeEndCap = CompositionStrokeCap.Round;
				result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
				result.StrokeMiterLimit = 2F;
				result.StrokeThickness = 100F;
				return result;
			}

			// Transforms for cone
			ContainerVisual ContainerVisual_0()
			{
				if (_containerVisual_0 != null) { return _containerVisual_0; }
				var result = _containerVisual_0 = _c.CreateContainerVisual();
				result.CenterPoint = new Vector3(0F, 192F, 0F);
				result.Offset = new Vector3(0F, 1728F, 0F);
				result.Children.InsertAtTop(ContainerVisual_1());
				return result;
			}

			// PreComp layer: cone
			ContainerVisual ContainerVisual_1()
			{
				var result = _c.CreateContainerVisual();
				result.Clip = InsetClip_0();
				result.Size = new Vector2(192F, 192F);
				// Layer aggregator
				result.Children.InsertAtTop(ShapeVisual_1());
				return result;
			}

			// The root of the composition.
			ContainerVisual Root()
			{
				if (_root != null) { return _root; }
				var result = _root = _c.CreateContainerVisual();
				var propertySet = result.Properties;
				propertySet.InsertScalar("Progress", 0F);
				var children = result.Children;
				// Layer aggregator
				children.InsertAtTop(ShapeVisual_0());
				// PreComp layer: cone
				children.InsertAtTop(ContainerVisual_0());
				// Layer aggregator
				children.InsertAtTop(ShapeVisual_2());
				return result;
			}

			CubicBezierEasingFunction CubicBezierEasingFunction_0()
			{
				return (_cubicBezierEasingFunction_0 == null)
					? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
					: _cubicBezierEasingFunction_0;
			}

			// - PreComp layer: cone
			InsetClip InsetClip_0()
			{
				var result = _c.CreateInsetClip();
				return result;
			}

			// TEnd
			ScalarKeyFrameAnimation TEndScalarAnimation_0_to_1()
			{
				// Frame 0.
				var result = CreateScalarKeyFrameAnimation(0F, 0F, HoldThenStepEasingFunction());
				// Frame 8.
				result.InsertKeyFrame(0.285714298F, 1F, CubicBezierEasingFunction_0());
				return result;
			}

			// TEnd
			ScalarKeyFrameAnimation TEndScalarAnimation_1_to_0()
			{
				// Frame 0.
				if (_tEndScalarAnimation_1_to_0 != null) { return _tEndScalarAnimation_1_to_0; }
				var result = _tEndScalarAnimation_1_to_0 = CreateScalarKeyFrameAnimation(0F, 1F, StepThenHoldEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, 1F, HoldThenStepEasingFunction());
				// Frame 20.
				result.InsertKeyFrame(0.714285731F, 0F, CubicBezierEasingFunction_0());
				return result;
			}

			// TStart
			ScalarKeyFrameAnimation TStartScalarAnimation_0_to_1()
			{
				// Frame 0.
				var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
				// Frame 8.
				result.InsertKeyFrame(0.285714298F, 0F, HoldThenStepEasingFunction());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, 1F, CubicBezierEasingFunction_0());
				return result;
			}

			// TStart
			ScalarKeyFrameAnimation TStartScalarAnimation_1_to_0()
			{
				// Frame 0.
				if (_tStartScalarAnimation_1_to_0 != null) { return _tStartScalarAnimation_1_to_0; }
				var result = _tStartScalarAnimation_1_to_0 = CreateScalarKeyFrameAnimation(0F, 1F, HoldThenStepEasingFunction());
				// Frame 8.
				result.InsertKeyFrame(0.285714298F, 0F, CubicBezierEasingFunction_0());
				return result;
			}

			// Layer aggregator
			ShapeVisual ShapeVisual_0()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(1920F, 1920F);
				var shapes = result.Shapes;
				// ShapeGroup: Group 1
				shapes.Add(SpriteShape_00());
				// ShapeGroup: Group 1
				shapes.Add(SpriteShape_01());
				// ShapeGroup: Group 1
				shapes.Add(SpriteShape_02());
				// ShapeGroup: Group 1
				shapes.Add(SpriteShape_03());
				// ShapeGroup: Group 1
				shapes.Add(SpriteShape_04());
				return result;
			}

			// - PreComp layer: cone
			// Layer aggregator
			ShapeVisual ShapeVisual_1()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(192F, 192F);
				var shapes = result.Shapes;
				// Scale:4,4, Offset:<70.293, 121.707>
				shapes.Add(SpriteShape_05());
				// Scale:4,4, Offset:<92.022, 116.254>
				shapes.Add(SpriteShape_06());
				// Scale:4,4, Offset:<33.448, 155.764>
				shapes.Add(SpriteShape_07());
				// Scale:4,4, Offset:<51.846, 134.696>
				shapes.Add(SpriteShape_08());
				// Scale:4,4, Offset:<68.714, 115.384>
				shapes.Add(SpriteShape_09());
				// Scale:4,4, Offset:<87.998, 104.002>
				shapes.Add(SpriteShape_10());
				return result;
			}

			// Layer aggregator
			ShapeVisual ShapeVisual_2()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(1920F, 1920F);
				var shapes = result.Shapes;
				// Scale:40,40, Offset:<1440, 559.624>
				shapes.Add(SpriteShape_11());
				// Offset:<960, 960>
				shapes.Add(SpriteShape_12());
				// Scale:-1,1, RotationDegrees:95, Offset:<960, 960>
				shapes.Add(SpriteShape_13());
				return result;
			}

			StepEasingFunction HoldThenStepEasingFunction()
			{
				if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
				var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
				result.IsFinalStepSingleFrame = true;
				return result;
			}

			StepEasingFunction StepThenHoldEasingFunction()
			{
				if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
				var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
				result.IsInitialStepSingleFrame = true;
				return result;
			}

			// - Layer aggregator
			// ShapeGroup: Group 1
			// Scale
			Vector2KeyFrameAnimation ScaleVector2Animation_0()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
				// Frame 18.
				result.InsertKeyFrame(0.642857134F, new Vector2(40F, 40F), CubicBezierEasingFunction_0());
				// Frame 24.
				result.InsertKeyFrame(0.857142866F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
				return result;
			}

			// - Layer aggregator
			// ShapeGroup: Group 1
			// Scale
			Vector2KeyFrameAnimation ScaleVector2Animation_1()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
				// Frame 15.
				result.InsertKeyFrame(0.535714269F, new Vector2(40F, 40F), CubicBezierEasingFunction_0());
				// Frame 21.
				result.InsertKeyFrame(0.75F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
				return result;
			}

			// - Layer aggregator
			// ShapeGroup: Group 1
			// Scale
			Vector2KeyFrameAnimation ScaleVector2Animation_2()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
				// Frame 6.
				result.InsertKeyFrame(0.214285716F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector2(40F, 40F), CubicBezierEasingFunction_0());
				// Frame 18.
				result.InsertKeyFrame(0.642857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
				return result;
			}

			// - Layer aggregator
			// ShapeGroup: Group 1
			// Scale
			Vector2KeyFrameAnimation ScaleVector2Animation_3()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, new Vector2(40F, 40F), CubicBezierEasingFunction_0());
				// Frame 15.
				result.InsertKeyFrame(0.535714269F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
				return result;
			}

			// - Layer aggregator
			// ShapeGroup: Group 1
			// Scale
			Vector2KeyFrameAnimation ScaleVector2Animation_4()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
				// Frame 6.
				result.InsertKeyFrame(0.214285716F, new Vector2(40F, 40F), CubicBezierEasingFunction_0());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
				return result;
			}

			// PreComp layer: cone
			// Scale
			Vector3KeyFrameAnimation ScaleVector3Animation()
			{
				// Frame 0.
				var result = CreateVector3KeyFrameAnimation(0F, new Vector3(10F, 10F, 1F), HoldThenStepEasingFunction());
				// Frame 4.
				result.InsertKeyFrame(0.142857149F, new Vector3(9F, 9F, 1F), CubicBezierEasingFunction_0());
				// Frame 8.
				result.InsertKeyFrame(0.285714298F, new Vector3(11F, 11F, 1F), CubicBezierEasingFunction_0());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector3(10F, 10F, 1F), CubicBezierEasingFunction_0());
				return result;
			}

			internal Confetti_AnimatedVisual(
				Compositor compositor
				)
			{
				_c = compositor;
				_reusableExpressionAnimation = compositor.CreateExpressionAnimation();
				Root();
			}

			public Visual RootVisual => _root;
			public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
			public Vector2 Size => new Vector2(1920F, 1920F);
			void IDisposable.Dispose() => _root?.Dispose();

			public void CreateAnimations()
			{
				_pathGeometry_7.StartAnimation("TStart", TStartScalarAnimation_0_to_1(), AnimationController_0());
				_pathGeometry_7.StartAnimation("TEnd", TEndScalarAnimation_0_to_1(), AnimationController_0());
				_pathGeometry_8.StartAnimation("TStart", TStartScalarAnimation_1_to_0(), AnimationController_0());
				_pathGeometry_8.StartAnimation("TEnd", TEndScalarAnimation_1_to_0(), AnimationController_0());
				_pathGeometry_9.StartAnimation("TStart", TStartScalarAnimation_1_to_0(), AnimationController_0());
				_pathGeometry_9.StartAnimation("TEnd", TEndScalarAnimation_1_to_0(), AnimationController_0());
				_spriteShape_00.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
				_spriteShape_01.StartAnimation("Scale", ScaleVector2Animation_1(), AnimationController_0());
				_spriteShape_02.StartAnimation("Scale", ScaleVector2Animation_2(), AnimationController_0());
				_spriteShape_03.StartAnimation("Scale", ScaleVector2Animation_3(), AnimationController_0());
				_spriteShape_04.StartAnimation("Scale", ScaleVector2Animation_4(), AnimationController_0());
				_containerVisual_0.StartAnimation("Scale", ScaleVector3Animation(), AnimationController_0());
			}

			public void DestroyAnimations()
			{
				_pathGeometry_7.StopAnimation("TStart");
				_pathGeometry_7.StopAnimation("TEnd");
				_pathGeometry_8.StopAnimation("TStart");
				_pathGeometry_8.StopAnimation("TEnd");
				_pathGeometry_9.StopAnimation("TStart");
				_pathGeometry_9.StopAnimation("TEnd");
				_spriteShape_00.StopAnimation("Scale");
				_spriteShape_01.StopAnimation("Scale");
				_spriteShape_02.StopAnimation("Scale");
				_spriteShape_03.StopAnimation("Scale");
				_spriteShape_04.StopAnimation("Scale");
				_containerVisual_0.StopAnimation("Scale");
			}

		}
	}
}
