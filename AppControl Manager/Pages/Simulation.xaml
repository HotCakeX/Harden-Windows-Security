<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.Simulation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:localbase="using:AppControlManager"
    xmlns:AppControlManager="using:AppControlManager"
    xmlns:customUI="using:AppControlManager.CustomUIElements"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:others="using:AppControlManager.Others"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:CommunityToolkit.WinUI.Behaviors"
    FlowDirection="{x:Bind ViewModel.AppSettings.ApplicationGlobalFlowDirection, Mode=OneWay}"
    mc:Ignorable="d">

    <Grid TabFocusNavigation="Cycle">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <controls:WrapPanel Style="{StaticResource PageHeaderWrapPanelStyle}">

            <TextBlock x:Uid="SimulationPageTitle" TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}" />

            <customUI:GuideButton NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Simulation" />

        </controls:WrapPanel>

        <customUI:InfoBarV2 Grid.Row="1"
                 IsOpen="{x:Bind ViewModel.MainInfoBarIsOpen, Mode=TwoWay}"
                 Message="{x:Bind ViewModel.MainInfoBarMessage, Mode=OneWay}"
                 Severity="{x:Bind ViewModel.MainInfoBarSeverity, Mode=OneWay}"
                 IsClosable="{x:Bind ViewModel.MainInfoBarIsClosable, Mode=OneWay}" />

        <Expander HorizontalAlignment="Stretch"
                  Grid.Row="2"
                  Margin="0,10,0,10">
            <Expander.Header>

                <controls:WrapPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    HorizontalSpacing="10"
                                    Padding="8"
                                    VerticalSpacing="10">

                    <!-- Begin Simulation Button -->
                    <Button x:Uid="BeginSimulation"
                        Style="{StaticResource AccentButtonStyle}"
                        IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                        Click="{x:Bind ViewModel.BeginSimulationButton_Click}">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="Play" />
                            <TextBlock x:Uid="BeginSimulationTextBlock" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Button>

                    <!-- Select XML File Button -->
                    <customUI:ButtonV2 Click="{x:Bind ViewModel.SelectXmlFileButton_Click}"
                                    ObservedData="{x:Bind ViewModel.XmlFilePath, Mode=OneWay}"
                                   IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                   ToolTipService.ToolTip="Browse for the App Control policy XML file">

                        <customUI:ButtonV2.Flyout>
                            <Flyout>

                                <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                    <Button x:Uid="ClearButton" Click="{x:Bind ViewModel.SelectXmlFileButton_Flyout_Clear_Click}" />

                                    <TextBlock x:Uid="ViewSelectedXMLFileTextBlock" TextWrapping="WrapWholeWords" />

                                    <TextBox Text="{x:Bind ViewModel.XmlFilePath, Mode=OneWay}"
                                             TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                             MinWidth="400" IsReadOnly="True" />

                                </controls:WrapPanel>

                            </Flyout>
                        </customUI:ButtonV2.Flyout>

                        <customUI:ButtonV2.Content>
                            <StackPanel Orientation="Horizontal">
                                <FontIcon Glyph="&#xEC50;" />
                                <TextBlock x:Uid="SelectXMLFileTextBlock" Margin="5,0,0,0"/>
                            </StackPanel>
                        </customUI:ButtonV2.Content>
                    </customUI:ButtonV2>

                    <!-- Select Files Button -->
                    <customUI:ButtonV2 Click="{x:Bind ViewModel.SelectFilesButton_Click}"
                                       IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                       ObservedData="{x:Bind ViewModel.FilePaths.Count, Mode=OneWay}"
                                       ToolTipService.ToolTip="Browse for files to include in the simulation">

                        <customUI:ButtonV2.Flyout>
                            <Flyout>

                                <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                    <Button x:Uid="ClearButton" Click="{x:Bind ViewModel.SelectFilesButton_Flyout_Clear_Click}" />

                                    <TextBlock x:Uid="ViewSelectedFilesTextBlock" TextWrapping="WrapWholeWords" />

                                    <ListBox MinWidth="400" SelectionMode="Single" ItemsSource="{x:Bind ViewModel.FilePaths, Mode=OneWay}" />

                                </controls:WrapPanel>

                            </Flyout>
                        </customUI:ButtonV2.Flyout>

                        <customUI:ButtonV2.Content>
                            <StackPanel Orientation="Horizontal">
                                <FontIcon Glyph="&#xEC50;" />
                                <TextBlock x:Uid="SelectFilesTextBlock" Margin="5,0,0,0"/>
                            </StackPanel>
                        </customUI:ButtonV2.Content>
                    </customUI:ButtonV2>

                    <!-- Select Folders Button -->
                    <customUI:ButtonV2 Click="{x:Bind ViewModel.SelectFoldersButton_Click}"
                                       IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                       ObservedData="{x:Bind ViewModel.FolderPaths.Count, Mode=OneWay}"
                                       ToolTipService.ToolTip="Browse for a folder to include in the simulation">

                        <customUI:ButtonV2.Flyout>
                            <Flyout>

                                <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                    <Button x:Uid="ClearButton" Click="{x:Bind ViewModel.SelectFoldersButton_Flyout_Clear_Click}" />

                                    <TextBlock x:Uid="ViewSelectedFoldersTextBlock" TextWrapping="WrapWholeWords" />

                                    <ListBox MinWidth="400" SelectionMode="Single" ItemsSource="{x:Bind ViewModel.FolderPaths, Mode=OneWay}" />

                                </controls:WrapPanel>

                            </Flyout>
                        </customUI:ButtonV2.Flyout>

                        <customUI:ButtonV2.Content>
                            <StackPanel Orientation="Horizontal">
                                <FontIcon Glyph="&#xED25;" />
                                <TextBlock x:Uid="SelectFoldersTextBlock" Margin="5,0,0,0"/>
                            </StackPanel>
                        </customUI:ButtonV2.Content>
                    </customUI:ButtonV2>

                    <DropDownButton Content="Options"
                                IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                ToolTipService.ToolTip="Multiple Extra Options">
                        <DropDownButton.ContentTemplate>
                            <DataTemplate x:DataType="x:String">
                                <StackPanel Orientation="Horizontal" Spacing="8">
                                    <FontIcon Glyph="&#xE712;" FontSize="16"/>
                                    <TextBlock Text="{x:Bind}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DropDownButton.ContentTemplate>
                        <DropDownButton.Flyout>

                            <MenuFlyout Placement="Bottom">

                                <!-- Cat Root Paths Button -->
                                <MenuFlyoutItem Text="Cat Root Paths"
                                                Click="{x:Bind ViewModel.CatRootPathsButton_Click}"
                                                ToolTipService.ToolTip="Provide path(s) to directories where security catalog .cat files are located. If not provided, the default path is C:\Windows\System32\CatRoot">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xED25;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSeparator/>

                                <!-- Toggle Button for No Cat Root Scanning -->
                                <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.NoCatRootScanning, Mode=TwoWay}"
                                                  Text="No Cat Root Scanning"
                                                  ToolTipService.ToolTip="Will not scan the security catalogs on the system">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xEB95;" />
                                    </MenuFlyoutItem.Icon>
                                </ToggleMenuFlyoutItem>

                                <MenuFlyoutSeparator/>

                                <!-- Clear Data Button -->
                                <MenuFlyoutItem Click="{x:Bind ViewModel.ClearDataButton_Click}" x:Uid="ClearDataMenuFlyoutItem">
                                    <MenuFlyoutItem.Icon>
                                        <SymbolIcon Symbol="Delete" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                            </MenuFlyout>

                        </DropDownButton.Flyout>
                    </DropDownButton>

                    <!-- Scalability Button with RadialGauge Flyout -->
                    <Button Content="{x:Bind ViewModel.ScalabilityButtonContent, Mode=OneWay}"
                        IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                        x:Uid="ScalabilityButton">
                        <Button.ContentTemplate>
                            <DataTemplate x:DataType="x:String">
                                <StackPanel Orientation="Horizontal" Spacing="8">
                                    <FontIcon Glyph="&#xE9CA;" FontSize="16"/>
                                    <TextBlock Text="{x:Bind}"/>
                                </StackPanel>
                            </DataTemplate>
                        </Button.ContentTemplate>
                        <Button.Flyout>
                            <Flyout>
                                <StackPanel>
                                    <customUI:ColorRadialGaugeV2
                                      StepSize="1"
                                      IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                      TickSpacing="2"
                                      ScaleWidth="12"
                                      NeedleWidth="0"
                                      NeedleLength="0"
                                      TickLength="8"
                                      TickWidth="0"
                                      ScalePadding="5"
                                      TickPadding="24"
                                      Width="200"
                                      Maximum="120"
                                      Minimum="2"
                                      Value="{x:Bind ViewModel.ScalabilityRadialGaugeValue, Mode=TwoWay}"
                                      ValueStringFormat="N0"/>
                                </StackPanel>
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <ProgressRing IsIndeterminate="False"
                                  Background="LightGray"
                                  Value="{x:Bind ViewModel.ProgressRingValue, Mode=OneWay}"
                                  ToolTipService.ToolTip="The Simulation progress" />

                    <!-- Total chip -->
                    <Border CornerRadius="8"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Padding="10,6"
                            BorderThickness="1"
                            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                            Background="{ThemeResource CardBackgroundFillColorDefaultBrush}">
                        <StackPanel Orientation="Horizontal" Spacing="6" VerticalAlignment="Center">
                            <FontIcon Glyph="&#xE8A9;" Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}" />
                            <TextBlock VerticalAlignment="Center">
                                <Run x:Uid="TotalText" />
                                <Run Text="{x:Bind ViewModel.SimulationOutputs.Count, Mode=OneWay}" FontWeight="SemiBold" />
                            </TextBlock>
                        </StackPanel>
                    </Border>

                    <TextBox PlaceholderText="Search in the data..."
                             IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                             Text="{x:Bind ViewModel.SearchBoxTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             TextChanged="{x:Bind ViewModel.SearchBox_TextChanged}"
                             VerticalAlignment="Center"
                             VerticalContentAlignment="Center"
                             ToolTipService.ToolTip="Search the data" />

                </controls:WrapPanel>

            </Expander.Header>

            <Expander.Content>

                <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                    <Button Click="{x:Bind ViewModel.ExportToJsonButton_Click}"
                            x:Uid="ExportToJSONButton">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal" Spacing="5">
                                <FontIcon Glyph="&#xE96A;" />
                                <TextBlock x:Uid="ExportToJSONButtonText" />
                            </StackPanel>
                        </Button.Content>
                    </Button>

                </controls:WrapPanel>

            </Expander.Content>
        </Expander>


        <customUI:ListViewV2 RegistryKey="Simulation"
                             ItemsSource="{x:Bind ViewModel.SimulationOutputs, Mode=OneWay}"
                             Grid.Row="3"
                             SelectionMode="Extended">

            <customUI:ListViewV2.Header>

                <Border CornerRadius="5" Background="Black">
                    <interactivity:Interaction.Behaviors>
                        <customUI:StickyHeaderBehaviorV2/>
                    </interactivity:Interaction.Behaviors>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!-- TwoWay binding needed of course but the MinWidth constraints make them look better on the UI when resizing so it won't get too small -->
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth1, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth2, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth3, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth4, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth5, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth6, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth7, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth8, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth9, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth10, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth11, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth12, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth13, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth14, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth15, Mode=TwoWay}" MinWidth="50" />
                        </Grid.ColumnDefinitions>

                        <!-- Header Buttons -->
                        <Button x:Uid="PathColumnHeaderBtn" Grid.Column="0" Margin="10,0,0,0" Style="{StaticResource ListViewHeaderButton}" Tag="Path" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SourceColumnHeaderBtn" Grid.Column="1" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="Source" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="IsAuthorizedColumnHeaderBtn" Grid.Column="2" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="IsAuthorized" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="MatchCriteriaColumnHeaderBtn" Grid.Column="3" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="MatchCriteria" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SpecificFileNameLevelMatchCriteriaColumnHeaderBtn" Grid.Column="4" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="SpecificFileNameLevelMatchCriteria" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SignerIDColumnHeaderBtn" Grid.Column="5" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="SignerID" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SignerNameColumnHeaderBtn" Grid.Column="6" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="SignerName" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SignerCertRootColumnHeaderBtn" Grid.Column="7" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="SignerCertRoot" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SignerCertPublisherColumnHeaderBtn" Grid.Column="8" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="SignerCertPublisher" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SignerScopeColumnHeaderBtn" Grid.Column="9" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="SignerScope" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="CertSubjectCNColumnHeaderBtn" Grid.Column="10" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="CertSubjectCN" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="CertIssuerCNColumnHeaderBtn" Grid.Column="11" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="CertIssuerCN" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="CertNotAfterColumnHeaderBtn" Grid.Column="12" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="CertNotAfter" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="CertTBSValueColumnHeaderBtn" Grid.Column="13" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="CertTBSValue" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="FilePathColumnHeaderBtn" Grid.Column="14" Margin="0" Style="{StaticResource ListViewHeaderButton}" Tag="FilePath" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>

                        <!-- GridSplitters between columns -->
                        <controls:GridSplitter Grid.Column="1" />
                        <controls:GridSplitter Grid.Column="2" />
                        <controls:GridSplitter Grid.Column="3" />
                        <controls:GridSplitter Grid.Column="4" />
                        <controls:GridSplitter Grid.Column="5" />
                        <controls:GridSplitter Grid.Column="6" />
                        <controls:GridSplitter Grid.Column="7" />
                        <controls:GridSplitter Grid.Column="8" />
                        <controls:GridSplitter Grid.Column="9" />
                        <controls:GridSplitter Grid.Column="10" />
                        <controls:GridSplitter Grid.Column="11" />
                        <controls:GridSplitter Grid.Column="12" />
                        <controls:GridSplitter Grid.Column="13" />
                        <controls:GridSplitter Grid.Column="14" />
                    </Grid>
                </Border>
            </customUI:ListViewV2.Header>

            <!-- DataTemplate for ListView items -->
            <customUI:ListViewV2.ItemTemplate>
                <DataTemplate x:DataType="others:SimulationOutput">
                    <!-- Setting Background="Transparent" on the Grid makes it hit-test visible, meaning that even areas without any child elements (like empty spaces in the column) will respond to pointer events.  -->
                    <Grid Background="Transparent">
                        <Grid.ContextFlyout>
                            <MenuFlyout>

                                <MenuFlyoutItem x:Uid="CopyRow" Click="{x:Bind ParentViewModelSimulationVM.CopySelectedPolicies_Click}">
                                    <MenuFlyoutItem.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="C" Modifiers="Control" Invoked="{x:Bind ParentViewModelSimulationVM.CopySelectedPolicies_Click}"/>
                                    </MenuFlyoutItem.KeyboardAccelerators>
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSubItem x:Uid="CopyIndividualItems">
                                    <MenuFlyoutSubItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutSubItem.Icon>

                                    <MenuFlyoutSubItem.Items>

                                        <MenuFlyoutItem x:Uid="PathHeader" Tag="Path" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SourceHeader" Tag="Source" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="IsAuthorizedHeader" Tag="IsAuthorized" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="MatchCriteriaHeader" Tag="MatchCriteria" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SpecificFileNameLevelMatchCriteriaHeader" Tag="SpecificFileNameLevelMatchCriteria" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignerIDHeader" Tag="SignerID" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignerNameHeader" Tag="SignerName" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignerCertRootHeader" Tag="SignerCertRoot" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignerCertPublisherHeader" Tag="SignerCertPublisher" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignerScopeHeader" Tag="SignerScope" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="CertSubjectCNHeader" Tag="CertSubjectCN" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="CertIssuerCNHeader" Tag="CertIssuerCN" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="CertNotAfterHeader" Tag="CertNotAfter" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="CertTBSValueHeader" Tag="CertTBSValue" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FilePathHeader" Tag="FilePath" Click="{x:Bind ParentViewModelSimulationVM.CopyPolicyProperty_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                    </MenuFlyoutSubItem.Items>

                                </MenuFlyoutSubItem>
                            </MenuFlyout>
                        </Grid.ContextFlyout>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth1, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth2, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth3, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth4, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth5, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth6, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth7, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth8, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth9, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth10, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth11, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth12, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth13, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth14, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ParentViewModelSimulationVM.ColumnWidth15, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Bind Path}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="0"/>
                        <TextBlock Text="{x:Bind Source}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="1"/>
                        <TextBlock Text="{x:Bind IsAuthorized}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="2"/>
                        <TextBlock x:Phase="1" Text="{x:Bind MatchCriteria}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="3"/>
                        <TextBlock x:Phase="1" Text="{x:Bind SpecificFileNameLevelMatchCriteria}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="4"/>
                        <TextBlock x:Phase="1" Text="{x:Bind SignerID}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="5"/>
                        <TextBlock x:Phase="2" Text="{x:Bind SignerName}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="6"/>
                        <TextBlock x:Phase="2" Text="{x:Bind SignerCertRoot}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="7"/>
                        <TextBlock x:Phase="3" Text="{x:Bind SignerCertPublisher}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="8"/>
                        <TextBlock x:Phase="3" Text="{x:Bind SignerScope}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="9"/>
                        <TextBlock x:Phase="3" Text="{x:Bind CertSubjectCN}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="10"/>
                        <TextBlock x:Phase="3" Text="{x:Bind CertIssuerCN}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="11"/>
                        <TextBlock x:Phase="4" Text="{x:Bind CertNotAfter}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="12"/>
                        <TextBlock x:Phase="4" Text="{x:Bind CertTBSValue}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="13"/>
                        <TextBlock x:Phase="4" Text="{x:Bind FilePath}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="14"/>
                    </Grid>
                </DataTemplate>
            </customUI:ListViewV2.ItemTemplate>
        </customUI:ListViewV2>

    </Grid>
</Page>
