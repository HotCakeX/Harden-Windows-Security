//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.2.250604.1+b02a3ee244
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile MindMap.json
//       
//       Input file:
//           MindMap.json (271079 bytes created 17:18+03:00 Jul 26 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   238 |
// |--------------------------+-------|
// | Expression animators     |     1 |
// | KeyFrame animators       |    26 |
// | Reference parameters     |     1 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     1 |
// |--------------------------+-------|
// | ContainerVisuals         |    11 |
// | ShapeVisuals             |    16 |
// |--------------------------+-------|
// | ContainerShapes          |    25 |
// | CompositionSpriteShapes  |    21 |
// |--------------------------+-------|
// | Brushes                  |    18 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |    10 |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        mind-map
    // Frame rate:  24 fps
    // Frame count: 28
    // Duration:    1166.7 mS
    // _____________________________________________________________________________________________
    // |           Marker           |           Constant           | Frame |   mS   |   Progress   |
    // |____________________________|______________________________|_______|________|______________|
    // | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
    // | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
    // | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
    // | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
    // ---------------------------------------------------------------------------------------------
    sealed partial class MindMap
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 1.167 seconds.
        internal const long c_durationTicks = 11666666;

        // Marker: NormalToPressed_Start.
        internal const float M_NormalToPressed_Start = 0F;

        // Marker: NormalToPressed_End.
        internal const float M_NormalToPressed_End = 0.323214293F;

        // Marker: PointerOverToPressed_Start.
        internal const float M_PointerOverToPressed_Start = 0.323214293F;

        // Marker: PointerOverToPressed_End.
        internal const float M_PointerOverToPressed_End = 0.680357158F;

        // Marker: PressedToNormal_Start.
        internal const float M_PressedToNormal_Start = 0.716071427F;

        // Marker: PressedToNormal_End.
        internal const float M_PressedToNormal_End = 1F;

        // Marker: PressedToPointerOver_Start.
        internal const float M_PressedToPointerOver_Start = 1F;

        // Marker: PressedToPointerOver_End.
        internal const float M_PressedToPointerOver_End = 1F;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new MindMap_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 28d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 24d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(11666666);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 28d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "NormalToPressed_Start", 0d },
                { "NormalToPressed_End", 0.323214285714286 },
                { "PointerOverToPressed_Start", 0.323214285714286 },
                { "PointerOverToPressed_End", 0.680357142857143 },
                { "PressedToNormal_Start", 0.716071428571429 },
                { "PressedToNormal_End", 1d },
                { "PressedToPointerOver_Start", 1d },
                { "PressedToPointerOver_End", 1d },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed partial class MindMap_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 11666666;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CompositionColorBrush _colorBrush_AlmostBlueViolet_FF6C18FF;
            CompositionColorBrush _colorBrush_AlmostDarkTurquoise_FF00B3D7;
            CompositionColorBrush _colorBrush_AlmostTurquoise_FF3CD9EB;
            CompositionContainerShape _containerShape_00;
            CompositionContainerShape _containerShape_01;
            CompositionContainerShape _containerShape_02;
            CompositionContainerShape _containerShape_03;
            CompositionContainerShape _containerShape_04;
            CompositionContainerShape _containerShape_05;
            CompositionContainerShape _containerShape_06;
            CompositionContainerShape _containerShape_07;
            CompositionContainerShape _containerShape_08;
            CompositionContainerShape _containerShape_09;
            CompositionContainerShape _containerShape_10;
            CompositionContainerShape _containerShape_11;
            CompositionContainerShape _containerShape_12;
            CompositionContainerShape _containerShape_13;
            CompositionContainerShape _containerShape_14;
            CompositionContainerShape _containerShape_15;
            CompositionContainerShape _containerShape_16;
            CompositionContainerShape _containerShape_17;
            CompositionContainerShape _containerShape_18;
            CompositionContainerShape _containerShape_19;
            CompositionContainerShape _containerShape_20;
            CompositionContainerShape _containerShape_21;
            CompositionContainerShape _containerShape_22;
            CompositionContainerShape _containerShape_23;
            CompositionContainerShape _containerShape_24;
            CompositionEffectFactory _effectFactory;
            CompositionPath _path;
            CompositionPathGeometry _pathGeometry_0;
            CompositionPathGeometry _pathGeometry_1;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_72;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation_0;
            Vector2KeyFrameAnimation _offsetVector2Animation_1;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2F, 7.00699997F));
                    builder.AddCubicBezier(new Vector2(2F, 7.00699997F), new Vector2(-2F, 7.00699997F), new Vector2(-2F, 7.00699997F));
                    builder.AddCubicBezier(new Vector2(-2F, 7.00699997F), new Vector2(-2F, -7.00699997F), new Vector2(-2F, -7.00699997F));
                    builder.AddCubicBezier(new Vector2(-2F, -7.00699997F), new Vector2(2F, -7.00699997F), new Vector2(2F, -7.00699997F));
                    builder.AddCubicBezier(new Vector2(2F, -7.00699997F), new Vector2(2F, 7.00699997F), new Vector2(2F, 7.00699997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Path
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2F, 7.00699997F));
                    builder.AddCubicBezier(new Vector2(2F, 7.00699997F), new Vector2(-2F, 7.00699997F), new Vector2(-2F, 7.00699997F));
                    builder.AddCubicBezier(new Vector2(-2F, 7.00699997F), new Vector2(-2F, -4.46000004F), new Vector2(-2F, -4.46000004F));
                    builder.AddCubicBezier(new Vector2(-2F, -4.46000004F), new Vector2(2F, -4.46000004F), new Vector2(2F, -4.46000004F));
                    builder.AddCubicBezier(new Vector2(2F, -4.46000004F), new Vector2(2F, 7.00699997F), new Vector2(2F, 7.00699997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -5F));
                    builder.AddCubicBezier(new Vector2(2.76099992F, -5F), new Vector2(5F, -2.76099992F), new Vector2(5F, 0F));
                    builder.AddCubicBezier(new Vector2(5F, 2.76099992F), new Vector2(2.76099992F, 5F), new Vector2(0F, 5F));
                    builder.AddCubicBezier(new Vector2(-2.76099992F, 5F), new Vector2(-5F, 2.76099992F), new Vector2(-5F, 0F));
                    builder.AddCubicBezier(new Vector2(-5F, -2.76099992F), new Vector2(-2.76099992F, -5F), new Vector2(0F, -5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<24, 25>
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -8F));
                    builder.AddCubicBezier(new Vector2(4.41800022F, -8F), new Vector2(8F, -4.41800022F), new Vector2(8F, 0F));
                    builder.AddCubicBezier(new Vector2(8F, 4.41800022F), new Vector2(4.41800022F, 8F), new Vector2(0F, 8F));
                    builder.AddCubicBezier(new Vector2(-4.41800022F, 8F), new Vector2(-8F, 4.41800022F), new Vector2(-8F, 0F));
                    builder.AddCubicBezier(new Vector2(-8F, -4.41800022F), new Vector2(-4.41800022F, -8F), new Vector2(0F, -8F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostBlueViolet_FF6C18FF()
            {
                return (_colorBrush_AlmostBlueViolet_FF6C18FF == null)
                    ? _colorBrush_AlmostBlueViolet_FF6C18FF = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x6C, 0x18, 0xFF))
                    : _colorBrush_AlmostBlueViolet_FF6C18FF;
            }

            CompositionColorBrush ColorBrush_AlmostDarkTurquoise_FF00B3D7()
            {
                return (_colorBrush_AlmostDarkTurquoise_FF00B3D7 == null)
                    ? _colorBrush_AlmostDarkTurquoise_FF00B3D7 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0xB3, 0xD7))
                    : _colorBrush_AlmostDarkTurquoise_FF00B3D7;
            }

            CompositionColorBrush ColorBrush_AlmostTurquoise_FF3CD9EB()
            {
                return (_colorBrush_AlmostTurquoise_FF3CD9EB == null)
                    ? _colorBrush_AlmostTurquoise_FF3CD9EB = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x3C, 0xD9, 0xEB))
                    : _colorBrush_AlmostTurquoise_FF3CD9EB;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_00()
            {
                if (_containerShape_00 != null) { return _containerShape_00; }
                var result = _containerShape_00 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                var shapes = result.Shapes;
                // Transforms: line Offset:<-24, -24>
                shapes.Add(SpriteShape_00());
                // Transforms: circle
                shapes.Add(ContainerShape_01());
                return result;
            }

            // - Layer aggregator
            // Transforms for circle
            CompositionContainerShape ContainerShape_01()
            {
                if (_containerShape_01 != null) { return _containerShape_01; }
                var result = _containerShape_01 = _c.CreateContainerShape();
                // ShapeGroup: Group 5 Offset:<24.003, 6.616>
                result.Shapes.Add(SpriteShape_01());
                return result;
            }

            // Shape tree root for layer: line 2
            CompositionContainerShape ContainerShape_02()
            {
                if (_containerShape_02 != null) { return _containerShape_02; }
                var result = _containerShape_02 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: line 2 Offset:<-24, -24>
                result.Shapes.Add(SpriteShape_02());
                return result;
            }

            // Shape tree root for layer: mask
            CompositionContainerShape ContainerShape_03()
            {
                if (_containerShape_03 != null) { return _containerShape_03; }
                var result = _containerShape_03 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: mask
                result.Shapes.Add(ContainerShape_04());
                return result;
            }

            // - Shape tree root for layer: mask
            // Transforms for mask
            CompositionContainerShape ContainerShape_04()
            {
                if (_containerShape_04 != null) { return _containerShape_04; }
                var result = _containerShape_04 = _c.CreateContainerShape();
                // ShapeGroup: Group 5 Offset:<24.003, 6.616>
                result.Shapes.Add(SpriteShape_03());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_05()
            {
                if (_containerShape_05 != null) { return _containerShape_05; }
                var result = _containerShape_05 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                var shapes = result.Shapes;
                // Transforms: line 3 RotationDegrees:72, Offset:<-24, -24>
                shapes.Add(SpriteShape_04());
                // Transforms: line 3 RotationDegrees:72, Offset:<-24, -24>
                shapes.Add(ContainerShape_06());
                return result;
            }

            // - Layer aggregator
            // Transforms for circle 2
            CompositionContainerShape ContainerShape_06()
            {
                if (_containerShape_06 != null) { return _containerShape_06; }
                var result = _containerShape_06 = _c.CreateContainerShape();
                // Offset:<16.360008, -29.550781>, Rotation:72.00000130095981 degrees
                result.TransformMatrix = new Matrix3x2(0.309016973F, 0.95105654F, -0.95105654F, 0.309016973F, 16.3600082F, -29.5507812F);
                // ShapeGroup: Group 5 Offset:<24.003, 6.616>
                result.Shapes.Add(SpriteShape_05());
                return result;
            }

            // Shape tree root for layer: line 4
            CompositionContainerShape ContainerShape_07()
            {
                if (_containerShape_07 != null) { return _containerShape_07; }
                var result = _containerShape_07 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: line 3 RotationDegrees:72, Offset:<-24, -24>
                result.Shapes.Add(SpriteShape_06());
                return result;
            }

            // Shape tree root for layer: mask 2
            CompositionContainerShape ContainerShape_08()
            {
                if (_containerShape_08 != null) { return _containerShape_08; }
                var result = _containerShape_08 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: line 3 RotationDegrees:72, Offset:<-24, -24>
                result.Shapes.Add(ContainerShape_09());
                return result;
            }

            // - Shape tree root for layer: mask 2
            // Transforms for mask 2
            CompositionContainerShape ContainerShape_09()
            {
                if (_containerShape_09 != null) { return _containerShape_09; }
                var result = _containerShape_09 = _c.CreateContainerShape();
                // Offset:<16.360008, -29.550781>, Rotation:72.00000130095981 degrees
                result.TransformMatrix = new Matrix3x2(0.309016973F, 0.95105654F, -0.95105654F, 0.309016973F, 16.3600082F, -29.5507812F);
                // ShapeGroup: Group 5 Offset:<24.003, 6.616>
                result.Shapes.Add(SpriteShape_07());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_10()
            {
                if (_containerShape_10 != null) { return _containerShape_10; }
                var result = _containerShape_10 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                var shapes = result.Shapes;
                // Transforms: line 5 RotationDegrees:144, Offset:<-24, -24>
                shapes.Add(SpriteShape_08());
                // Transforms: line 5 RotationDegrees:144, Offset:<-24, -24>
                shapes.Add(ContainerShape_11());
                return result;
            }

            // - Layer aggregator
            // Transforms for circle 3
            CompositionContainerShape ContainerShape_11()
            {
                if (_containerShape_11 != null) { return _containerShape_11; }
                var result = _containerShape_11 = _c.CreateContainerShape();
                // Offset:<34.11104, 7.118582>, Rotation:144.00000661016227 degrees
                result.TransformMatrix = new Matrix3x2(-0.809017062F, 0.587785184F, -0.587785184F, -0.809017062F, 34.1110382F, 7.11858177F);
                // ShapeGroup: Group 5 Offset:<24.003, 6.616>
                result.Shapes.Add(SpriteShape_09());
                return result;
            }

            // Shape tree root for layer: line 6
            CompositionContainerShape ContainerShape_12()
            {
                if (_containerShape_12 != null) { return _containerShape_12; }
                var result = _containerShape_12 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: line 5 RotationDegrees:144, Offset:<-24, -24>
                result.Shapes.Add(SpriteShape_10());
                return result;
            }

            // Shape tree root for layer: mask 3
            CompositionContainerShape ContainerShape_13()
            {
                if (_containerShape_13 != null) { return _containerShape_13; }
                var result = _containerShape_13 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: line 5 RotationDegrees:144, Offset:<-24, -24>
                result.Shapes.Add(ContainerShape_14());
                return result;
            }

            // - Shape tree root for layer: mask 3
            // Transforms for mask 3
            CompositionContainerShape ContainerShape_14()
            {
                if (_containerShape_14 != null) { return _containerShape_14; }
                var result = _containerShape_14 = _c.CreateContainerShape();
                // Offset:<34.11104, 7.118582>, Rotation:144.00000661016227 degrees
                result.TransformMatrix = new Matrix3x2(-0.809017062F, 0.587785184F, -0.587785184F, -0.809017062F, 34.1110382F, 7.11858177F);
                // ShapeGroup: Group 5 Offset:<24.003, 6.616>
                result.Shapes.Add(SpriteShape_11());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_15()
            {
                if (_containerShape_15 != null) { return _containerShape_15; }
                var result = _containerShape_15 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                var shapes = result.Shapes;
                // Transforms: line 7 RotationDegrees:216, Offset:<-24, -24>
                shapes.Add(SpriteShape_12());
                // Transforms: line 7 RotationDegrees:216, Offset:<-24, -24>
                shapes.Add(ContainerShape_16());
                return result;
            }

            // - Layer aggregator
            // Transforms for circle 4
            CompositionContainerShape ContainerShape_16()
            {
                if (_containerShape_16 != null) { return _containerShape_16; }
                var result = _containerShape_16 = _c.CreateContainerShape();
                // Offset:<4.721779, 35.332268>, Rotation:-144.00000661016227 degrees
                result.TransformMatrix = new Matrix3x2(-0.809017062F, -0.587785184F, 0.587785184F, -0.809017062F, 4.72177887F, 35.3322678F);
                // ShapeGroup: Group 5 Offset:<24.003, 6.616>
                result.Shapes.Add(SpriteShape_13());
                return result;
            }

            // Shape tree root for layer: line 8
            CompositionContainerShape ContainerShape_17()
            {
                if (_containerShape_17 != null) { return _containerShape_17; }
                var result = _containerShape_17 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: line 7 RotationDegrees:216, Offset:<-24, -24>
                result.Shapes.Add(SpriteShape_14());
                return result;
            }

            // Shape tree root for layer: mask 4
            CompositionContainerShape ContainerShape_18()
            {
                if (_containerShape_18 != null) { return _containerShape_18; }
                var result = _containerShape_18 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: line 7 RotationDegrees:216, Offset:<-24, -24>
                result.Shapes.Add(ContainerShape_19());
                return result;
            }

            // - Shape tree root for layer: mask 4
            // Transforms for mask 4
            CompositionContainerShape ContainerShape_19()
            {
                if (_containerShape_19 != null) { return _containerShape_19; }
                var result = _containerShape_19 = _c.CreateContainerShape();
                // Offset:<4.721779, 35.332268>, Rotation:-144.00000661016227 degrees
                result.TransformMatrix = new Matrix3x2(-0.809017062F, -0.587785184F, 0.587785184F, -0.809017062F, 4.72177887F, 35.3322678F);
                // ShapeGroup: Group 5 Offset:<24.003, 6.616>
                result.Shapes.Add(SpriteShape_15());
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_20()
            {
                if (_containerShape_20 != null) { return _containerShape_20; }
                var result = _containerShape_20 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                var shapes = result.Shapes;
                // Transforms: line 9 RotationDegrees:288, Offset:<-24, -24>
                shapes.Add(SpriteShape_16());
                // Transforms: line 9 RotationDegrees:288, Offset:<-24, -24>
                shapes.Add(ContainerShape_21());
                return result;
            }

            // - Layer aggregator
            // Transforms for circle 5
            CompositionContainerShape ContainerShape_21()
            {
                if (_containerShape_21 != null) { return _containerShape_21; }
                var result = _containerShape_21 = _c.CreateContainerShape();
                // Offset:<-31.19282, 16.099934>, Rotation:-72.00000130095981 degrees
                result.TransformMatrix = new Matrix3x2(0.309016973F, -0.95105654F, 0.95105654F, 0.309016973F, -31.1928196F, 16.0999336F);
                // ShapeGroup: Group 5 Offset:<24.003, 6.616>
                result.Shapes.Add(SpriteShape_17());
                return result;
            }

            // Shape tree root for layer: line 10
            CompositionContainerShape ContainerShape_22()
            {
                if (_containerShape_22 != null) { return _containerShape_22; }
                var result = _containerShape_22 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: line 9 RotationDegrees:288, Offset:<-24, -24>
                result.Shapes.Add(SpriteShape_18());
                return result;
            }

            // Shape tree root for layer: mask 5
            CompositionContainerShape ContainerShape_23()
            {
                if (_containerShape_23 != null) { return _containerShape_23; }
                var result = _containerShape_23 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0F, 1F);
                result.Offset = new Vector2(24F, 24F);
                // Transforms: line 9 RotationDegrees:288, Offset:<-24, -24>
                result.Shapes.Add(ContainerShape_24());
                return result;
            }

            // - Shape tree root for layer: mask 5
            // Transforms for mask 5
            CompositionContainerShape ContainerShape_24()
            {
                if (_containerShape_24 != null) { return _containerShape_24; }
                var result = _containerShape_24 = _c.CreateContainerShape();
                // Offset:<-31.19282, 16.099934>, Rotation:-72.00000130095981 degrees
                result.TransformMatrix = new Matrix3x2(0.309016973F, -0.95105654F, 0.95105654F, 0.309016973F, -31.1928196F, 16.0999336F);
                // ShapeGroup: Group 5 Offset:<24.003, 6.616>
                result.Shapes.Add(SpriteShape_19());
                return result;
            }

            CompositionEffectBrush EffectBrush_0()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            CompositionEffectBrush EffectBrush_1()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_2());
                result.SetSourceParameter("source", SurfaceBrush_3());
                return result;
            }

            CompositionEffectBrush EffectBrush_2()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_4());
                result.SetSourceParameter("source", SurfaceBrush_5());
                return result;
            }

            CompositionEffectBrush EffectBrush_3()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_6());
                result.SetSourceParameter("source", SurfaceBrush_7());
                return result;
            }

            CompositionEffectBrush EffectBrush_4()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_8());
                result.SetSourceParameter("source", SurfaceBrush_9());
                return result;
            }

            CompositionEffectFactory EffectFactory()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                if (_effectFactory != null) { return _effectFactory; }
                var result = _effectFactory = _c.CreateEffectFactory(compositeEffect);
                return result;
            }

            CompositionPath Path()
            {
                if (_path != null) { return _path; }
                var result = _path = new CompositionPath(Geometry_0());
                return result;
            }

            CompositionPathGeometry PathGeometry_0()
            {
                if (_pathGeometry_0 != null) { return _pathGeometry_0; }
                var result = _pathGeometry_0 = _c.CreatePathGeometry();
                return result;
            }

            CompositionPathGeometry PathGeometry_1()
            {
                return (_pathGeometry_1 == null)
                    ? _pathGeometry_1 = _c.CreatePathGeometry(new CompositionPath(Geometry_2()))
                    : _pathGeometry_1;
            }

            // - Layer aggregator
            // ShapeGroup: Group 1 Offset:<24, 25>
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<0.0020008087, -10.536>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0.00200080872F, -10.5360003F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - - Layer aggregator
            // Transforms: circle
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<24.003, 6.616>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24.0030003F, 6.61600018F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Shape tree root for layer: line 2
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<0.0020008087, -10.536>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 0.00200080872F, -10.5360003F), ColorBrush_AlmostDarkTurquoise_FF00B3D7());;
                return result;
            }

            // - - Shape tree root for layer: mask
            // Transforms: mask
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<24.003, 6.616>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24.0030003F, 6.61600018F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<10.972009, -2.5629177>, Rotation:72.00000130095981 degrees
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.309016973F, 0.95105654F, -0.95105654F, 0.309016973F, 10.9720087F, -2.56291771F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - - Layer aggregator
            // Transforms: line 3 RotationDegrees:72, Offset:<-24, -24>
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<24.003, 6.616>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24.0030003F, 6.61600018F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Shape tree root for layer: line 4
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<10.972009, -2.5629177>, Rotation:72.00000130095981 degrees
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.309016973F, 0.95105654F, -0.95105654F, 0.309016973F, 10.9720087F, -2.56291771F), ColorBrush_AlmostDarkTurquoise_FF00B3D7());;
                return result;
            }

            // - - Shape tree root for layer: mask 2
            // Transforms: line 3 RotationDegrees:72, Offset:<-24, -24>
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<24.003, 6.616>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24.0030003F, 6.61600018F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<6.779072, 10.333997>, Rotation:144.00000661016227 degrees
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(-0.809017062F, 0.587785184F, -0.587785184F, -0.809017062F, 6.77907181F, 10.3339968F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - - Layer aggregator
            // Transforms: line 5 RotationDegrees:144, Offset:<-24, -24>
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<24.003, 6.616>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24.0030003F, 6.61600018F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Shape tree root for layer: line 6
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<6.779072, 10.333997>, Rotation:144.00000661016227 degrees
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(-0.809017062F, 0.587785184F, -0.587785184F, -0.809017062F, 6.77907181F, 10.3339968F), ColorBrush_AlmostDarkTurquoise_FF00B3D7());;
                return result;
            }

            // - - Shape tree root for layer: mask 3
            // Transforms: line 5 RotationDegrees:144, Offset:<-24, -24>
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<24.003, 6.616>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24.0030003F, 6.61600018F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<-6.7823095, 10.331642>, Rotation:-144.00000661016227 degrees
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(-0.809017062F, -0.587785184F, 0.587785184F, -0.809017062F, -6.78230953F, 10.3316422F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - - Layer aggregator
            // Transforms: line 7 RotationDegrees:216, Offset:<-24, -24>
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<24.003, 6.616>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24.0030003F, 6.61600018F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Shape tree root for layer: line 8
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                // Offset:<-6.7823095, 10.331642>, Rotation:-144.00000661016227 degrees
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(-0.809017062F, -0.587785184F, 0.587785184F, -0.809017062F, -6.78230953F, 10.3316422F), ColorBrush_AlmostDarkTurquoise_FF00B3D7());;
                return result;
            }

            // - - Shape tree root for layer: mask 4
            // Transforms: line 7 RotationDegrees:216, Offset:<-24, -24>
            // Path 1
            CompositionSpriteShape SpriteShape_15()
            {
                // Offset:<24.003, 6.616>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24.0030003F, 6.61600018F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_16()
            {
                // Offset:<-10.97077, -2.566721>, Rotation:-72.00000130095981 degrees
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.309016973F, -0.95105654F, 0.95105654F, 0.309016973F, -10.9707699F, -2.56672096F), ColorBrush_AlmostBlueViolet_FF6C18FF());;
                return result;
            }

            // - - Layer aggregator
            // Transforms: line 9 RotationDegrees:288, Offset:<-24, -24>
            // Path 1
            CompositionSpriteShape SpriteShape_17()
            {
                // Offset:<24.003, 6.616>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24.0030003F, 6.61600018F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // - Shape tree root for layer: line 10
            // Path 1
            CompositionSpriteShape SpriteShape_18()
            {
                // Offset:<-10.97077, -2.566721>, Rotation:-72.00000130095981 degrees
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.309016973F, -0.95105654F, 0.95105654F, 0.309016973F, -10.9707699F, -2.56672096F), ColorBrush_AlmostDarkTurquoise_FF00B3D7());;
                return result;
            }

            // - - Shape tree root for layer: mask 5
            // Transforms: line 9 RotationDegrees:288, Offset:<-24, -24>
            // Path 1
            CompositionSpriteShape SpriteShape_19()
            {
                // Offset:<24.003, 6.616>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24.0030003F, 6.61600018F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_20()
            {
                // Offset:<24, 25>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 25F), ColorBrush_AlmostTurquoise_FF3CD9EB());;
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionSurfaceBrush SurfaceBrush_2()
            {
                return _c.CreateSurfaceBrush(VisualSurface_2());
            }

            CompositionSurfaceBrush SurfaceBrush_3()
            {
                return _c.CreateSurfaceBrush(VisualSurface_3());
            }

            CompositionSurfaceBrush SurfaceBrush_4()
            {
                return _c.CreateSurfaceBrush(VisualSurface_4());
            }

            CompositionSurfaceBrush SurfaceBrush_5()
            {
                return _c.CreateSurfaceBrush(VisualSurface_5());
            }

            CompositionSurfaceBrush SurfaceBrush_6()
            {
                return _c.CreateSurfaceBrush(VisualSurface_6());
            }

            CompositionSurfaceBrush SurfaceBrush_7()
            {
                return _c.CreateSurfaceBrush(VisualSurface_7());
            }

            CompositionSurfaceBrush SurfaceBrush_8()
            {
                return _c.CreateSurfaceBrush(VisualSurface_8());
            }

            CompositionSurfaceBrush SurfaceBrush_9()
            {
                return _c.CreateSurfaceBrush(VisualSurface_9());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_2()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_2();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_3()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_3();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_4()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_4();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_5()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_5();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_6()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_6();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_7()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_7();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_8()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_8();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            CompositionVisualSurface VisualSurface_9()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_9();
                result.SourceSize = new Vector2(48F, 48F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: line 2
                result.Children.InsertAtTop(ShapeVisual_01());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask
                result.Children.InsertAtTop(ShapeVisual_02());
                return result;
            }

            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: line 4
                result.Children.InsertAtTop(ShapeVisual_04());
                return result;
            }

            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 2
                result.Children.InsertAtTop(ShapeVisual_05());
                return result;
            }

            ContainerVisual ContainerVisual_4()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: line 6
                result.Children.InsertAtTop(ShapeVisual_07());
                return result;
            }

            ContainerVisual ContainerVisual_5()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 3
                result.Children.InsertAtTop(ShapeVisual_08());
                return result;
            }

            ContainerVisual ContainerVisual_6()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: line 8
                result.Children.InsertAtTop(ShapeVisual_10());
                return result;
            }

            ContainerVisual ContainerVisual_7()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 4
                result.Children.InsertAtTop(ShapeVisual_11());
                return result;
            }

            ContainerVisual ContainerVisual_8()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: line 10
                result.Children.InsertAtTop(ShapeVisual_13());
                return result;
            }

            ContainerVisual ContainerVisual_9()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mask 5
                result.Children.InsertAtTop(ShapeVisual_14());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_00());
                children.InsertAtTop(SpriteVisual_0());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_03());
                children.InsertAtTop(SpriteVisual_1());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_06());
                children.InsertAtTop(SpriteVisual_2());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_09());
                children.InsertAtTop(SpriteVisual_3());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_12());
                children.InsertAtTop(SpriteVisual_4());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_15());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path(), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, Path(), HoldThenStepEasingFunction());
                // Frame 14.
                result.InsertKeyFrame(0.5F, new CompositionPath(Geometry_1()), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, Path(), CubicBezierEasingFunction_0());
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_72()
            {
                // Frame 0.
                if (_rotationAngleInDegreesScalarAnimation_0_to_72 != null) { return _rotationAngleInDegreesScalarAnimation_0_to_72; }
                var result = _rotationAngleInDegreesScalarAnimation_0_to_72 = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 4.
                result.InsertKeyFrame(0.142857149F, 0F, HoldThenStepEasingFunction());
                // Frame 24.
                result.InsertKeyFrame(0.857142866F, 72F, CubicBezierEasingFunction_0());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_00()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_00());
                return result;
            }

            // Shape tree root for layer: line 2
            ShapeVisual ShapeVisual_01()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_02());
                return result;
            }

            // Shape tree root for layer: mask
            ShapeVisual ShapeVisual_02()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_03());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_03()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_05());
                return result;
            }

            // Shape tree root for layer: line 4
            ShapeVisual ShapeVisual_04()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_07());
                return result;
            }

            // Shape tree root for layer: mask 2
            ShapeVisual ShapeVisual_05()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_08());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_06()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_10());
                return result;
            }

            // Shape tree root for layer: line 6
            ShapeVisual ShapeVisual_07()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_12());
                return result;
            }

            // Shape tree root for layer: mask 3
            ShapeVisual ShapeVisual_08()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_13());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_09()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_15());
                return result;
            }

            // Shape tree root for layer: line 8
            ShapeVisual ShapeVisual_10()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_17());
                return result;
            }

            // Shape tree root for layer: mask 4
            ShapeVisual ShapeVisual_11()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_18());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_12()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_20());
                return result;
            }

            // Shape tree root for layer: line 10
            ShapeVisual ShapeVisual_13()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_22());
                return result;
            }

            // Shape tree root for layer: mask 5
            ShapeVisual ShapeVisual_14()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape_23());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_15()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                // ShapeGroup: Group 1 Offset:<24, 25>
                result.Shapes.Add(SpriteShape_20());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_0();
                return result;
            }

            SpriteVisual SpriteVisual_1()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_1();
                return result;
            }

            SpriteVisual SpriteVisual_2()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_2();
                return result;
            }

            SpriteVisual SpriteVisual_3()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_3();
                return result;
            }

            SpriteVisual SpriteVisual_4()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(48F, 48F);
                result.Brush = EffectBrush_4();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                if (_offsetVector2Animation_0 != null) { return _offsetVector2Animation_0; }
                var result = _offsetVector2Animation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(-24F, -24F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(-24F, -24F), HoldThenStepEasingFunction());
                // Frame 14.
                result.InsertKeyFrame(0.5F, new Vector2(-24F, -22F), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(-24F, -24F), CubicBezierEasingFunction_0());
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                if (_offsetVector2Animation_1 != null) { return _offsetVector2Animation_1; }
                var result = _offsetVector2Animation_1 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 14.
                result.InsertKeyFrame(0.5F, new Vector2(0F, 2F), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            internal MindMap_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(48F, 48F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_00.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_01.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _containerShape_02.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_03.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_04.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _containerShape_05.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_06.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _containerShape_07.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_08.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_09.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _containerShape_10.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_11.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _containerShape_12.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_13.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_14.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _containerShape_15.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_16.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _containerShape_17.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_18.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_19.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _containerShape_20.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_21.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _containerShape_22.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_23.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_72(), AnimationController_0());
                _containerShape_24.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _pathGeometry_0.StartAnimation("Path", PathKeyFrameAnimation_0(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _containerShape_00.StopAnimation("RotationAngleInDegrees");
                _containerShape_01.StopAnimation("Offset");
                _containerShape_02.StopAnimation("RotationAngleInDegrees");
                _containerShape_03.StopAnimation("RotationAngleInDegrees");
                _containerShape_04.StopAnimation("Offset");
                _containerShape_05.StopAnimation("RotationAngleInDegrees");
                _containerShape_06.StopAnimation("Offset");
                _containerShape_07.StopAnimation("RotationAngleInDegrees");
                _containerShape_08.StopAnimation("RotationAngleInDegrees");
                _containerShape_09.StopAnimation("Offset");
                _containerShape_10.StopAnimation("RotationAngleInDegrees");
                _containerShape_11.StopAnimation("Offset");
                _containerShape_12.StopAnimation("RotationAngleInDegrees");
                _containerShape_13.StopAnimation("RotationAngleInDegrees");
                _containerShape_14.StopAnimation("Offset");
                _containerShape_15.StopAnimation("RotationAngleInDegrees");
                _containerShape_16.StopAnimation("Offset");
                _containerShape_17.StopAnimation("RotationAngleInDegrees");
                _containerShape_18.StopAnimation("RotationAngleInDegrees");
                _containerShape_19.StopAnimation("Offset");
                _containerShape_20.StopAnimation("RotationAngleInDegrees");
                _containerShape_21.StopAnimation("Offset");
                _containerShape_22.StopAnimation("RotationAngleInDegrees");
                _containerShape_23.StopAnimation("RotationAngleInDegrees");
                _containerShape_24.StopAnimation("Offset");
                _pathGeometry_0.StopAnimation("Path");
            }

        }
    }
}
