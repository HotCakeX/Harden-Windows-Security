//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.2.250604.1+b02a3ee244
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile Home.json
//       
//       Input file:
//           Home.json (209504 bytes created 10:26+03:00 Sep 19 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   162 |
// |--------------------------+-------|
// | Expression animators     |     2 |
// | KeyFrame animators       |    15 |
// | Reference parameters     |     3 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     6 |
// |--------------------------+-------|
// | ContainerVisuals         |     5 |
// | ShapeVisuals             |     6 |
// |--------------------------+-------|
// | ContainerShapes          |     5 |
// | CompositionSpriteShapes  |    12 |
// |--------------------------+-------|
// | Brushes                  |    13 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     4 |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
	// Name:        home-3
	// Frame rate:  24 fps
	// Frame count: 28
	// Duration:    1166.7 mS
	// _____________________________________________________________________________________________
	// |           Marker           |           Constant           | Frame |   mS   |   Progress   |
	// |____________________________|______________________________|_______|________|______________|
	// | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
	// | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
	// | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
	// | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
	// | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
	// | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
	// | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
	// | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
	// ---------------------------------------------------------------------------------------------
	sealed partial class Home
		: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
		, Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		// Animation duration: 1.167 seconds.
		internal const long c_durationTicks = 11666666;

		// Marker: NormalToPressed_Start.
		internal const float M_NormalToPressed_Start = 0F;

		// Marker: NormalToPressed_End.
		internal const float M_NormalToPressed_End = 0.323214293F;

		// Marker: PointerOverToPressed_Start.
		internal const float M_PointerOverToPressed_Start = 0.323214293F;

		// Marker: PointerOverToPressed_End.
		internal const float M_PointerOverToPressed_End = 0.680357158F;

		// Marker: PressedToNormal_Start.
		internal const float M_PressedToNormal_Start = 0.716071427F;

		// Marker: PressedToNormal_End.
		internal const float M_PressedToNormal_End = 1F;

		// Marker: PressedToPointerOver_Start.
		internal const float M_PressedToPointerOver_Start = 1F;

		// Marker: PressedToPointerOver_End.
		internal const float M_PressedToPointerOver_End = 1F;

		public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
		{
			object ignored = null;
			return TryCreateAnimatedVisual(compositor, out ignored);
		}

		public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
		{
			diagnostics = null;

			var res =
				new Home_AnimatedVisual(
					compositor
					);
			res.CreateAnimations();
			return res;
		}

		/// <summary>
		/// Gets the number of frames in the animation.
		/// </summary>
		public double FrameCount => 28d;

		/// <summary>
		/// Gets the frame rate of the animation.
		/// </summary>
		public double Framerate => 24d;

		/// <summary>
		/// Gets the duration of the animation.
		/// </summary>
		public TimeSpan Duration => TimeSpan.FromTicks(11666666);

		/// <summary>
		/// Converts a zero-based frame number to the corresponding progress value denoting the
		/// start of the frame.
		/// </summary>
		public double FrameToProgress(double frameNumber)
		{
			return frameNumber / 28d;
		}

		/// <summary>
		/// Returns a map from marker names to corresponding progress values.
		/// </summary>
		public IReadOnlyDictionary<string, double> Markers =>
			new Dictionary<string, double>
			{
				{ "NormalToPressed_Start", 0d },
				{ "NormalToPressed_End", 0.323214285714286 },
				{ "PointerOverToPressed_Start", 0.323214285714286 },
				{ "PointerOverToPressed_End", 0.680357142857143 },
				{ "PressedToNormal_Start", 0.716071428571429 },
				{ "PressedToNormal_End", 1d },
				{ "PressedToPointerOver_Start", 1d },
				{ "PressedToPointerOver_End", 1d },
			};

		/// <summary>
		/// Sets the color property with the given name, or does nothing if no such property
		/// exists.
		/// </summary>
		public void SetColorProperty(string propertyName, Color value)
		{
		}

		/// <summary>
		/// Sets the scalar property with the given name, or does nothing if no such property
		/// exists.
		/// </summary>
		public void SetScalarProperty(string propertyName, double value)
		{
		}

		sealed partial class Home_AnimatedVisual
			: Microsoft.UI.Xaml.Controls.IAnimatedVisual
			, Microsoft.UI.Xaml.Controls.IAnimatedVisual2
		{
			const long c_durationTicks = 11666666;
			readonly Compositor _c;
			readonly ExpressionAnimation _reusableExpressionAnimation;
			AnimationController _animationController_0;
			CompositionColorBrush _colorBrush_AlmostFirebrick_FFB71C1C;
			CompositionColorBrush _colorBrush_AlmostLightGreen_FF5AFF61;
			CompositionColorBrush _colorBrush_AlmostLightSteelBlue_FFC5C9E9;
			CompositionContainerShape _containerShape_0;
			CompositionContainerShape _containerShape_1;
			CompositionContainerShape _containerShape_2;
			CompositionContainerShape _containerShape_3;
			CompositionContainerShape _containerShape_4;
			CompositionEffectFactory _effectFactory;
			CompositionPath _path_00;
			CompositionPath _path_01;
			CompositionPath _path_02;
			CompositionPath _path_03;
			CompositionPath _path_04;
			CompositionPath _path_05;
			CompositionPath _path_06;
			CompositionPath _path_07;
			CompositionPath _path_08;
			CompositionPath _path_09;
			CompositionPath _path_10;
			CompositionPath _path_11;
			CompositionPathGeometry _pathGeometry_00;
			CompositionPathGeometry _pathGeometry_01;
			CompositionPathGeometry _pathGeometry_05;
			CompositionPathGeometry _pathGeometry_06;
			CompositionPathGeometry _pathGeometry_07;
			CompositionPathGeometry _pathGeometry_08;
			CompositionSpriteShape _spriteShape_09;
			CompositionSpriteShape _spriteShape_10;
			CompositionSpriteShape _spriteShape_11;
			ContainerVisual _root;
			CubicBezierEasingFunction _cubicBezierEasingFunction_0;
			CubicBezierEasingFunction _cubicBezierEasingFunction_1;
			StepEasingFunction _holdThenStepEasingFunction;
			StepEasingFunction _stepThenHoldEasingFunction;

			void BindProperty(
				CompositionObject target,
				string animatedPropertyName,
				string expression,
				string referenceParameterName,
				CompositionObject referencedObject)
			{
				_reusableExpressionAnimation.ClearAllParameters();
				_reusableExpressionAnimation.Expression = expression;
				_reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
				target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
			}

			PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreatePathKeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreateScalarKeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreateVector2KeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
			{
				var result = _c.CreateSpriteShape(geometry);
				result.TransformMatrix = transformMatrix;
				result.FillBrush = fillBrush;
				return result;
			}

			AnimationController AnimationController_0()
			{
				if (_animationController_0 != null) { return _animationController_0; }
				var result = _animationController_0 = _c.CreateAnimationController();
				result.Pause();
				BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
				return result;
			}

			CanvasGeometry Geometry_00()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(18F, 19F));
					builder.AddCubicBezier(new Vector2(18F, 19F), new Vector2(-18F, 19F), new Vector2(-18F, 19F));
					builder.AddCubicBezier(new Vector2(-18F, 19F), new Vector2(-18F, -2F), new Vector2(-18F, -2F));
					builder.AddCubicBezier(new Vector2(-18F, -2F), new Vector2(0F, -19F), new Vector2(0F, -19F));
					builder.AddCubicBezier(new Vector2(0F, -19F), new Vector2(18F, -2F), new Vector2(18F, -2F));
					builder.AddCubicBezier(new Vector2(18F, -2F), new Vector2(18F, 19F), new Vector2(18F, 19F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_01()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(20.0160007F, 19F));
					builder.AddCubicBezier(new Vector2(20.0160007F, 19F), new Vector2(-18F, 19F), new Vector2(-18F, 19F));
					builder.AddCubicBezier(new Vector2(-18F, 19F), new Vector2(-18F, -2F), new Vector2(-18F, -2F));
					builder.AddCubicBezier(new Vector2(-18F, -2F), new Vector2(0F, -19F), new Vector2(0F, -19F));
					builder.AddCubicBezier(new Vector2(0F, -19F), new Vector2(20.0160007F, -2F), new Vector2(20.0160007F, -2F));
					builder.AddCubicBezier(new Vector2(20.0160007F, -2F), new Vector2(20.0160007F, 19F), new Vector2(20.0160007F, 19F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_02()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(10.2939997F, 10.3999996F));
					builder.AddCubicBezier(new Vector2(10.2939997F, 10.3999996F), new Vector2(12.2749996F, 8.19999981F), new Vector2(12.2749996F, 8.19999981F));
					builder.AddCubicBezier(new Vector2(12.2749996F, 8.19999981F), new Vector2(-7.71099997F, -10.4069996F), new Vector2(-7.71099997F, -10.4069996F));
					builder.AddCubicBezier(new Vector2(-7.71099997F, -10.4069996F), new Vector2(-11.8369999F, -10.3999996F), new Vector2(-11.8369999F, -10.3999996F));
					builder.AddCubicBezier(new Vector2(-11.8369999F, -10.3999996F), new Vector2(-11.8369999F, -6.30000019F), new Vector2(-11.8369999F, -6.30000019F));
					builder.AddCubicBezier(new Vector2(-11.8369999F, -6.30000019F), new Vector2(2.04299998F, 10.3999996F), new Vector2(2.04299998F, 10.3999996F));
					builder.AddCubicBezier(new Vector2(2.04299998F, 10.3999996F), new Vector2(10.2939997F, 10.3999996F), new Vector2(10.2939997F, 10.3999996F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_03()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(12.2939997F, 10.3959999F));
					builder.AddCubicBezier(new Vector2(12.2939997F, 10.3959999F), new Vector2(13.8369999F, 8.1960001F), new Vector2(13.8369999F, 8.1960001F));
					builder.AddCubicBezier(new Vector2(13.8369999F, 8.1960001F), new Vector2(-2.16400003F, -10.408F), new Vector2(-2.16400003F, -10.408F));
					builder.AddCubicBezier(new Vector2(-2.16400003F, -10.408F), new Vector2(-12.7150002F, -10.4029999F), new Vector2(-12.7150002F, -10.4029999F));
					builder.AddCubicBezier(new Vector2(-12.7150002F, -10.4029999F), new Vector2(-12.7119999F, -6.2750001F), new Vector2(-12.7119999F, -6.2750001F));
					builder.AddCubicBezier(new Vector2(-12.7119999F, -6.2750001F), new Vector2(2.04299998F, 10.3999996F), new Vector2(2.04299998F, 10.3999996F));
					builder.AddCubicBezier(new Vector2(2.04299998F, 10.3999996F), new Vector2(12.2939997F, 10.3959999F), new Vector2(12.2939997F, 10.3959999F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - Shape tree root for layer: mask
			// - - ShapeGroup: Group 1 Offset:<5.324, 8.058>
			CanvasGeometry Geometry_04()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(4.24800014F, 7.80499983F));
					builder.AddLine(new Vector2(-5.07399988F, 7.80800009F));
					builder.AddLine(new Vector2(-5.07399988F, -7.80800009F));
					builder.AddLine(new Vector2(4.24800014F, -7.81099987F));
					builder.AddLine(new Vector2(4.24800014F, 7.80499983F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - Shape tree root for layer: chimney 2
			// - - ShapeGroup: Group 1 Offset:<4.954, 4.857>
			CanvasGeometry Geometry_05()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(4.70300007F, 4.90600014F));
					builder.AddLine(new Vector2(4.704F, -4.60699987F));
					builder.AddLine(new Vector2(-0.296000004F, -4.60699987F));
					builder.AddLine(new Vector2(-4.704F, -4.60699987F));
					builder.AddLine(new Vector2(-4.704F, 2.39299989F));
					builder.AddLine(new Vector2(-2.99699998F, 4.90600014F));
					builder.AddLine(new Vector2(4.70300007F, 4.90600014F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - Shape tree root for layer: mask
			// - - ShapeGroup: Group 1 Offset:<2.815, 4.78>
			CanvasGeometry Geometry_06()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-8.09700012F, 4.52699995F));
					builder.AddLine(new Vector2(2.56599998F, 4.53000021F));
					builder.AddLine(new Vector2(2.56599998F, 3.97600007F));
					builder.AddLine(new Vector2(2.56599998F, -4.53000021F));
					builder.AddLine(new Vector2(-8.09700012F, -4.53299999F));
					builder.AddLine(new Vector2(-8.09700012F, 4.52699995F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_07()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(2.5F, 4.8920002F));
					builder.AddCubicBezier(new Vector2(2.5F, 4.8920002F), new Vector2(-2.5F, 0.26699999F), new Vector2(-2.5F, 0.26699999F));
					builder.AddCubicBezier(new Vector2(-2.5F, 0.26699999F), new Vector2(-2.5F, -4.625F), new Vector2(-2.5F, -4.625F));
					builder.AddCubicBezier(new Vector2(-2.5F, -4.625F), new Vector2(2.5F, -4.625F), new Vector2(2.5F, -4.625F));
					builder.AddCubicBezier(new Vector2(2.5F, -4.625F), new Vector2(2.5F, 4.80600023F), new Vector2(2.5F, 4.80600023F));
					builder.AddCubicBezier(new Vector2(2.5F, 4.80600023F), new Vector2(2.5F, 4.8920002F), new Vector2(2.5F, 4.8920002F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_08()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(1.727F, 4.89099979F));
					builder.AddCubicBezier(new Vector2(1.727F, 4.89099979F), new Vector2(-2.5F, 0.26699999F), new Vector2(-2.5F, 0.26699999F));
					builder.AddCubicBezier(new Vector2(-2.5F, 0.26699999F), new Vector2(-2.5F, -4.625F), new Vector2(-2.5F, -4.625F));
					builder.AddCubicBezier(new Vector2(-2.5F, -4.625F), new Vector2(1.92999995F, -4.62900019F), new Vector2(1.92999995F, -4.62900019F));
					builder.AddCubicBezier(new Vector2(1.92999995F, -4.62900019F), new Vector2(1.86300004F, 4.46899986F), new Vector2(1.86300004F, 4.46899986F));
					builder.AddCubicBezier(new Vector2(1.86300004F, 4.46899986F), new Vector2(1.727F, 4.89099979F), new Vector2(1.727F, 4.89099979F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_09()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(18F, 16.5F));
					builder.AddCubicBezier(new Vector2(18F, 16.5F), new Vector2(-18F, 16.5F), new Vector2(-18F, 16.5F));
					builder.AddCubicBezier(new Vector2(-18F, 16.5F), new Vector2(-18F, 0.5F), new Vector2(-18F, 0.5F));
					builder.AddCubicBezier(new Vector2(-18F, 0.5F), new Vector2(-1.14699996F, -16.507F), new Vector2(-1.14699996F, -16.507F));
					builder.AddCubicBezier(new Vector2(-1.14699996F, -16.507F), new Vector2(18F, 0.5F), new Vector2(18F, 0.5F));
					builder.AddCubicBezier(new Vector2(18F, 0.5F), new Vector2(18F, 16.5F), new Vector2(18F, 16.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_10()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(18F, 16.5F));
					builder.AddCubicBezier(new Vector2(18F, 16.5F), new Vector2(-20.4319992F, 16.5049992F), new Vector2(-20.4319992F, 16.5049992F));
					builder.AddCubicBezier(new Vector2(-20.4319992F, 16.5049992F), new Vector2(-20.4330006F, 0.486999989F), new Vector2(-20.4330006F, 0.486999989F));
					builder.AddCubicBezier(new Vector2(-20.4330006F, 0.486999989F), new Vector2(-1.14699996F, -16.507F), new Vector2(-1.14699996F, -16.507F));
					builder.AddCubicBezier(new Vector2(-1.14699996F, -16.507F), new Vector2(18F, 0.5F), new Vector2(18F, 0.5F));
					builder.AddCubicBezier(new Vector2(18F, 0.5F), new Vector2(18F, 16.5F), new Vector2(18F, 16.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_11()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-18F, -2.5F));
					builder.AddCubicBezier(new Vector2(-18F, -2.5F), new Vector2(18F, -2.5F), new Vector2(18F, -2.5F));
					builder.AddCubicBezier(new Vector2(18F, -2.5F), new Vector2(18F, 2.5F), new Vector2(18F, 2.5F));
					builder.AddCubicBezier(new Vector2(18F, 2.5F), new Vector2(-18F, 2.5F), new Vector2(-18F, 2.5F));
					builder.AddCubicBezier(new Vector2(-18F, 2.5F), new Vector2(-18F, -2.5F), new Vector2(-18F, -2.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_12()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-20.4309998F, -2.49699998F));
					builder.AddCubicBezier(new Vector2(-20.4309998F, -2.49699998F), new Vector2(18F, -2.5F), new Vector2(18F, -2.5F));
					builder.AddCubicBezier(new Vector2(18F, -2.5F), new Vector2(18F, 2.5F), new Vector2(18F, 2.5F));
					builder.AddCubicBezier(new Vector2(18F, 2.5F), new Vector2(-20.4279995F, 2.48699999F), new Vector2(-20.4279995F, 2.48699999F));
					builder.AddCubicBezier(new Vector2(-20.4279995F, 2.48699999F), new Vector2(-20.4309998F, -2.49699998F), new Vector2(-20.4309998F, -2.49699998F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_13()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(0F, -10.3999996F));
					builder.AddCubicBezier(new Vector2(0F, -10.3999996F), new Vector2(-20F, 8.19999981F), new Vector2(-20F, 8.19999981F));
					builder.AddCubicBezier(new Vector2(-20F, 8.19999981F), new Vector2(-18F, 10.3999996F), new Vector2(-18F, 10.3999996F));
					builder.AddCubicBezier(new Vector2(-18F, 10.3999996F), new Vector2(0F, -6.30000019F), new Vector2(0F, -6.30000019F));
					builder.AddCubicBezier(new Vector2(0F, -6.30000019F), new Vector2(18F, 10.3999996F), new Vector2(18F, 10.3999996F));
					builder.AddCubicBezier(new Vector2(18F, 10.3999996F), new Vector2(20F, 8.19999981F), new Vector2(20F, 8.19999981F));
					builder.AddCubicBezier(new Vector2(20F, 8.19999981F), new Vector2(0F, -10.3999996F), new Vector2(0F, -10.3999996F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_14()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-2.07500005F, -10.4049997F));
					builder.AddCubicBezier(new Vector2(-2.07500005F, -10.4049997F), new Vector2(-22.4379997F, 8.2130003F), new Vector2(-22.4379997F, 8.2130003F));
					builder.AddCubicBezier(new Vector2(-22.4379997F, 8.2130003F), new Vector2(-20.4379997F, 10.4130001F), new Vector2(-20.4379997F, 10.4130001F));
					builder.AddCubicBezier(new Vector2(-20.4379997F, 10.4130001F), new Vector2(-2.06500006F, -6.31699991F), new Vector2(-2.06500006F, -6.31699991F));
					builder.AddCubicBezier(new Vector2(-2.06500006F, -6.31699991F), new Vector2(18F, 10.3999996F), new Vector2(18F, 10.3999996F));
					builder.AddCubicBezier(new Vector2(18F, 10.3999996F), new Vector2(20F, 8.19999981F), new Vector2(20F, 8.19999981F));
					builder.AddCubicBezier(new Vector2(20F, 8.19999981F), new Vector2(-2.07500005F, -10.4049997F), new Vector2(-2.07500005F, -10.4049997F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - Layer aggregator
			// - - ShapeGroup: Group 3
			CanvasGeometry Geometry_15()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-6F, -8F));
					builder.AddLine(new Vector2(6F, -8F));
					builder.AddLine(new Vector2(6F, 8F));
					builder.AddLine(new Vector2(-6F, 8F));
					builder.AddLine(new Vector2(-6F, -8F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - Layer aggregator
			// - - ShapeGroup: Group 2
			CanvasGeometry Geometry_16()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(0F, -1.5F));
					builder.AddCubicBezier(new Vector2(-0.300000012F, -1.5F), new Vector2(-0.5F, -1.29999995F), new Vector2(-0.5F, -1F));
					builder.AddLine(new Vector2(-0.5F, 1F));
					builder.AddCubicBezier(new Vector2(-0.5F, 1.29999995F), new Vector2(-0.300000012F, 1.5F), new Vector2(0F, 1.5F));
					builder.AddCubicBezier(new Vector2(0.300000012F, 1.5F), new Vector2(0.5F, 1.29999995F), new Vector2(0.5F, 1F));
					builder.AddLine(new Vector2(0.5F, -1F));
					builder.AddCubicBezier(new Vector2(0.5F, -1.29999995F), new Vector2(0.300000012F, -1.5F), new Vector2(0F, -1.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - Layer aggregator
			// - - ShapeGroup: Group 1
			CanvasGeometry Geometry_17()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-3F, -3F));
					builder.AddLine(new Vector2(3F, -3F));
					builder.AddLine(new Vector2(3F, 3F));
					builder.AddLine(new Vector2(-3F, 3F));
					builder.AddLine(new Vector2(-3F, -3F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 3
			CompositionColorBrush ColorBrush_AlmostChocolate_FFD74314()
			{
				return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xD7, 0x43, 0x14));
			}

			CompositionColorBrush ColorBrush_AlmostFirebrick_FFB71C1C()
			{
				return (_colorBrush_AlmostFirebrick_FFB71C1C == null)
					? _colorBrush_AlmostFirebrick_FFB71C1C = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xB7, 0x1C, 0x1C))
					: _colorBrush_AlmostFirebrick_FFB71C1C;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 6 Offset:<20.25, 18.45>
			CompositionColorBrush ColorBrush_AlmostLavender_FFE8EAF6()
			{
				return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xE8, 0xEA, 0xF6));
			}

			CompositionColorBrush ColorBrush_AlmostLightGreen_FF5AFF61()
			{
				return (_colorBrush_AlmostLightGreen_FF5AFF61 == null)
					? _colorBrush_AlmostLightGreen_FF5AFF61 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x5A, 0xFF, 0x61))
					: _colorBrush_AlmostLightGreen_FF5AFF61;
			}

			CompositionColorBrush ColorBrush_AlmostLightSteelBlue_FFC5C9E9()
			{
				return (_colorBrush_AlmostLightSteelBlue_FFC5C9E9 == null)
					? _colorBrush_AlmostLightSteelBlue_FFC5C9E9 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xC5, 0xC9, 0xE9))
					: _colorBrush_AlmostLightSteelBlue_FFC5C9E9;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 2
			CompositionColorBrush ColorBrush_AlmostSalmon_FFFF8964()
			{
				return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0x89, 0x64));
			}

			// - - Layer aggregator
			// ShapeGroup: Group 1
			CompositionColorBrush ColorBrush_AlmostTeal_FF01569B()
			{
				return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x01, 0x56, 0x9B));
			}

			// Shape tree root for layer: mask
			CompositionContainerShape ContainerShape_0()
			{
				if (_containerShape_0 != null) { return _containerShape_0; }
				var result = _containerShape_0 = _c.CreateContainerShape();
				// ShapeGroup: Group 1 Offset:<5.324, 8.058>
				result.Shapes.Add(SpriteShape_02());
				return result;
			}

			// Shape tree root for layer: chimney 2
			CompositionContainerShape ContainerShape_1()
			{
				if (_containerShape_1 != null) { return _containerShape_1; }
				var result = _containerShape_1 = _c.CreateContainerShape();
				// ShapeGroup: Group 1 Offset:<4.954, 4.857>
				result.Shapes.Add(SpriteShape_03());
				return result;
			}

			// Shape tree root for layer: mask
			CompositionContainerShape ContainerShape_2()
			{
				if (_containerShape_2 != null) { return _containerShape_2; }
				var result = _containerShape_2 = _c.CreateContainerShape();
				result.CenterPoint = new Vector2(2.81500006F, 4.78000021F);
				result.Scale = new Vector2(1F, 1.12416995F);
				// ShapeGroup: Group 1 Offset:<2.815, 4.78>
				result.Shapes.Add(SpriteShape_04());
				return result;
			}

			// Layer aggregator
			CompositionContainerShape ContainerShape_3()
			{
				if (_containerShape_3 != null) { return _containerShape_3; }
				var result = _containerShape_3 = _c.CreateContainerShape();
				// ShapeGroup: Group 1 Offset:<2.75, 4.875>
				result.Shapes.Add(SpriteShape_05());
				return result;
			}

			// Layer aggregator
			CompositionContainerShape ContainerShape_4()
			{
				if (_containerShape_4 != null) { return _containerShape_4; }
				var result = _containerShape_4 = _c.CreateContainerShape();
				result.CenterPoint = new Vector2(2.18799996F, 20.1000004F);
				result.Offset = new Vector2(3.75000024F, 4.04999924F);
				var shapes = result.Shapes;
				// ShapeGroup: Group 6 Offset:<20.25, 18.45>
				shapes.Add(SpriteShape_06());
				// ShapeGroup: Group 5 Offset:<20.25, 37.45>
				shapes.Add(SpriteShape_07());
				// ShapeGroup: Group 4 Offset:<20.25, 10.65>
				shapes.Add(SpriteShape_08());
				// ShapeGroup: Group 3
				shapes.Add(SpriteShape_09());
				// ShapeGroup: Group 2
				shapes.Add(SpriteShape_10());
				// ShapeGroup: Group 1
				shapes.Add(SpriteShape_11());
				return result;
			}

			CompositionEffectBrush EffectBrush_0()
			{
				var effectFactory = EffectFactory();
				var result = effectFactory.CreateBrush();
				result.SetSourceParameter("destination", SurfaceBrush_0());
				result.SetSourceParameter("source", SurfaceBrush_1());
				return result;
			}

			CompositionEffectBrush EffectBrush_1()
			{
				var effectFactory = EffectFactory();
				var result = effectFactory.CreateBrush();
				result.SetSourceParameter("destination", SurfaceBrush_2());
				result.SetSourceParameter("source", SurfaceBrush_3());
				return result;
			}

			CompositionEffectFactory EffectFactory()
			{
				var compositeEffect = new CompositeEffect();
				compositeEffect.Mode = CanvasComposite.DestinationOut;
				compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
				compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
				if (_effectFactory != null) { return _effectFactory; }
				var result = _effectFactory = _c.CreateEffectFactory(compositeEffect);
				return result;
			}

			CompositionPath Path_00()
			{
				if (_path_00 != null) { return _path_00; }
				var result = _path_00 = new CompositionPath(Geometry_00());
				return result;
			}

			CompositionPath Path_01()
			{
				if (_path_01 != null) { return _path_01; }
				var result = _path_01 = new CompositionPath(Geometry_01());
				return result;
			}

			CompositionPath Path_02()
			{
				if (_path_02 != null) { return _path_02; }
				var result = _path_02 = new CompositionPath(Geometry_02());
				return result;
			}

			CompositionPath Path_03()
			{
				if (_path_03 != null) { return _path_03; }
				var result = _path_03 = new CompositionPath(Geometry_03());
				return result;
			}

			CompositionPath Path_04()
			{
				if (_path_04 != null) { return _path_04; }
				var result = _path_04 = new CompositionPath(Geometry_07());
				return result;
			}

			CompositionPath Path_05()
			{
				if (_path_05 != null) { return _path_05; }
				var result = _path_05 = new CompositionPath(Geometry_08());
				return result;
			}

			CompositionPath Path_06()
			{
				if (_path_06 != null) { return _path_06; }
				var result = _path_06 = new CompositionPath(Geometry_09());
				return result;
			}

			CompositionPath Path_07()
			{
				if (_path_07 != null) { return _path_07; }
				var result = _path_07 = new CompositionPath(Geometry_10());
				return result;
			}

			CompositionPath Path_08()
			{
				if (_path_08 != null) { return _path_08; }
				var result = _path_08 = new CompositionPath(Geometry_11());
				return result;
			}

			CompositionPath Path_09()
			{
				if (_path_09 != null) { return _path_09; }
				var result = _path_09 = new CompositionPath(Geometry_12());
				return result;
			}

			CompositionPath Path_10()
			{
				if (_path_10 != null) { return _path_10; }
				var result = _path_10 = new CompositionPath(Geometry_13());
				return result;
			}

			CompositionPath Path_11()
			{
				if (_path_11 != null) { return _path_11; }
				var result = _path_11 = new CompositionPath(Geometry_14());
				return result;
			}

			// - Shape tree root for layer: home 2 
			// Offset:<5.75, 5.75>
			CompositionPathGeometry PathGeometry_00()
			{
				if (_pathGeometry_00 != null) { return _pathGeometry_00; }
				var result = _pathGeometry_00 = _c.CreatePathGeometry();
				return result;
			}

			// - Shape tree root for layer: roof 
			// Offset:<19.631, 4.05>
			CompositionPathGeometry PathGeometry_01()
			{
				if (_pathGeometry_01 != null) { return _pathGeometry_01; }
				var result = _pathGeometry_01 = _c.CreatePathGeometry();
				return result;
			}

			// - - Shape tree root for layer: mask
			// ShapeGroup: Group 1 Offset:<5.324, 8.058>
			CompositionPathGeometry PathGeometry_02()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_04()));
			}

			// - - Shape tree root for layer: chimney 2
			// ShapeGroup: Group 1 Offset:<4.954, 4.857>
			CompositionPathGeometry PathGeometry_03()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_05()));
			}

			// - - Shape tree root for layer: mask
			// ShapeGroup: Group 1 Offset:<2.815, 4.78>
			CompositionPathGeometry PathGeometry_04()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_06()));
			}

			// - - Layer aggregator
			// ShapeGroup: Group 1 Offset:<2.75, 4.875>
			CompositionPathGeometry PathGeometry_05()
			{
				if (_pathGeometry_05 != null) { return _pathGeometry_05; }
				var result = _pathGeometry_05 = _c.CreatePathGeometry();
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 6 Offset:<20.25, 18.45>
			CompositionPathGeometry PathGeometry_06()
			{
				if (_pathGeometry_06 != null) { return _pathGeometry_06; }
				var result = _pathGeometry_06 = _c.CreatePathGeometry();
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 5 Offset:<20.25, 37.45>
			CompositionPathGeometry PathGeometry_07()
			{
				if (_pathGeometry_07 != null) { return _pathGeometry_07; }
				var result = _pathGeometry_07 = _c.CreatePathGeometry();
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 4 Offset:<20.25, 10.65>
			CompositionPathGeometry PathGeometry_08()
			{
				if (_pathGeometry_08 != null) { return _pathGeometry_08; }
				var result = _pathGeometry_08 = _c.CreatePathGeometry();
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 3
			CompositionPathGeometry PathGeometry_09()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_15()));
			}

			// - - Layer aggregator
			// ShapeGroup: Group 2
			CompositionPathGeometry PathGeometry_10()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_16()));
			}

			// - - Layer aggregator
			// ShapeGroup: Group 1
			CompositionPathGeometry PathGeometry_11()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_17()));
			}

			// Shape tree root for layer: home 2 
			// Path 1
			CompositionSpriteShape SpriteShape_00()
			{
				// Offset:<24, 25>
				var geometry = PathGeometry_00();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 25F), ColorBrush_AlmostLightSteelBlue_FFC5C9E9()); ;
				return result;
			}

			// Shape tree root for layer: roof 
			// Path 1
			CompositionSpriteShape SpriteShape_01()
			{
				// Offset:<31.718, 14.7>
				var geometry = PathGeometry_01();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 31.7180004F, 14.6999998F), ColorBrush_AlmostFirebrick_FFB71C1C()); ;
				return result;
			}

			// - Shape tree root for layer: mask
			// Path 1
			CompositionSpriteShape SpriteShape_02()
			{
				// Offset:<5.324, 8.058>
				var geometry = PathGeometry_02();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 5.32399988F, 8.05799961F), ColorBrush_AlmostLightGreen_FF5AFF61()); ;
				return result;
			}

			// - Shape tree root for layer: chimney 2
			// Path 1
			CompositionSpriteShape SpriteShape_03()
			{
				// Offset:<4.954, 4.857>
				var geometry = PathGeometry_03();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 4.954F, 4.85699987F), ColorBrush_AlmostLightSteelBlue_FFC5C9E9()); ;
				return result;
			}

			// - Shape tree root for layer: mask
			// Path 1
			CompositionSpriteShape SpriteShape_04()
			{
				// Offset:<2.815, 4.78>
				var geometry = PathGeometry_04();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 2.81500006F, 4.78000021F), ColorBrush_AlmostLightGreen_FF5AFF61()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_05()
			{
				// Offset:<2.75, 4.875>
				var geometry = PathGeometry_05();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 2.75F, 4.875F), ColorBrush_AlmostLightSteelBlue_FFC5C9E9()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_06()
			{
				// Offset:<20.25, 18.45>
				var geometry = PathGeometry_06();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 20.25F, 18.4500008F), ColorBrush_AlmostLavender_FFE8EAF6()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_07()
			{
				// Offset:<20.25, 37.45>
				var geometry = PathGeometry_07();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 20.25F, 37.4500008F), ColorBrush_AlmostLightSteelBlue_FFC5C9E9()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_08()
			{
				// Offset:<20.25, 10.65>
				var geometry = PathGeometry_08();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 20.25F, 10.6499996F), ColorBrush_AlmostFirebrick_FFB71C1C()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_09()
			{
				if (_spriteShape_09 != null) { return _spriteShape_09; }
				var result = _spriteShape_09 = _c.CreateSpriteShape(PathGeometry_09());
				result.FillBrush = ColorBrush_AlmostChocolate_FFD74314();
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_10()
			{
				if (_spriteShape_10 != null) { return _spriteShape_10; }
				var result = _spriteShape_10 = _c.CreateSpriteShape(PathGeometry_10());
				result.FillBrush = ColorBrush_AlmostSalmon_FFFF8964();
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_11()
			{
				if (_spriteShape_11 != null) { return _spriteShape_11; }
				var result = _spriteShape_11 = _c.CreateSpriteShape(PathGeometry_11());
				result.FillBrush = ColorBrush_AlmostTeal_FF01569B();
				return result;
			}

			CompositionSurfaceBrush SurfaceBrush_0()
			{
				return _c.CreateSurfaceBrush(VisualSurface_0());
			}

			CompositionSurfaceBrush SurfaceBrush_1()
			{
				return _c.CreateSurfaceBrush(VisualSurface_1());
			}

			CompositionSurfaceBrush SurfaceBrush_2()
			{
				return _c.CreateSurfaceBrush(VisualSurface_2());
			}

			CompositionSurfaceBrush SurfaceBrush_3()
			{
				return _c.CreateSurfaceBrush(VisualSurface_3());
			}

			CompositionVisualSurface VisualSurface_0()
			{
				var result = _c.CreateVisualSurface();
				result.SourceVisual = ContainerVisual_0();
				result.SourceSize = new Vector2(48F, 48F);
				return result;
			}

			CompositionVisualSurface VisualSurface_1()
			{
				var result = _c.CreateVisualSurface();
				result.SourceVisual = ContainerVisual_1();
				result.SourceSize = new Vector2(48F, 48F);
				return result;
			}

			CompositionVisualSurface VisualSurface_2()
			{
				var result = _c.CreateVisualSurface();
				result.SourceVisual = ContainerVisual_2();
				result.SourceSize = new Vector2(48F, 48F);
				return result;
			}

			CompositionVisualSurface VisualSurface_3()
			{
				var result = _c.CreateVisualSurface();
				result.SourceVisual = ContainerVisual_3();
				result.SourceSize = new Vector2(48F, 48F);
				return result;
			}

			ContainerVisual ContainerVisual_0()
			{
				var result = _c.CreateContainerVisual();
				result.BorderMode = CompositionBorderMode.Soft;
				// Shape tree root for layer: roof
				result.Children.InsertAtTop(ShapeVisual_1());
				return result;
			}

			ContainerVisual ContainerVisual_1()
			{
				var result = _c.CreateContainerVisual();
				result.BorderMode = CompositionBorderMode.Soft;
				// Shape tree root for layer: mask
				result.Children.InsertAtTop(ShapeVisual_2());
				return result;
			}

			ContainerVisual ContainerVisual_2()
			{
				var result = _c.CreateContainerVisual();
				result.BorderMode = CompositionBorderMode.Soft;
				// Shape tree root for layer: chimney 2
				result.Children.InsertAtTop(ShapeVisual_3());
				return result;
			}

			ContainerVisual ContainerVisual_3()
			{
				var result = _c.CreateContainerVisual();
				result.BorderMode = CompositionBorderMode.Soft;
				// Shape tree root for layer: mask
				result.Children.InsertAtTop(ShapeVisual_4());
				return result;
			}

			// The root of the composition.
			ContainerVisual Root()
			{
				if (_root != null) { return _root; }
				var result = _root = _c.CreateContainerVisual();
				var propertySet = result.Properties;
				propertySet.InsertScalar("Progress", 0F);
				propertySet.InsertScalar("t0", 0F);
				var children = result.Children;
				// Shape tree root for layer: home 2
				children.InsertAtTop(ShapeVisual_0());
				children.InsertAtTop(SpriteVisual_0());
				children.InsertAtTop(SpriteVisual_1());
				// Layer aggregator
				children.InsertAtTop(ShapeVisual_5());
				return result;
			}

			CubicBezierEasingFunction CubicBezierEasingFunction_0()
			{
				return (_cubicBezierEasingFunction_0 == null)
					? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
					: _cubicBezierEasingFunction_0;
			}

			CubicBezierEasingFunction CubicBezierEasingFunction_1()
			{
				return (_cubicBezierEasingFunction_1 == null)
					? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.333000004F), new Vector2(0.666999996F, 0.666999996F))
					: _cubicBezierEasingFunction_1;
			}

			// - - Shape tree root for layer: home 2 
			// -  Offset:<5.75, 5.75>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_0()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_00(), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, Path_00(), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, Path_01(), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, Path_01(), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, Path_00(), CubicBezierEasingFunction_0());
				return result;
			}

			// - - Shape tree root for layer: roof 
			// -  Offset:<19.631, 4.05>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_1()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_02(), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, Path_02(), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, Path_03(), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, Path_03(), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, Path_02(), CubicBezierEasingFunction_0());
				return result;
			}

			// - - - Layer aggregator
			// - ShapeGroup: Group 1 Offset:<2.75, 4.875>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_2()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_04(), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, Path_04(), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, Path_05(), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, Path_05(), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, Path_04(), CubicBezierEasingFunction_0());
				return result;
			}

			// - - - Layer aggregator
			// - ShapeGroup: Group 6 Offset:<20.25, 18.45>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_3()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_06(), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, Path_06(), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, Path_07(), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, Path_07(), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, Path_06(), CubicBezierEasingFunction_0());
				return result;
			}

			// - - - Layer aggregator
			// - ShapeGroup: Group 5 Offset:<20.25, 37.45>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_4()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_08(), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, Path_08(), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, Path_09(), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, Path_09(), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, Path_08(), CubicBezierEasingFunction_0());
				return result;
			}

			// - - - Layer aggregator
			// - ShapeGroup: Group 4 Offset:<20.25, 10.65>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_5()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_10(), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, Path_10(), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, Path_11(), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, Path_11(), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, Path_10(), CubicBezierEasingFunction_0());
				return result;
			}

			ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
			{
				// Frame 12.
				var result = CreateScalarKeyFrameAnimation(0.428571463F, 0F, StepThenHoldEasingFunction());
				result.SetReferenceParameter("_", _root);
				// Frame 16.
				result.InsertKeyFrame(0.571428537F, 1F, CubicBezierEasingFunction_0());
				return result;
			}

			// Shape tree root for layer: home 2
			ShapeVisual ShapeVisual_0()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(48F, 48F);
				// Offset:<5.75, 5.75>
				result.Shapes.Add(SpriteShape_00());
				return result;
			}

			// Shape tree root for layer: roof
			ShapeVisual ShapeVisual_1()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(48F, 48F);
				// Offset:<19.631, 4.05>
				result.Shapes.Add(SpriteShape_01());
				return result;
			}

			// Shape tree root for layer: mask
			ShapeVisual ShapeVisual_2()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(48F, 48F);
				result.Shapes.Add(ContainerShape_0());
				return result;
			}

			// Shape tree root for layer: chimney 2
			ShapeVisual ShapeVisual_3()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(48F, 48F);
				result.Shapes.Add(ContainerShape_1());
				return result;
			}

			// Shape tree root for layer: mask
			ShapeVisual ShapeVisual_4()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(48F, 48F);
				result.Shapes.Add(ContainerShape_2());
				return result;
			}

			// Layer aggregator
			ShapeVisual ShapeVisual_5()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(48F, 48F);
				var shapes = result.Shapes;
				shapes.Add(ContainerShape_3());
				shapes.Add(ContainerShape_4());
				return result;
			}

			SpriteVisual SpriteVisual_0()
			{
				var result = _c.CreateSpriteVisual();
				result.Size = new Vector2(48F, 48F);
				result.Brush = EffectBrush_0();
				return result;
			}

			SpriteVisual SpriteVisual_1()
			{
				var result = _c.CreateSpriteVisual();
				result.Size = new Vector2(48F, 48F);
				result.Brush = EffectBrush_1();
				return result;
			}

			StepEasingFunction HoldThenStepEasingFunction()
			{
				if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
				var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
				result.IsFinalStepSingleFrame = true;
				return result;
			}

			StepEasingFunction StepThenHoldEasingFunction()
			{
				if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
				var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
				result.IsInitialStepSingleFrame = true;
				return result;
			}

			// - Shape tree root for layer: mask
			// Offset
			Vector2KeyFrameAnimation OffsetVector2Animation_0()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(14.4289999F, 1.477F), StepThenHoldEasingFunction());
				result.SetReferenceParameter("_", _root);
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, new Vector2(14.4289999F, 1.477F), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector2(9.43299961F, 1.477F), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertExpressionKeyFrame(0.571428537F, "Pow(1-_.t0,3)*Vector2(9.433,1.477)+(3*Square(1-_.t0)*_.t0*Vector2(8.599999,1.477))+(3*(1-_.t0)*Square(_.t0)*Vector2(8.599999,1.477))+(Pow(_.t0,3)*Vector2(9.433,1.477))", StepThenHoldEasingFunction());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new Vector2(9.43299961F, 1.477F), StepThenHoldEasingFunction());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, new Vector2(14.4289999F, 1.477F), CubicBezierEasingFunction_0());
				return result;
			}

			// - Shape tree root for layer: chimney 2
			// Offset
			Vector2KeyFrameAnimation OffsetVector2Animation_1()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(29.3419991F, 8.7510004F), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, new Vector2(29.3419991F, 8.7510004F), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector2(28.3110008F, 8.7510004F), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new Vector2(28.3110008F, 8.7510004F), CubicBezierEasingFunction_1());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, new Vector2(29.3419991F, 8.7510004F), CubicBezierEasingFunction_0());
				return result;
			}

			// - Shape tree root for layer: mask
			// Offset
			Vector2KeyFrameAnimation OffsetVector2Animation_2()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(33.6189995F, 8.75F), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, new Vector2(33.6189995F, 8.75F), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector2(29.8460007F, 8.75F), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new Vector2(29.8460007F, 8.75F), CubicBezierEasingFunction_1());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, new Vector2(33.6189995F, 8.75F), CubicBezierEasingFunction_0());
				return result;
			}

			// - Layer aggregator
			// Offset
			Vector2KeyFrameAnimation OffsetVector2Animation_3()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(33.75F, 8.75F), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, new Vector2(33.75F, 8.75F), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector2(30.7970009F, 8.75F), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new Vector2(30.7970009F, 8.75F), CubicBezierEasingFunction_1());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, new Vector2(33.75F, 8.75F), CubicBezierEasingFunction_0());
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 3
			// Offset
			Vector2KeyFrameAnimation OffsetVector2Animation_4()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(20.25F, 31.9500008F), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, new Vector2(20.25F, 31.9500008F), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector2(17.25F, 31.9500008F), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new Vector2(17.25F, 31.9500008F), CubicBezierEasingFunction_1());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, new Vector2(20.25F, 31.9500008F), CubicBezierEasingFunction_0());
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 2
			// Offset
			Vector2KeyFrameAnimation OffsetVector2Animation_5()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(22.5F, 32.9500008F), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, new Vector2(22.5F, 32.9500008F), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector2(20.25F, 32.9500008F), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new Vector2(20.25F, 32.9500008F), CubicBezierEasingFunction_1());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, new Vector2(22.5F, 32.9500008F), CubicBezierEasingFunction_0());
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 1
			// Offset
			Vector2KeyFrameAnimation OffsetVector2Animation_6()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(20.25F, 15.9499998F), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, new Vector2(20.25F, 15.9499998F), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector2(16.8129997F, 15.9499998F), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new Vector2(16.8129997F, 15.9499998F), CubicBezierEasingFunction_1());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, new Vector2(20.25F, 15.9499998F), CubicBezierEasingFunction_0());
				return result;
			}

			// - Layer aggregator
			// Scale
			Vector2KeyFrameAnimation ScaleVector2Animation()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, new Vector2(0.817189991F, 1F), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new Vector2(0.817189991F, 1F), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
				return result;
			}

			internal Home_AnimatedVisual(
				Compositor compositor
				)
			{
				_c = compositor;
				_reusableExpressionAnimation = compositor.CreateExpressionAnimation();
				Root();
			}

			public Visual RootVisual => _root;
			public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
			public Vector2 Size => new Vector2(48F, 48F);
			void IDisposable.Dispose() => _root?.Dispose();

			public void CreateAnimations()
			{
				_containerShape_0.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
				_containerShape_1.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
				_containerShape_2.StartAnimation("Offset", OffsetVector2Animation_2(), AnimationController_0());
				_containerShape_3.StartAnimation("Offset", OffsetVector2Animation_3(), AnimationController_0());
				_containerShape_4.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
				_pathGeometry_00.StartAnimation("Path", PathKeyFrameAnimation_0(), AnimationController_0());
				_pathGeometry_01.StartAnimation("Path", PathKeyFrameAnimation_1(), AnimationController_0());
				_pathGeometry_05.StartAnimation("Path", PathKeyFrameAnimation_2(), AnimationController_0());
				_pathGeometry_06.StartAnimation("Path", PathKeyFrameAnimation_3(), AnimationController_0());
				_pathGeometry_07.StartAnimation("Path", PathKeyFrameAnimation_4(), AnimationController_0());
				_pathGeometry_08.StartAnimation("Path", PathKeyFrameAnimation_5(), AnimationController_0());
				_spriteShape_09.StartAnimation("Offset", OffsetVector2Animation_4(), AnimationController_0());
				_spriteShape_10.StartAnimation("Offset", OffsetVector2Animation_5(), AnimationController_0());
				_spriteShape_11.StartAnimation("Offset", OffsetVector2Animation_6(), AnimationController_0());
				_root.Properties.StartAnimation("t0", t0ScalarAnimation_0_to_1(), AnimationController_0());
			}

			public void DestroyAnimations()
			{
				_containerShape_0.StopAnimation("Offset");
				_containerShape_1.StopAnimation("Offset");
				_containerShape_2.StopAnimation("Offset");
				_containerShape_3.StopAnimation("Offset");
				_containerShape_4.StopAnimation("Scale");
				_pathGeometry_00.StopAnimation("Path");
				_pathGeometry_01.StopAnimation("Path");
				_pathGeometry_05.StopAnimation("Path");
				_pathGeometry_06.StopAnimation("Path");
				_pathGeometry_07.StopAnimation("Path");
				_pathGeometry_08.StopAnimation("Path");
				_spriteShape_09.StopAnimation("Offset");
				_spriteShape_10.StopAnimation("Offset");
				_spriteShape_11.StopAnimation("Offset");
				_root.Properties.StopAnimation("t0");
			}

		}
	}
}
