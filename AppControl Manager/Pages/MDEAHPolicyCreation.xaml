<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.MDEAHPolicyCreation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:intelgathering="using:AppControlManager.IntelGathering"
    xmlns:customUI="using:AppControlManager.CustomUIElements"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:animatedvisuals="using:AnimatedVisuals"
    xmlns:MSGraph="using:AppControlManager.MicrosoftGraph"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI"
    FlowDirection="{x:Bind ViewModel.AppSettings.ApplicationGlobalFlowDirection, Mode=OneWay}">


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <controls:WrapPanel Style="{StaticResource PageHeaderWrapPanelStyle}">

            <TextBlock x:Uid="MDEAHPolicyCreationPageTitle" TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}" />

            <customUI:GuideButton NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Create-Policy-From-MDE-Advanced-Hunting" />

        </controls:WrapPanel>

        <customUI:InfoBarV2 Grid.Row="1"
                 IsOpen="{x:Bind ViewModel.MainInfoBarIsOpen, Mode=TwoWay}"
                 Message="{x:Bind ViewModel.MainInfoBarMessage, Mode=OneWay}"
                 Severity="{x:Bind ViewModel.MainInfoBarSeverity, Mode=OneWay}"
                 IsClosable="{x:Bind ViewModel.MainInfoBarIsClosable, Mode=OneWay}">
            <customUI:InfoBarV2.ActionButton>
                <DropDownButton x:Uid="AdditionalActionsDropDownButton"
                                Visibility="{x:Bind ViewModel.OpenInPolicyEditorInfoBarActionButtonVisibility, Mode=OneWay}">
                    <DropDownButton.Content>
                        <StackPanel Orientation="Horizontal" Spacing="5">
                            <FontIcon Glyph="&#xE712;" Foreground="Chartreuse" />
                            <TextBlock x:Uid="AdditionalActionsTextBlock" />
                        </StackPanel>
                    </DropDownButton.Content>
                    <DropDownButton.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <MenuFlyoutItem x:Uid="OpenInPolicyEditorMenuFlyoutItem"
                                            Icon="Edit"
                                            Click="{x:Bind ViewModel.OpenInPolicyEditor}"/>
                            <MenuFlyoutItem x:Uid="OpenTheFileMenuFlyoutItem"
                                            Icon="OpenWith"
                                            Click="{x:Bind ViewModel.OpenInDefaultFileHandler_Internal}"/>
                        </MenuFlyout>
                    </DropDownButton.Flyout>
                </DropDownButton>
            </customUI:InfoBarV2.ActionButton>
        </customUI:InfoBarV2>

        <controls:WrapPanel Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

            <ProgressRing Visibility="{x:Bind ViewModel.ScanLogsProgressRingVisibility, Mode=OneWay}"
                          IsActive="{x:Bind ViewModel.ScanLogsProgressRingIsActive, Mode=OneWay}"/>

            <SelectorBar x:Name="MenuSelectorBar"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center">
                <SelectorBarItem Tag="Local" x:Uid="LocalTextBlock"/>
                <SelectorBarItem Tag="Cloud" x:Uid="CloudTextBlock"/>
                <SelectorBarItem Tag="Create" x:Uid="CreateTextBlock"/>
            </SelectorBar>

            <!-- Total chip -->
            <Border CornerRadius="8"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    Padding="10,6"
                    BorderThickness="1"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    Background="{ThemeResource CardBackgroundFillColorDefaultBrush}">
                <StackPanel Orientation="Horizontal" Spacing="6" VerticalAlignment="Center">
                    <FontIcon Glyph="&#xE8A9;" Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}" />
                    <TextBlock VerticalAlignment="Center">
                        <Run x:Uid="TotalText" />
                        <Run Text="{x:Bind ViewModel.FileIdentities.Count, Mode=OneWay}" FontWeight="SemiBold" />
                    </TextBlock>
                </StackPanel>
            </Border>

            <TextBox x:Uid="SearchBoxTextBox"
                     Text="{x:Bind ViewModel.SearchBoxText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     VerticalAlignment="Center"
                     VerticalContentAlignment="Center" />

            <CalendarDatePicker x:Uid="FilterByDateCalendarDatePicker"
                                IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                Date="{x:Bind ViewModel.DatePickerDate, Mode=TwoWay}"/>

        </controls:WrapPanel>

        <Expander Grid.Row="3" HorizontalAlignment="Stretch" Margin="0,10,0,10">
            <Expander.Header>
                <Grid Padding="8">

                    <Border Visibility="{x:Bind ViewModel.IsLocalSelected, Mode=OneWay}">

                        <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                            <!-- Scan MDE Advanced Hunting button -->
                            <Button IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                    x:Uid="ScanMDEAHDataButton"
                                    Style="{StaticResource AccentButtonStyle}"
                                    Click="{x:Bind ViewModel.ScanLogs_Click}" >
                                <Button.ContentTemplate>
                                    <DataTemplate x:DataType="x:String">
                                        <StackPanel Orientation="Horizontal" Spacing="8">
                                            <FontIcon Glyph="&#xEE6F;" />
                                            <TextBlock Text="{x:Bind}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Button.ContentTemplate>
                            </Button>

                            <customUI:ButtonV2 x:Uid="BrowseForMDELogsButton"
                                               ObservedData="{x:Bind ViewModel.MDEAdvancedHuntingLogs, Mode=OneWay}"
                                   IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                   Click="{x:Bind ViewModel.BrowseForLogs_Click}">

                                <customUI:ButtonV2.Flyout>
                                    <Flyout>

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="{x:Bind ViewModel.BrowseForLogs_Flyout_Clear_Click}" />

                                            <TextBlock x:Uid="ViewSelectedFilesTextBlock" TextWrapping="WrapWholeWords" />

                                            <TextBox Text="{x:Bind ViewModel.MDEAdvancedHuntingLogs, Mode=OneWay}"
                                         TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                         MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </customUI:ButtonV2.Flyout>

                                <customUI:ButtonV2.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon Glyph="&#xEC50;" />
                                        <TextBlock x:Uid="BrowseForMDELogsTextBlock" Margin="5,0,0,0" />
                                    </StackPanel>
                                </customUI:ButtonV2.Content>
                            </customUI:ButtonV2>


                        </controls:WrapPanel>
                    </Border>

                    <Border Visibility="{x:Bind ViewModel.IsCloudSelected, Mode=OneWay}">

                        <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                            <customUI:GraphAuthPanel Host="{x:Bind ViewModel}" />

                            <Button x:Uid="DeviceNameButton"
                                    IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}">
                                <Button.ContentTemplate>
                                    <DataTemplate x:DataType="x:String">
                                        <StackPanel Orientation="Horizontal" Spacing="8">
                                            <FontIcon Glyph="&#xE975;" FontSize="16"/>
                                            <TextBlock Text="{x:Bind}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Button.ContentTemplate>
                                <Button.Flyout>
                                    <Flyout>
                                        <Flyout.FlyoutPresenterStyle>
                                            <Style TargetType="FlyoutPresenter">
                                                <Setter Property="CornerRadius" Value="8" />
                                                <Setter Property="MaxWidth" Value="1234" />
                                            </Style>
                                        </Flyout.FlyoutPresenterStyle>

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="3" VerticalSpacing="8">
                                            <TextBox Width="300"
                                                     x:Uid="DeviceNameHeaderTextBlock"
                                                     Text="{x:Bind ViewModel.DeviceNameTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </controls:WrapPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                            <Button x:Uid="RetrieveTheLogsButton"
                                    IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                    Click="{x:Bind ViewModel.RetrieveTheLogsButton_Click}">
                                <Button.ContentTemplate>
                                    <DataTemplate x:DataType="x:String">
                                        <StackPanel Orientation="Horizontal" Spacing="8">
                                            <FontIcon Glyph="&#xE9F5;" FontSize="16"/>
                                            <TextBlock Text="{x:Bind}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Button.ContentTemplate>
                            </Button>

                            <Button x:Uid="MDEAHQueryExamplesButton">
                                <Button.ContentTemplate>
                                    <DataTemplate x:DataType="x:String">
                                        <StackPanel Orientation="Horizontal" Spacing="8">
                                            <FontIcon Glyph="&#xE82D;" FontSize="16"/>
                                            <TextBlock Text="{x:Bind}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Button.ContentTemplate>
                                <Button.Flyout>
                                    <Flyout>
                                        <ListView ItemsSource="{x:Bind ViewModel.AdvancedHuntingQueries}"
                                                  SelectionMode="None">
                                            <ListView.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Vertical" Width="300"/>
                                                </ItemsPanelTemplate>
                                            </ListView.ItemsPanel>

                                            <ListView.ItemTemplate>
                                                <DataTemplate x:DataType="local:MDEAdvancedHuntingQueriesForMDEAHPolicyCreationPage">
                                                    <StackPanel Margin="0,0,0,12" HorizontalAlignment="Center">
                                                        <!-- Title -->
                                                        <TextBlock
                                                            Text="{x:Bind QueryTitle}"
                                                            TextWrapping="WrapWholeWords"
                                                            FontWeight="Bold"
                                                            HorizontalAlignment="Center"
                                                            FontSize="16"
                                                            Margin="0,5,0,5"/>

                                                        <!-- Copy Button -->
                                                        <!-- The button's content is a Grid containing two TextBlocks: one for the normal text and one for the copied state -->
                                                        <Button x:Name="CopyButton" Click="CopyButton_Click" HorizontalAlignment="Center" Margin="0,0,0,5">
                                                            <Grid>
                                                                <TextBlock x:Name="NormalText" Text="Copy" Opacity="1"/>
                                                                <TextBlock x:Name="CopiedText" Text="Copied" Opacity="0"/>
                                                            </Grid>
                                                        </Button>

                                                        <!-- Query Text -->
                                                        <TextBox Text="{x:Bind Query}" IsReadOnly="True" TextWrapping="Wrap"
                                                                 HorizontalAlignment="Center"
                                                                 Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"/>

                                                    </StackPanel>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>

                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                        </controls:WrapPanel>

                    </Border>

                    <Border Visibility="{x:Bind ViewModel.IsCreateSelected, Mode=OneWay}">

                        <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">


                            <SplitButton IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}"
                                         ToolTipService.ToolTip="Create the supplemental policy based on the MDE Advanced Hunting logs"
                             Click="{x:Bind ViewModel.CreatePolicyButton_Click}">

                                <SplitButton.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon Glyph="&#xECCD;" />
                                        <TextBlock Text="{x:Bind ViewModel.CreatePolicyButtonContent, Mode=OneWay}" Margin="5,0,0,0" />
                                    </StackPanel>
                                </SplitButton.Content>

                                <SplitButton.Flyout>
                                    <Flyout Placement="Bottom">

                                        <Flyout.FlyoutPresenterStyle>
                                            <Style TargetType="FlyoutPresenter">
                                                <Setter Property="Padding" Value="0" />
                                                <!-- Same corner radius as the one in PanelStyle  -->
                                                <Setter Property="CornerRadius" Value="8" />

                                                <!--
                                                Important: the "resolution order" for widths (at least in winui) is minwidth, maxwidth, width
                                                Width does not override MaxWidth
                                                https://learn.microsoft.com/uwp/api/windows.ui.xaml.frameworkelement.maxwidth?view=winrt-26100#remarks
                                                -->
                                                <Setter Property="MaxWidth" Value="1234" />
                                            </Style>
                                        </Flyout.FlyoutPresenterStyle>

                                        <StackPanel
                                                VerticalAlignment="Top"
                                                Orientation="Vertical"
                                                Spacing="8">
                                            <controls:Segmented x:Name="segmentedControl"
                                                    HorizontalAlignment="Stretch"
                                                    SelectedIndex="{x:Bind ViewModel.SelectedCreationMethod, Mode=TwoWay}">
                                                <controls:SegmentedItem x:Uid="AddToPolicySegmentedItem"
                                                            Tag="AddToPolicy"
                                                            Width="160"
                                                            Icon="{ui:FontIcon Glyph=&#xEB49;}" />
                                                <controls:SegmentedItem x:Uid="BasePolicyFileSegmentedItem"
                                                            Tag="BasePolicyFile"
                                                            Width="160"
                                                            Icon="{ui:FontIcon Glyph=&#xEB49;}"/>
                                                <controls:SegmentedItem x:Uid="BasePolicyGUIDSegmentedItem"
                                                            Tag="BaseGUID"
                                                            Width="160"
                                                            Icon="{ui:FontIcon Glyph=&#xEB49;}"/>
                                            </controls:Segmented>
                                            <controls:SwitchPresenter Value="{x:Bind ((controls:SegmentedItem)segmentedControl.SelectedItem).Tag, Mode=OneWay}" HorizontalAlignment="Center">

                                                <controls:Case Value="AddToPolicy">
                                                    <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                                                animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                                                Style="{StaticResource PanelStyle}">

                                                        <TextBlock Margin="5"
                                                                   VerticalAlignment="Center"
                                                                   x:Uid="AddToPolicyDescription"
                                                                   Width="310"
                                                                   TextWrapping="WrapWholeWords"/>

                                                        <Button Margin="5"
                                                                x:Uid="FileBrowseButton"
                                                                Style="{StaticResource AccentButtonStyle}"
                                                                Click="{x:Bind ViewModel.AddToPolicyButton_Click}" />

                                                    </StackPanel>
                                                </controls:Case>
                                                <controls:Case Value="BasePolicyFile">
                                                    <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                                                animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                                                Style="{StaticResource PanelStyle}">

                                                        <TextBlock Margin="5"
                                                       VerticalAlignment="Center"
                                                       TextWrapping="WrapWholeWords"
                                                       x:Uid="BasePolicyFileDescription"
                                                       Width="310" />

                                                        <Button Margin="5"
                                                    x:Uid="FileBrowseButton"
                                                    Style="{StaticResource AccentButtonStyle}"
                                                    Click="{x:Bind ViewModel.BasePolicyFileButton_Click}" />


                                                    </StackPanel>
                                                </controls:Case>

                                                <controls:Case Value="BaseGUID">
                                                    <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                                                animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                                                Style="{StaticResource PanelStyle}">

                                                        <TextBox x:Uid="BasePolicyGUIDDescription"
                                                                 Width="300"
                                                                 Margin="10"
                                                                 VerticalAlignment="Center"
                                                                 VerticalContentAlignment="Center"
                                                                 Text="{x:Bind ViewModel.BasePolicyGUID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                                        <Button Margin="5"
                                                                x:Uid="SubmitButton"
                                                                Style="{StaticResource AccentButtonStyle}"
                                                                Click="{x:Bind ViewModel.BaseGUIDSubmitButton_Click}" />

                                                    </StackPanel>
                                                </controls:Case>
                                            </controls:SwitchPresenter>
                                        </StackPanel>

                                    </Flyout>
                                </SplitButton.Flyout>

                            </SplitButton>

                            <DropDownButton x:Uid="ExtraActionsDropDownButton"
                                            IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}">
                                <DropDownButton.ContentTemplate>
                                    <DataTemplate x:DataType="x:String">
                                        <StackPanel Orientation="Horizontal" Spacing="8">
                                            <FontIcon Glyph="&#xE712;" FontSize="16"/>
                                            <TextBlock Text="{x:Bind}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DropDownButton.ContentTemplate>
                                <DropDownButton.Flyout>

                                    <MenuFlyout Placement="Bottom">

                                        <MenuFlyoutItem x:Uid="SelectAllMenuFlyoutItem" Click="{x:Bind ViewModel.SelectAll_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE762;"/>
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="DeSelectAllMenuFlyoutItem" Click="{x:Bind ViewModel.DeSelectAll_Click}">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8E6;"/>
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem Click="{x:Bind ViewModel.ClearDataButton_Click}" x:Uid="ClearDataMenuFlyoutItem">
                                            <MenuFlyoutItem.Icon>
                                                <SymbolIcon Symbol="Delete" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutSeparator/>

                                        <ToggleMenuFlyoutItem x:Uid="DeployAfterCreationMenuFlyoutItem"
                                                  IsChecked="{x:Bind ViewModel.DeployPolicyToggle, Mode=TwoWay}">
                                            <ToggleMenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE896;"/>
                                            </ToggleMenuFlyoutItem.Icon>
                                        </ToggleMenuFlyoutItem>

                                    </MenuFlyout>

                                </DropDownButton.Flyout>
                            </DropDownButton>

                            <Button x:Uid="PolicyNameColumnHeaderBtn"
                                    IsEnabled="{x:Bind ViewModel.AreElementsEnabled, Mode=OneWay}">
                                <Button.ContentTemplate>
                                    <DataTemplate x:DataType="x:String">
                                        <StackPanel Orientation="Horizontal" Spacing="8">
                                            <FontIcon Glyph="&#xE932;" FontSize="16"/>
                                            <TextBlock Text="{x:Bind}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </Button.ContentTemplate>
                                <Button.Flyout>
                                    <Flyout>
                                        <Flyout.FlyoutPresenterStyle>
                                            <Style TargetType="FlyoutPresenter">
                                                <Setter Property="CornerRadius" Value="8" />
                                                <Setter Property="MaxWidth" Value="1234" />
                                            </Style>
                                        </Flyout.FlyoutPresenterStyle>

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="3" VerticalSpacing="8">
                                            <TextBox Width="300"
                                                     Header="Optional: Choose a policy name"
                                                     Text="{x:Bind ViewModel.PolicyNameTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     PlaceholderText="Policy Name..."/>
                                        </controls:WrapPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                            <ComboBox SelectedItem="{x:Bind ViewModel.ScanLevelComboBoxSelectedItem, Mode=TwoWay}"
                                      SelectedIndex="0"
                                      ItemsSource="{x:Bind ViewModel.ScanLevelsSourceForLogs}"
                                      x:Uid="ScanLevelComboBox">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate x:DataType="intelgathering:ScanLevelsComboBoxType">
                                        <StackPanel Orientation="Horizontal" Spacing="5">
                                            <TextBlock Text="{x:Bind FriendlyName}" Margin="0,0,4,0" VerticalAlignment="Center"/>
                                            <RatingControl IsReadOnly="True" Value="{x:Bind Rating}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                            <ToggleButton IsChecked="{x:Bind ViewModel.OnlyIncludeSelectedItemsToggleButton, Mode=TwoWay}"
                                          x:Uid="OnlyIncludeSelectedItemsToggleButton">
                                <ToggleButton.ContentTemplate>
                                    <DataTemplate x:DataType="x:String">
                                        <StackPanel Orientation="Horizontal" Spacing="8">
                                            <FontIcon Glyph="&#xEA98;" FontSize="16"/>
                                            <TextBlock Text="{x:Bind}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ToggleButton.ContentTemplate>
                            </ToggleButton>

                        </controls:WrapPanel>

                    </Border>

                </Grid>
            </Expander.Header>

            <Expander.Content>

                <!-- Property Filter Section -->

                <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                    <TextBlock Text="Property Filter:" VerticalAlignment="Center" FontWeight="SemiBold"/>

                    <ComboBox ItemsSource="{x:Bind ViewModel.PropertyFilterItems, Mode=OneWay}"
                              SelectedItem="{x:Bind ViewModel.SelectedPropertyFilter, Mode=TwoWay}"
                              MinWidth="200"
                              PlaceholderText="Select a property..."
                              ToolTipService.ToolTip="Select a property to filter by"/>

                    <TextBox Text="{x:Bind ViewModel.PropertyFilterValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         MinWidth="200"
                         PlaceholderText="Enter filter value..."
                         ToolTipService.ToolTip="Enter the value to filter the selected property by"/>

                    <Button Click="{x:Bind ViewModel.ClearPropertyFilter}"
                            x:Uid="ResetFiltersButton">
                        <Button.ContentTemplate>
                            <DataTemplate x:DataType="x:String">
                                <StackPanel Orientation="Horizontal" Spacing="8">
                                    <FontIcon Glyph="&#xE711;" FontSize="16"/>
                                    <TextBlock Text="{x:Bind}"/>
                                </StackPanel>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>

                    <Button Click="{x:Bind ViewModel.ExportToJsonButton_Click}"
                            x:Uid="ExportToJSONButton">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal" Spacing="5">
                                <FontIcon Glyph="&#xE96A;" />
                                <TextBlock x:Uid="ExportToJSONButtonText" />
                            </StackPanel>
                        </Button.Content>
                    </Button>

                </controls:WrapPanel>

            </Expander.Content>
        </Expander>

        <customUI:ListViewV2 x:Name="FileIdentitiesListView"
          RegistryKey="MDE_AdvancedHunting"
          ItemsSource="{x:Bind ViewModel.FileIdentities, Mode=OneWay}"
          Grid.Row="4"
          SelectionMode="Extended">

            <customUI:ListViewV2.Header>
                <Border CornerRadius="5"
                        Background="Black"
                        customUI:StickyHeaderBehaviorV2.IsEnabled="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!-- TwoWay binding needed of course but the MinWidth constraints make them look better on the UI when resizing so it won't get too small -->
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth1, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth2, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth3, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth4, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth5, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth6, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth7, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth8, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth9, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth10, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth11, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth12, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth13, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth14, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth15, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth16, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth17, Mode=TwoWay}" MinWidth="50" />
                            <ColumnDefinition Width="{x:Bind ViewModel.ColumnWidth18, Mode=TwoWay}" MinWidth="50" />
                        </Grid.ColumnDefinitions>

                        <!-- Header Buttons -->
                        <Button x:Uid="FileNameColumnHeaderBtn" Tag="FileName" Grid.Column="0" Margin="10,0,0,0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="TimeCreatedColumnHeaderBtn" Tag="TimeCreated" Grid.Column="1" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SignatureStatusColumnHeaderBtn" Tag="SignatureStatus" Grid.Column="2" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="ActionColumnHeaderBtn" Tag="Action" Grid.Column="3" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="OriginalFileNameColumnHeaderBtn" Tag="OriginalFileName" Grid.Column="4" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="InternalNameColumnHeaderBtn" Tag="InternalName" Grid.Column="5" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="FileDescriptionColumnHeaderBtn" Tag="FileDescription" Grid.Column="6" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="FileVersionColumnHeaderBtn" Tag="FileVersion" Grid.Column="7" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SHA256HashColumnHeaderBtn" Tag="SHA256Hash" Grid.Column="8" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SHA1HashColumnHeaderBtn" Tag="SHA1Hash" Grid.Column="9" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SHA256FlatHashColumnHeaderBtn" Tag="SHA256FlatHash" Grid.Column="10" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SHA1FlatHashColumnHeaderBtn" Tag="SHA1FlatHash" Grid.Column="11" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="SigningScenarioColumnHeaderBtn" Tag="SISigningScenario" Grid.Column="12" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="FilePathColumnHeaderBtn" Tag="FilePath" Grid.Column="13" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="ComputerNameColumnHeaderBtn" Tag="ComputerName" Grid.Column="14" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="PolicyGUIDColumnHeaderBtn" Tag="PolicyGUID" Grid.Column="15" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="PolicyNameColumnHeaderBtn" Tag="PolicyName" Grid.Column="16" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>
                        <Button x:Uid="FilePublishersColumnHeaderBtn" Tag="FilePublishersToDisplay" Grid.Column="17" Margin="0" FontFamily="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewHeaderButton}" Click="{x:Bind ViewModel.HeaderColumnSortingButton_Click}"/>

                        <!-- GridSplitters between columns -->
                        <controls:GridSplitter Grid.Column="1" />
                        <controls:GridSplitter Grid.Column="2" />
                        <controls:GridSplitter Grid.Column="3" />
                        <controls:GridSplitter Grid.Column="4" />
                        <controls:GridSplitter Grid.Column="5" />
                        <controls:GridSplitter Grid.Column="6" />
                        <controls:GridSplitter Grid.Column="7" />
                        <controls:GridSplitter Grid.Column="8" />
                        <controls:GridSplitter Grid.Column="9" />
                        <controls:GridSplitter Grid.Column="10" />
                        <controls:GridSplitter Grid.Column="11" />
                        <controls:GridSplitter Grid.Column="12" />
                        <controls:GridSplitter Grid.Column="13" />
                        <controls:GridSplitter Grid.Column="14" />
                        <controls:GridSplitter Grid.Column="15" />
                        <controls:GridSplitter Grid.Column="16" />
                        <controls:GridSplitter Grid.Column="17" />
                    </Grid>
                </Border>
            </customUI:ListViewV2.Header>

            <!-- DataTemplate for ListView items -->
            <customUI:ListViewV2.ItemTemplate>
                <DataTemplate x:DataType="intelgathering:FileIdentity" xmlns:VMs="using:AppControlManager.ViewModels">
                    <!-- Setting Background="Transparent" on the Grid makes it hit-test visible, meaning that even areas without any child elements (like empty spaces in the column) will respond to pointer events.  -->
                    <Grid Background="Transparent">
                        <Grid.ContextFlyout>
                            <MenuFlyout>

                                <MenuFlyoutItem x:Uid="DeleteRow" Click="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ListViewFlyoutMenuDelete_Click}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE74D;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem x:Uid="CopyRow" Click="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ListViewFlyoutMenuCopy_Click}">
                                    <MenuFlyoutItem.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="C" Modifiers="Control" Invoked="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.CtrlC_Invoked}"/>
                                    </MenuFlyoutItem.KeyboardAccelerators>
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSubItem x:Uid="CopyIndividualItems">
                                    <MenuFlyoutSubItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutSubItem.Icon>

                                    <MenuFlyoutSubItem.Items>

                                        <MenuFlyoutItem x:Uid="FileNameHeader" Tag="FileName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="TimeCreatedHeader" Tag="TimeCreated" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignatureStatusHeader" Tag="SignatureStatus" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="ActionHeader" Tag="Action" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="OriginalFileNameHeader" Tag="OriginalFileName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="InternalNameHeader" Tag="InternalName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FileDescriptionHeader" Tag="FileDescription" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FileVersionHeader" Tag="FileVersion" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA256HashHeader" Tag="SHA256Hash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA1HashHeader" Tag="SHA1Hash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA256FlatHashHeader" Tag="SHA256FlatHash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA1FlatHashHeader" Tag="SHA1FlatHash" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SigningScenarioHeader" Tag="SISigningScenario" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FilePathHeader" Tag="FilePath" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="ComputerNameHeader" Tag="ComputerName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="PolicyGUIDHeader" Tag="PolicyGUID" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="PolicyNameHeader" Tag="PolicyName" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FilePublishersHeader" Tag="FilePublishersToDisplay" Click="CopyToClipboard_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                    </MenuFlyoutSubItem.Items>

                                </MenuFlyoutSubItem>
                            </MenuFlyout>
                        </Grid.ContextFlyout>

                        <Grid.ColumnDefinitions>
                            <!-- Changed to TwoWay binding to keep synchronized with header -->
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth1, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth2, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth3, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth4, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth5, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth6, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth7, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth8, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth9, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth10, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth11, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth12, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth13, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth14, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth15, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth16, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth17, Mode=TwoWay}" />
                            <ColumnDefinition Width="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.ColumnWidth18, Mode=TwoWay}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Bind FileName}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="0"/>
                        <TextBlock Text="{x:Bind TimeCreated}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="1"/>
                        <TextBlock x:Phase="1" Text="{x:Bind SignatureStatus}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="2"/>
                        <TextBlock x:Phase="1" Text="{x:Bind Action}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="3"/>
                        <TextBlock x:Phase="1" Text="{x:Bind OriginalFileName}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="4"/>
                        <TextBlock x:Phase="2" Text="{x:Bind InternalName}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="5"/>
                        <TextBlock x:Phase="2" Text="{x:Bind FileDescription}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="6"/>
                        <TextBlock x:Phase="2" Text="{x:Bind FileVersion}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="7"/>
                        <TextBlock x:Phase="4" Text="{x:Bind SHA256Hash}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="8"/>
                        <TextBlock x:Phase="4" Text="{x:Bind SHA1Hash}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="9"/>
                        <TextBlock x:Phase="4" Text="{x:Bind SHA256FlatHash}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="10"/>
                        <TextBlock x:Phase="4" Text="{x:Bind SHA1FlatHash}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="11"/>
                        <TextBlock x:Phase="2" Text="{x:Bind SISigningScenario}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="12"/>
                        <TextBlock x:Phase="3" Text="{x:Bind FilePath}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="13"/>
                        <TextBlock x:Phase="3" Text="{x:Bind ComputerName}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="14"/>
                        <TextBlock x:Phase="4" Text="{x:Bind PolicyGUID}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="15"/>
                        <TextBlock x:Phase="3" Text="{x:Bind PolicyName}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="16"/>
                        <TextBlock x:Phase="3" Text="{x:Bind FilePublishersToDisplay}" FontFamily="{x:Bind VMs:ViewModelProvider.MDEAHPolicyCreationVM.AppSettings.ListViewFontFamily, Mode=OneWay}" Style="{StaticResource ListViewCellTextBlock}" Grid.Column="17"/>
                    </Grid>
                </DataTemplate>
            </customUI:ListViewV2.ItemTemplate>
        </customUI:ListViewV2>

    </Grid>
</Page>