<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.Settings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:others="using:AppControlManager.Others"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:customUI="using:AppControlManager.CustomUIElements"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    FlowDirection="{x:Bind ViewModel.AppSettings.ApplicationGlobalFlowDirection, Mode=OneWay}">

    <ScrollViewer>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <controls:WrapPanel Style="{StaticResource PageHeaderWrapPanelStyle}">

                <TextBlock x:Uid="SettingsPageTitle" TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}" />

            </controls:WrapPanel>

            <customUI:InfoBarV2 Grid.Row="1"
                                Margin="15"
                                IsOpen="{x:Bind ViewModel.MainInfoBarIsOpen, Mode=TwoWay}"
                                Message="{x:Bind ViewModel.MainInfoBarMessage, Mode=OneWay}"
                                Severity="{x:Bind ViewModel.MainInfoBarSeverity, Mode=OneWay}"
                                IsClosable="{x:Bind ViewModel.MainInfoBarIsClosable, Mode=OneWay}"/>

            <StackPanel HorizontalAlignment="Stretch"
                        Spacing="{StaticResource SettingsCardSpacing}"
                        Grid.Row="2">
                <win:StackPanel.ChildrenTransitions>
                    <win:EntranceThemeTransition FromVerticalOffset="50" />
                    <win:RepositionThemeTransition IsStaggeringEnabled="False" />
                </win:StackPanel.ChildrenTransitions>

                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}"
                           x:Uid="UserConfigurations" />

                <controls:SettingsExpander x:Uid="UserConfigsSettingsExpander"
                                           IsEnabled="{x:Bind ViewModel.IsElevated, Mode=OneTime}"
                                           IsExpanded="{x:Bind ViewModel.MainUserConfigurationsSettingsExpanderIsExpanded, Mode=TwoWay}"
                                           HeaderIcon="{ui:FontIcon Glyph=&#xE71D;}">

                    <Button x:Uid="RetrieveTheUserConfigurationsButton"
                            Click="{x:Bind ViewModel.GetConfigurationButton}"
                            Style="{StaticResource AccentButtonStyle}">
                        <Button.ContentTemplate>
                            <DataTemplate x:DataType="x:String">
                                <StackPanel Orientation="Horizontal" Spacing="8">
                                    <FontIcon Glyph="&#xE9F3;" FontSize="16"/>
                                    <TextBlock Text="{x:Bind}"/>
                                </StackPanel>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>

                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard ContentAlignment="Left">
                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">

                                <!-- Signed Policy Path -->
                                <controls:WrapPanel Orientation="Horizontal" Margin="0,0,0,10">
                                    <TextBox x:Uid="SignedPolicyPathTextBox"
                                             Text="{x:Bind ViewModel.SignedPolicyPathTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             MinWidth="300"
                                             Margin="0,0,10,0"
                                             VerticalAlignment="Center"/>
                                    <CommandBar Background="Transparent" IsOpen="False" DefaultLabelPosition="Right" VerticalAlignment="Center" Margin="0,25,0,0">
                                        <AppBarButton Icon="Save" x:Uid="SaveAppBarButton" Click="{x:Bind ViewModel.EditButton_SignedPolicyPath_Click}"/>
                                        <AppBarButton Icon="Clear" x:Uid="ClearAppBarButton" Click="{x:Bind ViewModel.ClearButton_SignedPolicyPath_Click}"/>
                                        <AppBarButton Icon="Folder" x:Uid="BrowseAppBarButton" Click="{x:Bind ViewModel.BrowseButton_SignedPolicyPath_Click}"/>
                                    </CommandBar>
                                </controls:WrapPanel>

                                <!-- Unsigned Policy Path -->
                                <controls:WrapPanel Orientation="Horizontal" Margin="0,0,0,10">
                                    <TextBox x:Uid="UnsignedPolicyPathTextBox" Text="{x:Bind ViewModel.UnsignedPolicyPathTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="300" Margin="0,0,10,0" VerticalAlignment="Center"/>
                                    <CommandBar Background="Transparent" IsOpen="False" DefaultLabelPosition="Right" VerticalAlignment="Center" Margin="0,25,0,0">
                                        <AppBarButton Icon="Save" x:Uid="SaveAppBarButton" Click="{x:Bind ViewModel.EditButton_UnsignedPolicyPath_Click}"/>
                                        <AppBarButton Icon="Clear" x:Uid="ClearAppBarButton" Click="{x:Bind ViewModel.ClearButton_UnsignedPolicyPath_Click}"/>
                                        <AppBarButton Icon="Folder" x:Uid="BrowseAppBarButton" Click="{x:Bind ViewModel.BrowseButton_UnsignedPolicyPath_Click}"/>
                                    </CommandBar>
                                </controls:WrapPanel>

                                <!-- Certificate Common Name -->
                                <controls:WrapPanel Orientation="Horizontal" Margin="0,0,0,10">

                                    <AutoSuggestBox
                                        x:Uid="CertificateCommonNameAutoSuggestBox"
                                        QueryIcon="Find"
                                        GotFocus="{x:Bind ViewModel.CertificateCommonNameAutoSuggestBox_GotFocus}"
                                        IsSuggestionListOpen="{x:Bind ViewModel.CertCNAutoSuggestBoxIsSuggestionListOpen, Mode=TwoWay}"
                                        Text="{x:Bind ViewModel.CertCNsAutoSuggestBoxText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        TextChanged="{x:Bind ViewModel.CertificateCNAutoSuggestBox_TextChanged}"
                                        ItemsSource="{x:Bind ViewModel.CertCommonNames, Mode=OneWay}"
                                        MinWidth="300" Margin="0,0,10,0" VerticalAlignment="Center"/>

                                    <CommandBar Background="Transparent" IsOpen="False" DefaultLabelPosition="Right" VerticalAlignment="Center" Margin="0,25,0,0">
                                        <AppBarButton Icon="Save" x:Uid="SaveAppBarButton" Click="{x:Bind ViewModel.EditButton_CertificateCommonName_Click}"/>
                                        <AppBarButton Icon="Clear" x:Uid="ClearAppBarButton" Click="{x:Bind ViewModel.ClearButton_CertificateCommonName_Click}"/>
                                        <AppBarButton Icon="Refresh" x:Uid="RefreshAppBarButton" Click="{x:Bind ViewModel.FetchLatestCertificateCNs}"/>
                                    </CommandBar>
                                </controls:WrapPanel>

                                <!-- Certificate Path -->
                                <controls:WrapPanel Orientation="Horizontal" Margin="0,0,0,10">
                                    <TextBox x:Uid="CertificatePathTextBox" Text="{x:Bind ViewModel.CertificatePathTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="300" Margin="0,0,10,0" VerticalAlignment="Center"/>
                                    <CommandBar Background="Transparent" IsOpen="False" DefaultLabelPosition="Right" VerticalAlignment="Center" Margin="0,25,0,0">
                                        <AppBarButton Icon="Save" x:Uid="SaveAppBarButton" Click="{x:Bind ViewModel.EditButton_CertificatePath_Click}"/>
                                        <AppBarButton Icon="Clear" x:Uid="ClearAppBarButton" Click="{x:Bind ViewModel.ClearButton_CertificatePath_Click}"/>
                                        <AppBarButton Icon="Folder" x:Uid="BrowseAppBarButton" Click="{x:Bind ViewModel.BrowseButton_CertificatePath_Click}"/>
                                    </CommandBar>
                                </controls:WrapPanel>

                            </StackPanel>
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <!-- Appearance section -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" x:Uid="Appearance" />
                <controls:SettingsExpander x:Uid="AppearanceSectionSettingsExpander" IsExpanded="True" HeaderIcon="{ui:FontIcon Glyph=&#xE790;}">

                    <controls:SettingsExpander.Items>

                        <customUI:SettingsCardV2 x:Uid="DarkerBackGroundSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xF0E8;}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AppSettings.NavViewBackground, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"/>
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="BackgroundStyleSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xEF1F;}">
                            <ComboBox
                                ItemsSource="{x:Bind ViewModelMainWindow.BackDropOptions, Mode=OneTime}"
                                SelectedIndex="{x:Bind ViewModelMainWindow.BackDropComboBoxSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="AppThemeSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xE706;}">
                            <ComboBox SelectedIndex="{x:Bind ViewModel.AppThemeComboBoxSelectedIndex, Mode=TwoWay}">
                                <x:String>Use System Setting</x:String>
                                <x:String>Dark</x:String>
                                <x:String>Light</x:String>
                            </ComboBox>
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="MainNavigationIconsSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xE8D3;}">
                            <ComboBox SelectedIndex="{x:Bind ViewModel.IconsStylesComboBoxSelectedIndex, Mode=TwoWay}">
                                <x:String>Animated</x:String>
                                <x:String>Windows Accent</x:String>
                                <x:String>Monochromatic</x:String>
                            </ComboBox>
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="MainNavigationLocationSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xE90C;}">
                            <ComboBox SelectedIndex="{x:Bind ViewModel.NavigationMenuLocationComboBoxSelectedIndex, Mode=TwoWay}">
                                <x:String>Left</x:String>
                                <x:String>Top</x:String>
                            </ComboBox>
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="AppWindowBorderColorSettingsCard"
                                                 HeaderIcon="{ui:FontIcon Glyph=&#xEF3C;}">

                            <StackPanel HorizontalAlignment="Center">
                                <ComboBox x:Name="BorderTypeSelection"
                                          Margin="0,0,0,8"
                                          HorizontalAlignment="Center"
                                          SelectedIndex="0">
                                    <x:String>Rainbow</x:String>
                                    <x:String>Custom Color</x:String>
                                </ComboBox>

                                <!-- SwitchPresenter binds to a value -->
                                <controls:SwitchPresenter Value="{x:Bind BorderTypeSelection.SelectedItem, Mode=OneWay}">
                                    <!--And then only dynamically displays the Case with the matching Value -->

                                    <controls:Case Value="Rainbow">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Spacing="10">
                                            <Button x:Uid="RainbowBorderAnimationStartButton" Click="{x:Bind ViewModel.StartRainbowAnimation}" />
                                            <Button x:Uid="RainbowBorderAnimationStopButton" Click="{x:Bind ViewModel.StopRainbowAnimation}" />
                                        </StackPanel>
                                    </controls:Case>

                                    <controls:Case Value="Custom Color">

                                        <controls:WrapPanel Orientation="Vertical"
                                                            HorizontalSpacing="10"
                                                            VerticalSpacing="10">

                                            <StackPanel Orientation="Horizontal"
                                                        HorizontalAlignment="Center"
                                                        Spacing="10">
                                                <Button x:Uid="SetBorderColorButton" Click="{x:Bind ViewModel.StartCustomColorAnimation}" />
                                                <Button x:Uid="ResetBorderColorButton" Click="{x:Bind ViewModel.StopCustomColorAnimation}" />

                                            </StackPanel>

                                            <ColorPicker ColorSpectrumShape="Ring"
                                                         IsMoreButtonVisible="False"
                                                         IsColorSliderVisible="False"
                                                         IsColorChannelTextInputVisible="False"
                                                         IsHexInputVisible="False"
                                                         IsAlphaEnabled="False"
                                                         ColorChanged="{x:Bind ViewModel.ColorPicker_ColorChanged}"
                                                         IsAlphaSliderVisible="False"
                                                         IsAlphaTextInputVisible="False" />

                                        </controls:WrapPanel>

                                    </controls:Case>
                                </controls:SwitchPresenter>

                            </StackPanel>

                        </customUI:SettingsCardV2>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>

                <!-- Behavior section -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" x:Uid="Behavior" />
                <controls:SettingsExpander IsExpanded="True" x:Uid="BehaviorSettingSettingsExpander" HeaderIcon="{ui:FontIcon Glyph=&#xE9E9;}">
                    <controls:SettingsExpander.Items>
                        <customUI:SettingsCardV2 x:Uid="ListViewsCenterVerticallyUponSelectionSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xE8E3;}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AppSettings.ListViewsVerticalCentering, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"/>
                        </customUI:SettingsCardV2>
                        <customUI:SettingsCardV2 x:Uid="CacheSecurityCatalogsScanResultsSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xE96A;}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AppSettings.CacheSecurityCatalogsScanResults, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"/>
                        </customUI:SettingsCardV2>
                        <customUI:SettingsCardV2 x:Uid="PromptForElevationSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xE7EF;}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AppSettings.PromptForElevationOnStartup, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"/>
                        </customUI:SettingsCardV2>
                        <customUI:SettingsCardV2 x:Uid="ScreenShieldSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xEE3F;}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AppSettings.ScreenShield, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"/>
                        </customUI:SettingsCardV2>
                        <customUI:SettingsCardV2 x:Uid="PublishUserActivityInTheOSSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xEC5B;}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AppSettings.PublishUserActivityInTheOS, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"/>
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="BrowseForCISchemaSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xF193;}">
                            <controls:WrapPanel HorizontalSpacing="10" VerticalSpacing="10">

                                <TextBox IsReadOnly="True" Text="{x:Bind ViewModel.AppSettings.CiPolicySchemaPath, Mode=OneWay}" x:Uid="CustomCISchemaPathTextBox"/>

                                <Button Click="{x:Bind ViewModel.BrowseForCISchemaPath}" x:Uid="BrowseForCISchemaButton">
                                    <Button.ContentTemplate>
                                        <DataTemplate x:DataType="x:String">
                                            <StackPanel Orientation="Horizontal" Spacing="8">
                                                <FontIcon Glyph="&#xEC50;" FontSize="16"/>
                                                <TextBlock Text="{x:Bind}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </Button.ContentTemplate>
                                </Button>

                            </controls:WrapPanel>
                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="AutoResizeListViewColumnsSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xE73F;}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.AppSettings.AutoResizeListViewColumns, Mode=TwoWay}"
                                          x:Uid="ToggleSwitchGeneral"/>
                        </customUI:SettingsCardV2>

                        <!-- https://microsoft.github.io/Win2D/WinUI2/html/M_Microsoft_Graphics_Canvas_Text_CanvasTextFormat_GetSystemFontFamilies.htm -->
                        <customUI:SettingsCardV2 x:Uid="ListViewFontFamilySettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xE8D2;}">
                            <ComboBox ItemsSource="{x:Bind ViewModel.FontFamilies}"
                                      SelectedItem="{x:Bind ViewModel.AppSettings.ListViewFontFamily, Mode=TwoWay}" />
                        </customUI:SettingsCardV2>

                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <!-- Language section -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" x:Uid="LanguageTextBlock" />
                <controls:SettingsExpander IsExpanded="True" x:Uid="LanguageSettingSettingsExpander" HeaderIcon="{ui:FontIcon Glyph=&#xF2B7;}">

                    <controls:SettingsExpander.Items>
                        <customUI:SettingsCardV2 x:Uid="LanguageSelectionSettingsCard"
                                                 HeaderIcon="{ui:FontIcon Glyph=&#xF69E;}">
                            <ComboBox ItemsSource="{x:Bind ViewModel.LanguageOptions}"
                                      SelectedIndex="{x:Bind ViewModel.LanguageComboBoxSelectedIndex, Mode=TwoWay}">

                                <ComboBox.ItemTemplate>
                                    <DataTemplate x:DataType="others:LanguageOption">
                                        <StackPanel Orientation="Horizontal" Spacing="8">
                                            <Ellipse Width="24" Height="24">
                                                <Ellipse.Fill>
                                                    <ImageBrush ImageSource="{x:Bind Image}" Stretch="UniformToFill"/>
                                                </Ellipse.Fill>
                                            </Ellipse>
                                            <TextBlock Text="{x:Bind Name}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>

                            </ComboBox>
                        </customUI:SettingsCardV2>
                        <customUI:SettingsCardV2 x:Uid="UIFlowDirectionSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xE9AB;}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.UIFlowDirectionToggleSwitch, Mode=TwoWay}"
                                          Toggled="{x:Bind ViewModel.FlowDirectionToggleSwitch_Toggled}"
                                          x:Uid="UIFlowDirectionToggleSwitch" />
                        </customUI:SettingsCardV2>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <!-- Sound section -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" x:Uid="Sound" />
                <customUI:SettingsCardV2 x:Uid="AppSoundSettingSettingsCard" HeaderIcon="{ui:FontIcon Glyph=&#xEC4F;}">
                    <ToggleSwitch IsOn="{x:Bind ViewModel.AppSettings.SoundSetting, Mode=TwoWay}"
                                  x:Uid="ToggleSwitchGeneral"/>
                </customUI:SettingsCardV2>

                <!-- About section -->
                <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}"
                           x:Uid="About" />
                <controls:SettingsExpander Header="AppControl Manager"
                                           IsExpanded="True"
                                           Description="{x:Bind ViewModel.CopyRightSettingsExpanderDescription, Mode=OneTime}"
                                           HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/Square44x44Logo.altform-lightunplated_targetsize-256.png}">
                    <TextBlock Text="{x:Bind ViewModel.VersionTextBlockText, Mode=OneTime}" win:IsTextSelectionEnabled="True"
                               Foreground="{ThemeResource TextFillColorSecondaryBrush}" />
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard HorizontalContentAlignment="Left" ContentAlignment="Left">

                            <controls:WrapPanel Margin="-12,0,0,0" Orientation="Horizontal" HorizontalSpacing="13">

                                <StackPanel Orientation="Vertical">
                                    <HyperlinkButton x:Uid="GitHubRepoHyperLinkButton" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security" />
                                    <HyperlinkButton x:Uid="AppControlManagerDocumentationHyperLinkButton" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/AppControl-Manager" />
                                    <HyperlinkButton x:Uid="MicrosoftStorePageHyperLinkButton" NavigateUri="https://apps.microsoft.com/detail/9PNG1JDDTGP8" />
                                </StackPanel>

                                <StackPanel Orientation="Vertical">
                                    <HyperlinkButton x:Uid="SpyNetGirlWebsiteHyperLinkButton" NavigateUri="https://spynetgirl.github.io/" />
                                    <HyperlinkButton x:Uid="YouTubeChannelHyperLinkButton" NavigateUri="https://www.youtube.com/@hotcakex" />
                                    <HyperlinkButton x:Uid="DonationHyperLinkButton" FontWeight="ExtraBold" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security?tab=readme-ov-file#donations-" />
                                </StackPanel>

                                <StackPanel Orientation="Vertical">
                                    <HyperlinkButton Content="X" NavigateUri="https://x.com/CyberCakeX" />
                                    <HyperlinkButton x:Uid="PrivacyPolicyHyperLinkButton" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Privacy-Policy-for-the-AppControl-Manager" />
                                </StackPanel>

                            </controls:WrapPanel>

                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="10" VerticalSpacing="10" Margin="0,8,0,0">
                    <HyperlinkButton x:Uid="SendFeedbackHyperLinkButton" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/issues/new/choose">
                        <HyperlinkButton.ContentTemplate>
                            <DataTemplate x:DataType="x:String">
                                <StackPanel Orientation="Horizontal" Spacing="8">
                                    <FontIcon Glyph="&#xED15;" FontSize="16"/>
                                    <TextBlock Text="{x:Bind}"/>
                                </StackPanel>
                            </DataTemplate>
                        </HyperlinkButton.ContentTemplate>
                    </HyperlinkButton>

                    <HyperlinkButton x:Uid="Icons8WebsiteHyperLinkButton" NavigateUri="https://icons8.com">
                        <HyperlinkButton.ContentTemplate>
                            <DataTemplate x:DataType="x:String">
                                <StackPanel Orientation="Horizontal" Spacing="8">
                                    <FontIcon Glyph="&#xED58;" FontSize="16"/>
                                    <TextBlock Text="{x:Bind}"/>
                                </StackPanel>
                            </DataTemplate>
                        </HyperlinkButton.ContentTemplate>
                    </HyperlinkButton>

                    <HyperlinkButton x:Uid="SourceCodeHyperLinkButton" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/tree/main/AppControl%20Manager">
                        <HyperlinkButton.ContentTemplate>
                            <DataTemplate x:DataType="x:String">
                                <StackPanel Orientation="Horizontal" Spacing="8">
                                    <FontIcon Glyph="&#xE943;" FontSize="16"/>
                                    <TextBlock Text="{x:Bind}"/>
                                </StackPanel>
                            </DataTemplate>
                        </HyperlinkButton.ContentTemplate>
                    </HyperlinkButton>

                    <TextBlock x:Uid="Sponsor1TextBlock" FontStyle="Italic" Margin="0,6,0,0" />
                </controls:WrapPanel>

            </StackPanel>

        </Grid>
    </ScrollViewer>
</Page>
