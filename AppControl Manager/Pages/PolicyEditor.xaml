<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.PolicyEditor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:VM="using:AppControlManager.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:CommunityToolkit.WinUI.Behaviors"
    xmlns:PolicyEditor="using:AppControlManager.PolicyEditor"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    d:DataContext="{d:DesignInstance Type=VM:PolicyEditorVM}"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:animatedvisuals="using:AnimatedVisuals"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    mc:Ignorable="d">

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <controls:WrapPanel Grid.Row="0" VerticalSpacing="4" HorizontalSpacing="4" Orientation="Vertical" Margin="6,0,6,10">

            <TextBlock TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}">
        <Span>
          <Bold>Edit App Control for Business Policies. </Bold>
            Easily browse for a policy XML file and load its details using the Load button. Once loaded, you can review the number of each rule within the policy, remove specific rules, and modify various other policy settings.
        </Span>
            </TextBlock>

            <HyperlinkButton x:Uid="GuideButtonAtTop" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/PolicyEditor" />

        </controls:WrapPanel>

        <Border x:Name="MainBorder"
            Grid.Row="1"
            Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                <Button x:Name="BrowseForPolicyButton" IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" Click="{x:Bind ViewModel.BrowseForPolicyButton_Click}"
                    VerticalAlignment="Center" HorizontalAlignment="Center" RightTapped="{x:Bind BrowseForPolicyButton_RightTappedOrHolding}" Holding="{x:Bind BrowseForPolicyButton_RightTappedOrHolding}"
                        ToolTipService.ToolTip="Browse for an App Control XML policy file">

                    <Button.Flyout>
                        <Flyout x:Name="BrowseForPolicyButton_Flyout">

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                <Button x:Uid="ClearButton" Click="{x:Bind ViewModel.ClearButton_Click}" />

                                <TextBlock x:Uid="ViewSelectedFilesTextBlock" TextWrapping="WrapWholeWords" />

                                <TextBox x:Name="BrowseForPolicyButton_SelectedFilesTextBox" Text="{x:Bind ViewModel.SelectedPolicyFile, Mode=OneWay}"
                                    TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                    MinWidth="400" IsReadOnly="True" />

                            </controls:WrapPanel>

                        </Flyout>
                    </Button.Flyout>

                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                <AnimatedIcon.Source>
                                    <animatedvisuals:CurlyArrow/>
                                </AnimatedIcon.Source>
                            </AnimatedIcon>
                            <TextBlock Text="Browse For Policy" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>

                </Button>

                <Button IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"
                       ToolTipService.ToolTip="Load the selected App Control policy to the user interface" Click="{x:Bind ViewModel.ProcessData}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                <AnimatedIcon.Source>
                                    <animatedvisuals:Dotsload/>
                                </AnimatedIcon.Source>
                            </AnimatedIcon>
                            <TextBlock Text="Load Policy" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <Button VerticalAlignment="Center" IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" HorizontalAlignment="Center"
                        ToolTipService.ToolTip="Save the changes made to the List Views back to the policy XML file" Click="{x:Bind ViewModel.SaveChanges}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                <AnimatedIcon.Source>
                                    <animatedvisuals:Confetti/>
                                </AnimatedIcon.Source>
                            </AnimatedIcon>
                            <TextBlock Text="Save The Changes" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <TeachingTip IsOpen="{x:Bind ViewModel.MainTeachingTipIsOpen, Mode=OneWay}" Title="{x:Bind ViewModel.MainTeachingTitle, Mode=OneWay}"
                             Subtitle="{x:Bind ViewModel.MainTeachingSubTitle, Mode=OneWay}"  Target="{x:Bind MainBorder}" />

                <TextBox HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="SearchBoxTextBox" IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" TextChanged="SearchBox_TextChanged" PlaceholderText="Search the data...  " />

                <ToggleSwitch HorizontalAlignment="Center" VerticalAlignment="Center" Toggled="{x:Bind ViewModel.ChangeTextSelectionsState}" OnContent="Text Selection is Enabled" OffContent="Text Selection is Disabled"
                              ToolTipService.ToolTip="Enable or Disable the ability to be able to select texts in the List View rows" IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}"/>


                <Button IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"
                       ToolTipService.ToolTip="Clears all of the data loaded on the UI from the selected policy" Click="{x:Bind ViewModel.ClearData}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <AnimatedIcon Height="25" Width="25" Margin="-5,-5,0,-5">
                                <AnimatedIcon.Source>
                                    <animatedvisuals:TrashCan/>
                                </AnimatedIcon.Source>
                            </AnimatedIcon>
                            <TextBlock Text="Clear the Data" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                </Button>
                
            </controls:WrapPanel>
        </Border>

        <TabView VerticalAlignment="Stretch"
         IsAddTabButtonVisible="False" Grid.Row="2" TabWidthMode="SizeToContent"
         CanReorderTabs="False">
            <!--
            <TabView.Resources>
                <SolidColorBrush x:Key="TabViewBackground" Color="{ThemeResource SystemAccentColorLight2}"/>
            </TabView.Resources>
            -->

            <TabView.TabStripFooter>
                <Button x:Name="tabheaderimage" Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Right"
                        ToolTipService.ToolTip="View the total count of each rule type and other details about the loaded policy" Margin="0,0,3,-6" Padding="0" BorderThickness="0">
                    <Button.Content>
                        <AnimatedIcon Height="28" Width="28" Margin="0">
                            <AnimatedIcon.Source>
                                <animatedvisuals:SparklingDiamond/>
                            </AnimatedIcon.Source>
                        </AnimatedIcon>
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout>
                            <ScrollViewer VerticalScrollBarVisibility="Visible" VerticalScrollMode="Enabled" Padding="8" IsVerticalRailEnabled="True">
                                <StackPanel MaxWidth="400">
                                    <TextBlock Text="File-based Rules" Margin="0,0,0,10" TextWrapping="Wrap" Style="{StaticResource SubtitleTextBlockStyle}" />
                                    <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">
                                        <Run Text="They encompass both the " />
                                        <Run Text="Allow" FontWeight="Bold" Foreground="Violet"/>
                                        <Run Text=" and " />
                                        <Run Text="Deny" FontWeight="Bold" Foreground="Violet"/>
                                        <Run Text=" classifications for the following rule types: "/>
                                        <Run Text="File Path, Hash, File Publisher, WHQL File Publisher, WildCard File Path, Package Family Name, Signed Version, File Name"/>
                                    </TextBlock>
                                    <TextBlock Text="{x:Bind ViewModel.AllowRulesCount, Mode=OneWay}" IsTextSelectionEnabled="True"/>
                                    <TextBlock Text="{x:Bind ViewModel.DenyRulesCount, Mode=OneWay}" IsTextSelectionEnabled="True"/>
                                    <TextBlock Text="{x:Bind ViewModel.FileRulesCount, Mode=OneWay}" IsTextSelectionEnabled="True"/>
                                    <TextBlock Text="{x:Bind ViewModel.FileAttributesCount, Mode=OneWay}" IsTextSelectionEnabled="True"/>
                                    <TextBlock Text="{x:Bind ViewModel.FilePublishersCount, Mode=OneWay}" IsTextSelectionEnabled="True"/>
                                    <TextBlock Text="{x:Bind ViewModel.WHQLFilePublishersCount, Mode=OneWay}" IsTextSelectionEnabled="True"/>
                                    <MenuFlyoutSeparator Margin="0,15,0,15"/>
                                    <TextBlock Text="Signature-based Rules" Margin="0,0,0,10" TextWrapping="Wrap" Style="{StaticResource SubtitleTextBlockStyle}"/>
                                    <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">
                                        <Run Text="They encompass both the " />
                                        <Run Text="Allow" FontWeight="Bold" Foreground="Violet"/>
                                        <Run Text=" and " />
                                        <Run Text="Deny" FontWeight="Bold" Foreground="Violet"/>
                                        <Run Text=" classifications for the following rule types: "/>
                                        <Run Text="Publisher, Leaf Certificate, PCA Certificate, Root Certificate, WHQL Publisher, WHQL"/>
                                    </TextBlock>
                                    <TextBlock Text="{x:Bind ViewModel.WHQLPublishersCount, Mode=OneWay}" IsTextSelectionEnabled="True"/>
                                    <TextBlock Text="{x:Bind ViewModel.GenericSignersCount, Mode=OneWay}" IsTextSelectionEnabled="True"/>
                                    <TextBlock Text="{x:Bind ViewModel.UpdatePolicySignersCount, Mode=OneWay}" IsTextSelectionEnabled="True"/>
                                    <TextBlock Text="{x:Bind ViewModel.SupplementalPolicySignersCount, Mode=OneWay}" IsTextSelectionEnabled="True"/>
                                </StackPanel>
                            </ScrollViewer>
                        </Flyout>
                    </Button.Flyout>
                </Button>
            </TabView.TabStripFooter>

            <!-- File-based rules tab -->
            <TabViewItem Header="{x:Bind ViewModel.FileBasedCollectionTabItemHeader, Mode=OneWay}" IsClosable="False" MinWidth="280" MinHeight="40">

                <TabViewItem.IconSource>
                    <BitmapIconSource UriSource="/Assets/External/file.png" ShowAsMonochrome="False" />
                </TabViewItem.IconSource>
                <TabViewItem.Content>

                    <Grid>

                        <win:Grid.ChildrenTransitions>
                            <win:EntranceThemeTransition FromVerticalOffset="50" />
                            <win:RepositionThemeTransition IsStaggeringEnabled="False" />
                        </win:Grid.ChildrenTransitions>

                        <ListView x:Name="FileBasedRulesListView"
                        IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}"
                        SelectionMode="Extended"
                        ScrollViewer.HorizontalScrollMode="Enabled"
                        ScrollViewer.IsHorizontalRailEnabled="True"
                        ScrollViewer.HorizontalScrollBarVisibility="Visible"
                        ShowsScrollingPlaceholders="True"
                        ItemsSource="{x:Bind ViewModel.FileRulesCollection, Mode=OneWay}"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ContainerContentChanging="FileBasedRulesListView_ContainerContentChanging"
                        SelectionChanged="FileBasedRulesListView_SelectionChanged">

                            <ListView.Header>

                                <Border CornerRadius="5" Background="Black">
                                    <interactivity:Interaction.Behaviors>
                                        <behaviors:StickyHeaderBehavior />
                                    </interactivity:Interaction.Behaviors>
                                    <Grid>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth1, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth2, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth3, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth4, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth5, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth6, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth7, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth8, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth9, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth10, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth11, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth12, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth13, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.FileBasedColumnWidth14, Mode=OneWay}" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="ID" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="0" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Friendly Name" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="1" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Hash" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="2" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="File Name" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="3" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Internal Name" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="4" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="File Description" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="5" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Product Name" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="6" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="File Path" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="7" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Minimum File Version" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="8" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Maximum File Version" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="9" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Package Family Name" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="10" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Package Version" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="11" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="App IDs" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="12" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Type" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="13" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                    </Grid>
                                </Border>
                            </ListView.Header>

                            <!-- DataTemplate for ListView items -->
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="PolicyEditor:FileBasedRulesForListView">
                                    <!-- Setting Background="Transparent" on the Grid makes it hit-test visible, meaning that even areas without any child elements (like empty spaces in the column) will respond to pointer events.  -->
                                    <Grid Background="Transparent">

                                        <Grid.ContextFlyout>
                                            <MenuFlyout>

                                                <MenuFlyoutItem Text="Delete Row" Click="FileBasedRulesListView_DeleteItems">
                                                    <MenuFlyoutItem.Icon>
                                                        <FontIcon Glyph="&#xE74D;" />
                                                    </MenuFlyoutItem.Icon>
                                                </MenuFlyoutItem>

                                            </MenuFlyout>
                                        </Grid.ContextFlyout>

                                        <Grid.ColumnDefinitions>
                                            <!-- Accessing the ColumnWidth variables in the ViewModel class through the reference
                                        that we include in every instance of the class that the "x:DataType" uses.
                                        This enables us to use compiled binding instead of "Binding". -->
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth1, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth2, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth3, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth4, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth5, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth6, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth7, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth8, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth9, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth10, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth11, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth12, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth13, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.FileBasedColumnWidth14, Mode=OneWay}" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind Id}" HorizontalAlignment="Left" Grid.Column="0" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind FriendlyName}" HorizontalAlignment="Left" Grid.Column="1" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind Hash}" HorizontalAlignment="Left" Grid.Column="2" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind FileName}" HorizontalAlignment="Left" Grid.Column="3" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind InternalName}" HorizontalAlignment="Left" Grid.Column="4" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind FileDescription}" HorizontalAlignment="Left" Grid.Column="5" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind ProductName}" HorizontalAlignment="Left" Grid.Column="6" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind FilePath}" HorizontalAlignment="Left" Grid.Column="7" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind MinimumFileVersion}" HorizontalAlignment="Left" Grid.Column="8" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind MaximumFileVersion}" HorizontalAlignment="Left" Grid.Column="9" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind PackageFamilyName}" HorizontalAlignment="Left" Grid.Column="10" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind PackageVersion}" HorizontalAlignment="Left" Grid.Column="11" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind AppIDs}" HorizontalAlignment="Left" Grid.Column="12" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind Type}" HorizontalAlignment="Left" Grid.Column="13" Margin="0,2,2,2"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                    </Grid>

                </TabViewItem.Content>
            </TabViewItem>

            <!-- Signature-based rules tab -->
            <TabViewItem Header="{x:Bind ViewModel.SignatureBasedCollectionTabItemHeader, Mode=OneWay}" IsClosable="False" MinWidth="300">
                <TabViewItem.IconSource>
                    <BitmapIconSource UriSource="/Assets/External/signature.png" ShowAsMonochrome="False" />
                </TabViewItem.IconSource>
                <TabViewItem.Content>

                    <Grid>

                        <win:Grid.ChildrenTransitions>
                            <win:EntranceThemeTransition FromVerticalOffset="50" />
                            <win:RepositionThemeTransition IsStaggeringEnabled="False" />
                        </win:Grid.ChildrenTransitions>

                        <ListView x:Name="SignatureBasedRulesListView"
                        SelectionMode="Extended"
                        IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}"
                        ScrollViewer.HorizontalScrollMode="Enabled"
                        ScrollViewer.IsHorizontalRailEnabled="True"
                        ScrollViewer.HorizontalScrollBarVisibility="Visible"
                        ShowsScrollingPlaceholders="True"
                        ItemsSource="{x:Bind ViewModel.SignatureRulesCollection, Mode=OneWay}"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        ContainerContentChanging="SignatureBasedRulesListView_ContainerContentChanging"
                        SelectionChanged="SignatureBasedRulesListView_SelectionChanged">

                            <ListView.Header>

                                <Border CornerRadius="5" Background="Black">
                                    <interactivity:Interaction.Behaviors>
                                        <behaviors:StickyHeaderBehavior />
                                    </interactivity:Interaction.Behaviors>
                                    <Grid>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{x:Bind ViewModel.SignatureBasedColumnWidth1, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.SignatureBasedColumnWidth2, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.SignatureBasedColumnWidth3, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.SignatureBasedColumnWidth4, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.SignatureBasedColumnWidth5, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.SignatureBasedColumnWidth6, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ViewModel.SignatureBasedColumnWidth7, Mode=OneWay}" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="ID" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="0" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Name" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="1" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Cert Root" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="2" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Cert Publisher" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="3" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Cert OEM ID" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="4" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Cert EKU" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="5" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                        <TextBlock Text="Cert Issuer" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="6" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                                    </Grid>
                                </Border>
                            </ListView.Header>

                            <!-- DataTemplate for ListView items -->
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="PolicyEditor:SignatureBasedRulesForListView">
                                    <!-- Setting Background="Transparent" on the Grid makes it hit-test visible, meaning that even areas without any child elements (like empty spaces in the column) will respond to pointer events.  -->
                                    <Grid Background="Transparent">

                                        <Grid.ContextFlyout>
                                            <MenuFlyout>

                                                <MenuFlyoutItem Text="Delete Row" Click="SignatureBasedRulesListView_DeleteItems">
                                                    <MenuFlyoutItem.Icon>
                                                        <FontIcon Glyph="&#xE74D;" />
                                                    </MenuFlyoutItem.Icon>
                                                </MenuFlyoutItem>

                                            </MenuFlyout>
                                        </Grid.ContextFlyout>

                                        <Grid.ColumnDefinitions>
                                            <!-- Accessing the ColumnWidth variables in the ViewModel class through the reference
                                        that we include in every instance of the class that the "x:DataType" uses.
                                        This enables us to use compiled binding instead of "Binding". -->
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.SignatureBasedColumnWidth1, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.SignatureBasedColumnWidth2, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.SignatureBasedColumnWidth3, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.SignatureBasedColumnWidth4, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.SignatureBasedColumnWidth5, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.SignatureBasedColumnWidth6, Mode=OneWay}" />
                                            <ColumnDefinition Width="{x:Bind ParentViewModel.SignatureBasedColumnWidth7, Mode=OneWay}" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind Id}" HorizontalAlignment="Left" Grid.Column="0" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind Name}" HorizontalAlignment="Left" Grid.Column="1" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind CertRoot}" HorizontalAlignment="Left" Grid.Column="2" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind CertPublisher}" HorizontalAlignment="Left" Grid.Column="3" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind CertOemID}" HorizontalAlignment="Left" Grid.Column="4" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind CertificateEKU}" HorizontalAlignment="Left" Grid.Column="5" Margin="0,2,2,2"/>
                                        <TextBlock IsTextSelectionEnabled="{x:Bind ParentViewModel.TextsAreSelectableToggleState, Mode=OneWay}" Text="{x:Bind CertIssuer}" HorizontalAlignment="Left" Grid.Column="6" Margin="0,2,2,2"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                    </Grid>
                </TabViewItem.Content>
            </TabViewItem>


            <TabViewItem Header="Policy Details" IsClosable="False" Visibility="Visible" MinWidth="200">
                <TabViewItem.IconSource>
                    <BitmapIconSource UriSource="/Assets/External/Sparkle.png" ShowAsMonochrome="False" />
                </TabViewItem.IconSource>
                <TabViewItem.Content>

                    <ScrollViewer>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <StackPanel HorizontalAlignment="Stretch"
                                    Spacing="{StaticResource SettingsCardSpacing}" Grid.Row="0" Margin="0,40,0,0">

                                <win:StackPanel.ChildrenTransitions>
                                    <win:EntranceThemeTransition FromVerticalOffset="50" />
                                    <win:RepositionThemeTransition IsStaggeringEnabled="False" />
                                </win:StackPanel.ChildrenTransitions>

                                <controls:SettingsCard
                                    Description="The name of the selected App Control policy"
                                    Header="Policy Name"
                                    HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/External/Name.png}" IsClickEnabled="False">

                                    <TextBox IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" PlaceholderText="Policy Name" Text="{x:Bind ViewModel.PolicyNameTextBox, Mode=TwoWay}" />

                                </controls:SettingsCard>

                                <controls:SettingsCard
                                    Description="The Policy ID of the selected App Control policy"
                                    Header="Policy ID"
                                    HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/External/ID.png}" IsClickEnabled="False">

                                    <TextBox IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" PlaceholderText="Policy ID" Text="{x:Bind ViewModel.PolicyIDTextBox, Mode=TwoWay}" />

                                </controls:SettingsCard>

                                <controls:SettingsCard
                                    Description="The Base Policy ID of the selected App Control policy"
                                    Header="Base Policy ID"
                                    HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/External/BasePolicyID.png}" IsClickEnabled="False">

                                    <TextBox IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" PlaceholderText="Base Policy ID" Text="{x:Bind ViewModel.PolicyBaseIDTextBox, Mode=TwoWay}" />

                                </controls:SettingsCard>

                                <controls:SettingsCard
                                    Description="The version of the selected App Control policy"
                                    Header="Policy Version"
                                    HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/External/Version.png}" IsClickEnabled="False">

                                    <TextBox IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" PlaceholderText="Policy Version" Text="{x:Bind ViewModel.PolicyVersionTextBox, Mode=TwoWay}" />

                                </controls:SettingsCard>

                                <controls:SettingsCard
                                    Description="The Type of the selected App Control policy"
                                    Header="Policy Type" IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}"
                                    HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/External/PolicyType.png}" IsClickEnabled="True" Click="{x:Bind PolicyTypeSettingsCard_Click}" IsActionIconVisible="False">

                                    <ComboBox IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" x:Name="PolicyTypeComboBox" PlaceholderText="Policy Type" ItemsSource="{x:Bind ViewModel.ComboBoxSource, Mode=OneTime}" SelectedItem="{x:Bind ViewModel.PolicyTypeComboBox, Mode=TwoWay}" />

                                </controls:SettingsCard>

                                <controls:SettingsCard
                                    Description="The Policy Info ID of the selected App Contorl policy"
                                    Header="Policy Info ID"
                                    HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/External/PolicyIDInfo.png}" IsClickEnabled="False">

                                    <TextBox IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" PlaceholderText="Policy Info ID" Text="{x:Bind ViewModel.PolicyInfoIDTextBox, Mode=TwoWay}" />

                                </controls:SettingsCard>

                                <controls:SettingsCard
                                    Description="The Hypervisor-Protected Code Integrity Level of the selected App Control policy"
                                    Header="HVCI Level" IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}"
                                    HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/External/HVCIOption.png}" IsClickEnabled="True" Click="{x:Bind PolicyHVCIOptionsComboBox_Click}" IsActionIconVisible="False">

                                    <ComboBox IsEnabled="{x:Bind ViewModel.UIElementsEnabledState, Mode=OneWay}" x:Name="PolicyHVCIOptionsComboBox" PlaceholderText="HVCI Level" SelectedItem="{x:Bind ViewModel.HVCIOptionComboBox, Mode=TwoWay}">
                                        <ComboBox.Items>
                                            <x:String>Enabled - Strict</x:String>
                                            <x:String>Enabled</x:String>
                                            <x:String>Debug Mode</x:String>
                                            <x:String>Disable is Allowed</x:String>
                                            <x:String>None</x:String>
                                        </ComboBox.Items>
                                    </ComboBox>

                                </controls:SettingsCard>

                            </StackPanel>

                        </Grid>

                    </ScrollViewer>

                </TabViewItem.Content>
            </TabViewItem>


            <TabViewItem Header="Custom Policy Settings (Coming Soon)" IsClosable="False" Visibility="Visible" IsEnabled="False" MinWidth="260">
                <TabViewItem.IconSource>
                    <BitmapIconSource UriSource="/Assets/External/setting.png" ShowAsMonochrome="False" />
                </TabViewItem.IconSource>
                <TabViewItem.Content>
                    <StackPanel Padding="12">
                        <TextBlock Text="Custom Policy Settings (Coming Soon)" Style="{ThemeResource TitleTextBlockStyle}"/>
                    </StackPanel>
                </TabViewItem.Content>
            </TabViewItem>

        </TabView>

    </Grid>
</Page>
