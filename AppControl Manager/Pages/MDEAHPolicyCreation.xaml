<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.MDEAHPolicyCreation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:intelgathering="using:AppControlManager.IntelGathering"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:behaviors="using:CommunityToolkit.WinUI.Behaviors"   
    x:Name="MDEAHPolicyCreationXAML"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    mc:Ignorable="d">


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <controls:WrapPanel Grid.Row="0" VerticalSpacing="4" HorizontalSpacing="4" Orientation="Vertical" Margin="6,0,6,0">

            <TextBlock TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}">
                <Span>
                    Leverage <Italic>Microsoft Defender for Endpoint</Italic>
                        <Run Foreground="{ThemeResource SystemAccentColor}">Advanced Hunting</Run>
                    exported logs to build Application Control Policies.
                    Begin by browsing for the MDE AH CSV logs, then click the
                    <Underline><Bold>Scan button</Bold></Underline> to populate the data grid.
                    Once populated, use the <Underline><Bold>Create Policy button</Bold></Underline>
                    to define output configuration and generate the XML policy file.
                </Span>
            </TextBlock>

            <HyperlinkButton x:Uid="GuideButtonAtTop" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Create-Policy-From-MDE-Advanced-Hunting" />

        </controls:WrapPanel>

        <InfoBar x:Name="MainInfoBar" Grid.Row="1" Visibility="Collapsed" />

        <controls:WrapPanel Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

            <ProgressRing x:Name="ScanLogsProgressRing" Visibility="Collapsed" IsActive="False"/>

            <SelectorBar x:Name="MenuSelectorBar" SelectionChanged="MenuSelectorBar_SelectionChanged" HorizontalAlignment="Left" VerticalAlignment="Center">
                <SelectorBarItem x:Name="SelectorBarItemMain" Text="Local" IsSelected="True"/>
                <SelectorBarItem x:Name="SelectorBarItemCloud" Text="Cloud"/>
                <SelectorBarItem x:Name="SelectorBarItemCreate" Text="Create"/>
            </SelectorBar>

            <TextBox x:Uid="TotalLogsTextBlock"
                x:Name="TotalCountOfTheFilesTextBox"
                IsReadOnly="True"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"/>

            <TextBox x:Name="SearchBox" x:Uid="SearchBoxTextBox" TextChanged="SearchBox_TextChanged" VerticalAlignment="Center" VerticalContentAlignment="Center" />

            <CalendarDatePicker x:Name="FilterByDateCalendarPicker" PlaceholderText="Filter logs by date" ToolTipService.ToolTip="Will only show logs that are newer than the selected date"/>


        </controls:WrapPanel>

        <Border Grid.Row="3" Visibility="{x:Bind IsLocalSelected, Mode=OneWay}"
            Margin="0,10,0,10"
            Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                <!-- Scan MDE Advanced Hunting button -->
                <Button x:Name="ScanLogs" IsEnabled="False" ToolTipService.ToolTip="Once you select MDE Advanced Hunting logs, you can use this button to scan them and display their results in the grid below" Style="{StaticResource AccentButtonStyle}" Click="ScanLogs_Click" >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xEE6F;" />
                            <TextBlock Text="Scan Logs" Margin="5,0,0,0" />

                        </StackPanel>
                    </Button.Content>
                </Button>

                <Button x:Name="BrowseForLogs" ToolTipService.ToolTip="Browse for Advanced Hunting Logs" Click="BrowseForLogs_Click"
                        Holding="BrowseForLogs_Holding" RightTapped="BrowseForLogs_RightTapped">

                    <Button.Flyout>
                        <Flyout x:Name="BrowseForLogs_Flyout">

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                <Button x:Uid="ClearButton" Click="BrowseForLogs_Flyout_Clear_Click" />

                                <TextBlock Text="View the log files you selected." TextWrapping="WrapWholeWords" />

                                <TextBox x:Name="BrowseForLogs_SelectedFilesTextBox"
                                    TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                    MinWidth="400" IsReadOnly="True" />

                            </controls:WrapPanel>

                        </Flyout>
                    </Button.Flyout>

                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xEC50;" />
                            <TextBlock Text="Browse for MDE Advanced Hunting logs" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                </Button>


            </controls:WrapPanel>
        </Border>


        <Border Grid.Row="3" Visibility="{x:Bind IsCloudSelected, Mode=OneWay}"
              Margin="0,10,0,10" Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                <Button Content="Sign In" x:Name="MSGraphSignInButton" Click="MSGraphSignInButton_Click" ToolTipService.ToolTip="Sign into your tenant"/>

                <Button Content="Sign Out" IsEnabled="False" x:Name="MSGraphSignOutButton" Click="MSGraphSignOutButton_Click" ToolTipService.ToolTip="Sign out of your tenant and discard any saved authentication tokens"/>

                <Button Content="Cancel Sign In" x:Name="MSGraphCancelSignInButton" IsEnabled="False" Click="MSGraphCancelSignInButton_Click" ToolTipService.ToolTip="Cancel the sign in process"/>

                <Button Content="Device Name" x:Name="MSGraphDeviceNameButton" ToolTipService.ToolTip="Enter a device name to filter the incoming logs">
                    <Button.Flyout>
                        <Flyout>
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="CornerRadius" Value="8" />
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="3" VerticalSpacing="8">
                                <TextBox Width="300" Header="Optional: Choose a device name to filter the logs before retrieval" PlaceholderText="Device Name..." x:Name="DeviceNameTextBox"/>
                            </controls:WrapPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>


                <Button Content="Retrieve The Logs" x:Name="RetrieveTheLogsButton" IsEnabled="False" Click="RetrieveTheLogsButton_Click" ToolTipService.ToolTip="Retrieve the logs by submitting an Advanced Hunting query to MDE"/>

                <Button Content="Query Examples" ToolTipService.ToolTip="You can copy the following queries and use them in the MDE Advanced Hunting portal to generate standard logs that are compatible with the AppControl Manager, or you can use the built-in functionality of the application to automatically retrieve the logs and process them">
                    <Button.Flyout>
                        <Flyout>

                            <ListView ItemsSource="{x:Bind AdvancedHuntingQueries, Mode=OneWay}"
                                    SelectionMode="None">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" Width="300"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>

                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="local:MDEAdvancedHuntingQueriesForMDEAHPolicyCreationPage">
                                        <StackPanel Margin="0,0,0,12" HorizontalAlignment="Center">
                                            <!-- Title -->
                                            <TextBlock
                                                Text="{x:Bind QueryTitle}"
                                                TextWrapping="WrapWholeWords"
                                                FontWeight="Bold"
                                                HorizontalAlignment="Center"
                                                FontSize="16"
                                                Margin="0,5,0,5"/>

                                            <!-- Copy Button -->
                                            <!-- The button's content is a Grid containing two TextBlocks: one for the normal text and one for the copied state -->
                                            <Button x:Name="CopyButton" Click="CopyButton_Click" HorizontalAlignment="Center" Margin="0,0,0,5">
                                                <Grid>
                                                    <TextBlock x:Name="NormalText" Text="Copy" Opacity="1"/>
                                                    <TextBlock x:Name="CopiedText" Text="Copied" Opacity="0"/>
                                                </Grid>
                                            </Button>

                                            <!-- Query Text -->
                                            <TextBox Text="{x:Bind Query}" IsReadOnly="True" TextWrapping="Wrap"
                                            HorizontalAlignment="Center"
                                            Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                        </Flyout>
                    </Button.Flyout>
                </Button>

            </controls:WrapPanel>

        </Border>


        <Border Grid.Row="3" Visibility="{x:Bind IsCreateSelected, Mode=OneWay}"
            Margin="0,10,0,10" Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">


                <SplitButton x:Name="CreatePolicyButton" ToolTipService.ToolTip="Create the supplemental policy based on the MDE Advanced Hunting logs" Click="CreatePolicyButton_Click">

                    <SplitButton.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xECCD;" />
                            <TextBlock Text="Create Policy for Selected Base" Margin="5,0,0,0" />
                        </StackPanel>
                    </SplitButton.Content>

                    <SplitButton.Flyout>
                        <Flyout Placement="Bottom">

                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="Padding" Value="0" />
                                    <!-- Same corner radius as the one in PanelStyle  -->
                                    <Setter Property="CornerRadius" Value="8" />

                                    <!--
                                  Important: the "resolution order" for widths (at least in winui) is minwidth, maxwidth, width
                                  Width does not override MaxWidth
                                  https://learn.microsoft.com/en-us/uwp/api/windows.ui.xaml.frameworkelement.maxwidth?view=winrt-26100#remarks
                                  -->
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>


                            <StackPanel
                                VerticalAlignment="Top"
                                Orientation="Vertical"
                                Spacing="8">
                                <controls:Segmented x:Name="segmentedControl"
                                    HorizontalAlignment="Stretch"
                                    SelectedIndex="1" SelectionChanged="SegmentedControl_SelectionChanged">
                                    <controls:SegmentedItem Content="Add To Policy"
                                            Tag="AddToPolicy" Width="160" Icon="{ui:FontIcon Glyph=&#xEB49;}" />
                                    <controls:SegmentedItem Content="Base Policy File"
                                            Tag="BasePolicyFile" Width="160" Icon="{ui:FontIcon Glyph=&#xEB49;}"/>
                                    <controls:SegmentedItem Content="Base GUID"
                                            Tag="BaseGUID" Width="130" Icon="{ui:FontIcon Glyph=&#xEB49;}"/>
                                </controls:Segmented>
                                <controls:SwitchPresenter Value="{Binding SelectedItem.Tag, ElementName=segmentedControl}" HorizontalAlignment="Center">

                                    <controls:Case Value="AddToPolicy">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                            Style="{StaticResource PanelStyle}">

                                            <TextBlock Margin="5" VerticalAlignment="Center" TextWrapping="WrapWholeWords">
                                                <Span>Browse for a XML policy file to add <Bold>the logs</Bold> to </Span>
                                            </TextBlock>

                                            <Button Margin="5" x:Name="AddToPolicyButton" Content="Browse" ToolTipService.ToolTip="Select a XML file to add the scanned logs to" Style="{StaticResource AccentButtonStyle}" Click="AddToPolicyButton_Click" />

                                        </StackPanel>
                                    </controls:Case>
                                    <controls:Case Value="BasePolicyFile">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                            Style="{StaticResource PanelStyle}">


                                            <TextBlock Margin="5" VerticalAlignment="Center" TextWrapping="WrapWholeWords" Width="290" >
                                               <Span>Browse for a <Bold>base</Bold>
                                                    policy XML file that this <Underline>Supplemental</Underline> policy will belong to </Span>
                                            </TextBlock>

                                            <Button Margin="5" x:Name="BasePolicyFileButton" Content="Browse" ToolTipService.ToolTip="Select a base policy that this supplemental policy will belong to." Style="{StaticResource AccentButtonStyle}" Click="BasePolicyFileButton_Click" />


                                        </StackPanel>
                                    </controls:Case>

                                    <controls:Case Value="BaseGUID">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
                                            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
                                            Style="{StaticResource PanelStyle}">

                                            <TextBox x:Name="BaseGUIDTextBox" PlaceholderText="Enter a Base policy GUID" Width="300" Margin="10" VerticalAlignment="Center" VerticalContentAlignment="Center" ToolTipService.ToolTip="Enter the Base GUID" />

                                            <Button Margin="5" x:Name="BaseGUIDSubmitButton" Content="Submit" ToolTipService.ToolTip="Submit the GUID" Style="{StaticResource AccentButtonStyle}" Click="BaseGUIDSubmitButton_Click" />

                                        </StackPanel>
                                    </controls:Case>
                                </controls:SwitchPresenter>
                            </StackPanel>

                        </Flyout>
                    </SplitButton.Flyout>

                </SplitButton>

                <DropDownButton x:Uid="ExtraActionsDropDownButton">
                    <DropDownButton.Flyout>

                        <MenuFlyout Placement="Bottom">

                            <MenuFlyoutItem x:Uid="SelectAllMenuFlyoutItem" Click="SelectAll_Click">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE762;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutItem x:Uid="DeSelectAllMenuFlyoutItem" Click="DeSelectAll_Click">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE8E6;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutItem Click="ClearDataButton_Click" x:Uid="ClearDataMenuFlyoutItem">
                                <MenuFlyoutItem.Icon>
                                    <SymbolIcon Symbol="Delete" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutSeparator/>

                            <ToggleMenuFlyoutItem x:Name="DeployPolicyToggle" x:Uid="DeployAfterCreationMenuFlyoutItem" IsChecked="False">
                                <ToggleMenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE896;"/>
                                </ToggleMenuFlyoutItem.Icon>
                            </ToggleMenuFlyoutItem>

                        </MenuFlyout>

                    </DropDownButton.Flyout>
                </DropDownButton>


                <Button>
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE8CB;" />
                            <TextBlock Text="Sort" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                    <Button.Flyout>
                        <MenuFlyout>

                            <ToggleMenuFlyoutItem x:Name="SortingDirectionToggle" Text="Descending Sorting" IsChecked="True"/>

                            <MenuFlyoutSeparator/>

                            <MenuFlyoutItem x:Uid="FileNameHeader" Click="ColumnSortingButton_FileName_Click"/>
                            <MenuFlyoutItem x:Uid="TimeCreatedHeader" Click="ColumnSortingButton_TimeCreated_Click"/>
                            <MenuFlyoutItem x:Uid="SignatureStatusHeader" Click="ColumnSortingButton_SignatureStatus_Click"/>
                            <MenuFlyoutItem x:Uid="ActionHeader" Click="ColumnSortingButton_Action_Click"/>
                            <MenuFlyoutItem x:Uid="OriginalFileNameHeader" Click="ColumnSortingButton_OriginalFileName_Click"/>
                            <MenuFlyoutItem x:Uid="InternalNameHeader" Click="ColumnSortingButton_InternalName_Click"/>
                            <MenuFlyoutItem x:Uid="FileDescriptionHeader" Click="ColumnSortingButton_FileDescription_Click"/>
                            <MenuFlyoutItem x:Uid="FileVersionHeader" Click="ColumnSortingButton_FileVersion_Click"/>
                            <MenuFlyoutItem x:Uid="SHA256HashHeader" Click="ColumnSortingButton_SHA256Hash_Click"/>
                            <MenuFlyoutItem x:Uid="SHA1HashHeader" Click="ColumnSortingButton_SHA1Hash_Click"/>
                            <MenuFlyoutItem x:Uid="SHA256FlatHashHeader" Click="ColumnSortingButton_SHA256FlatHash_Click"/>
                            <MenuFlyoutItem x:Uid="SHA1FlatHashHeader" Click="ColumnSortingButton_SHA1FlatHash_Click"/>
                            <MenuFlyoutItem x:Uid="SigningScenarioHeader" Click="ColumnSortingButton_SigningScenario_Click"/>
                            <MenuFlyoutItem x:Uid="FilePathHeader" Click="ColumnSortingButton_FilePath_Click"/>
                            <MenuFlyoutItem x:Uid="ComputerNameHeader" Click="ColumnSortingButton_ComputerName_Click"/>
                            <MenuFlyoutItem x:Uid="PolicyGUIDHeader" Click="ColumnSortingButton_PolicyGUID_Click"/>
                            <MenuFlyoutItem x:Uid="PolicyNameHeader" Click="ColumnSortingButton_PolicyName_Click"/>
                            <MenuFlyoutItem x:Uid="FilePublishersHeader" Click="ColumnSortingButton_FilePublishers_Click"/>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>

                <Button Content="Policy Name">
                    <Button.Flyout>
                        <Flyout>
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="CornerRadius" Value="8" />
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="3" VerticalSpacing="8">
                                <TextBox Width="300" Header="Optional: Choose a policy name" PlaceholderText="Policy Name..." x:Name="PolicyNameTextBox"/>
                            </controls:WrapPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <ComboBox SelectionChanged="ScanLevelComboBox_SelectionChanged" x:Name="ScanLevelComboBox" x:Uid="ScanLevelComboBox" PlaceholderText="Scan level">
                    <x:String>FilePublisher</x:String>
                    <x:String>Publisher</x:String>
                    <x:String>Hash</x:String>
                </ComboBox>

            </controls:WrapPanel>

        </Border>

        <ListView x:Name="FileIdentitiesListView"
             Grid.Row="4"
             SelectionMode="Extended"
             ScrollViewer.HorizontalScrollMode="Enabled"
             ScrollViewer.IsHorizontalRailEnabled="True"
             ScrollViewer.HorizontalScrollBarVisibility="Visible"
             ShowsScrollingPlaceholders="True"
             ScrollViewer.VerticalScrollBarVisibility="Visible"
             ContainerContentChanging="ListView_ContainerContentChanging">

            <ListView.Header>

                <Border CornerRadius="5" Background="Black">
                    <interactivity:Interaction.Behaviors>
                        <behaviors:StickyHeaderBehavior />
                    </interactivity:Interaction.Behaviors>
                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{x:Bind ColumnWidth1, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth2, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth3, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth4, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth5, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth6, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth7, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth8, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth9, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth10, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth11, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth12, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth13, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth14, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth15, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth16, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth17, Mode=OneWay}" />
                            <ColumnDefinition Width="{x:Bind ColumnWidth18, Mode=OneWay}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Uid="FileNameHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="0" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="TimeCreatedHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="1" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SignatureStatusHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="2" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="ActionHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="3" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="OriginalFileNameHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="4" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="InternalNameHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="5" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="FileDescriptionHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="6" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="FileVersionHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="7" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SHA256HashHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="8" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SHA1HashHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="9" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SHA256FlatHashHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="10" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SHA1FlatHashHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="11" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="SigningScenarioHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="12" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="FilePathHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="13" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="ComputerNameHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="14" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="PolicyGUIDHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="15" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="PolicyNameHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="16" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                        <TextBlock x:Uid="FilePublishersHeader" Foreground="LightGray" HorizontalAlignment="Stretch" Grid.Column="17" FontWeight="Bold" Margin="10,0,2,0" Padding="5"/>
                    </Grid>
                </Border>
            </ListView.Header>

            <!-- DataTemplate for ListView items -->
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="intelgathering:FileIdentity">
                    <!-- Setting Background="Transparent" on the Grid makes it hit-test visible, meaning that even areas without any child elements (like empty spaces in the column) will respond to pointer events.  -->
                    <Grid Background="Transparent">
                        <Grid.ContextFlyout>
                            <MenuFlyout>

                                <MenuFlyoutItem Text="Delete Row" Click="ListViewFlyoutMenuDelete_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE74D;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem Text="Copy Row" Click="ListViewFlyoutMenuCopy_Click">
                                    <MenuFlyoutItem.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="C" Modifiers="Control" Invoked="CtrlC_Invoked"/>
                                    </MenuFlyoutItem.KeyboardAccelerators>
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSubItem Text="Copy Individual Items">
                                    <MenuFlyoutSubItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;" />
                                    </MenuFlyoutSubItem.Icon>

                                    <MenuFlyoutSubItem.Items>

                                        <MenuFlyoutItem x:Uid="FileNameHeader" Click="CopyFileName_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="TimeCreatedHeader" Click="CopyTimeCreated_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SignatureStatusHeader" Click="CopySignatureStatus_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="ActionHeader" Click="CopyAction_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="OriginalFileNameHeader" Click="CopyOriginalFileName_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="InternalNameHeader" Click="CopyInternalName_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FileDescriptionHeader" Click="CopyFileDescription_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FileVersionHeader" Click="CopyFileVersion_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA256HashHeader" Click="CopySHA256Hash_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA1HashHeader" Click="CopySHA1Hash_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA256FlatHashHeader" Click="CopySHA256FlatHash_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SHA1FlatHashHeader" Click="CopySHA1FlatHash_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="SigningScenarioHeader" Click="CopySigningScenario_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FilePathHeader" Click="CopyFilePath_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="ComputerNameHeader" Click="CopyComputerName_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="PolicyGUIDHeader" Click="CopyPolicyGUiD_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="PolicyNameHeader" Click="CopyPolicyName_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem x:Uid="FilePublishersHeader" Click="CopyFilePublishers_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE8C8;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                    </MenuFlyoutSubItem.Items>

                                </MenuFlyoutSubItem>
                            </MenuFlyout>
                        </Grid.ContextFlyout>

                        <Grid.ColumnDefinitions>
                            <!-- Use standard Binding with ElementName to refer back to the page's properties
                                because in here the Data Context is set to FileIdentity so we cannot use x.Bind
                                since a single FileIdentity item can't have the ColumnWidth properties of all of the columns
                                And static properties wouldn't work since more than 1 ListViews might be assigning values to the static values at the same time -->
                            <ColumnDefinition Width="{Binding ColumnWidth1, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth2, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth3, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth4, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth5, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth6, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth7, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth8, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth9, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth10, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth11, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth12, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth13, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth14, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth15, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth16, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth17, ElementName=MDEAHPolicyCreationXAML}" />
                            <ColumnDefinition Width="{Binding ColumnWidth18, ElementName=MDEAHPolicyCreationXAML}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Bind FileName}" HorizontalAlignment="Left" Grid.Column="0" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind TimeCreated}" HorizontalAlignment="Left" Grid.Column="1" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SignatureStatus}" HorizontalAlignment="Left" Grid.Column="2" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind Action}" HorizontalAlignment="Left" Grid.Column="3" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind OriginalFileName}" HorizontalAlignment="Left" Grid.Column="4" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind InternalName}" HorizontalAlignment="Left" Grid.Column="5" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind FileDescription}" HorizontalAlignment="Left" Grid.Column="6" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind FileVersion}" HorizontalAlignment="Left" Grid.Column="7" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SHA256Hash}" HorizontalAlignment="Left" Grid.Column="8" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SHA1Hash}" HorizontalAlignment="Left" Grid.Column="9" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SHA256FlatHash}" HorizontalAlignment="Left" Grid.Column="10" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SHA1FlatHash}" HorizontalAlignment="Left" Grid.Column="11" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind SISigningScenario}" HorizontalAlignment="Left" Grid.Column="12" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind FilePath}" HorizontalAlignment="Left" Grid.Column="13" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind ComputerName}" HorizontalAlignment="Left" Grid.Column="14" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind PolicyGUID}" HorizontalAlignment="Left" Grid.Column="15" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind PolicyName}" HorizontalAlignment="Left" Grid.Column="16" Margin="0,2,2,2"/>
                        <TextBlock Text="{x:Bind FilePublishersToDisplay}" HorizontalAlignment="Left" Grid.Column="17" Margin="0,2,2,2"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

    </Grid>
</Page>
