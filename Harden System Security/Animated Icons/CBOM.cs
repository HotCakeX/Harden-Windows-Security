//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.2.250604.1+b02a3ee244
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile CBOM.json
//       
//       Input file:
//           CBOM.json (107847 bytes created 13:44+03:00 Oct 9 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |    42 |
// |--------------------------+-------|
// | Expression animators     |     1 |
// | KeyFrame animators       |     3 |
// | Reference parameters     |     1 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     1 |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     1 |
// | CompositionSpriteShapes  |     2 |
// |--------------------------+-------|
// | Brushes                  |     2 |
// | Gradient stops           |     3 |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
	// Name:        ticket
	// Frame rate:  24 fps
	// Frame count: 28
	// Duration:    1166.7 mS
	// _____________________________________________________________________________________________
	// |           Marker           |           Constant           | Frame |   mS   |   Progress   |
	// |____________________________|______________________________|_______|________|______________|
	// | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
	// | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
	// | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
	// | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
	// | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
	// | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
	// | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
	// | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
	// ---------------------------------------------------------------------------------------------
	sealed partial class CBOM
		: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
		, Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		// Animation duration: 1.167 seconds.
		internal const long c_durationTicks = 11666666;

		// Marker: NormalToPressed_Start.
		internal const float M_NormalToPressed_Start = 0F;

		// Marker: NormalToPressed_End.
		internal const float M_NormalToPressed_End = 0.323214293F;

		// Marker: PointerOverToPressed_Start.
		internal const float M_PointerOverToPressed_Start = 0.323214293F;

		// Marker: PointerOverToPressed_End.
		internal const float M_PointerOverToPressed_End = 0.680357158F;

		// Marker: PressedToNormal_Start.
		internal const float M_PressedToNormal_Start = 0.716071427F;

		// Marker: PressedToNormal_End.
		internal const float M_PressedToNormal_End = 1F;

		// Marker: PressedToPointerOver_Start.
		internal const float M_PressedToPointerOver_Start = 1F;

		// Marker: PressedToPointerOver_End.
		internal const float M_PressedToPointerOver_End = 1F;

		public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
		{
			object ignored = null;
			return TryCreateAnimatedVisual(compositor, out ignored);
		}

		public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
		{
			diagnostics = null;

			var res =
				new CBOM_AnimatedVisual(
					compositor
					);
			res.CreateAnimations();
			return res;
		}

		/// <summary>
		/// Gets the number of frames in the animation.
		/// </summary>
		public double FrameCount => 28d;

		/// <summary>
		/// Gets the frame rate of the animation.
		/// </summary>
		public double Framerate => 24d;

		/// <summary>
		/// Gets the duration of the animation.
		/// </summary>
		public TimeSpan Duration => TimeSpan.FromTicks(11666666);

		/// <summary>
		/// Converts a zero-based frame number to the corresponding progress value denoting the
		/// start of the frame.
		/// </summary>
		public double FrameToProgress(double frameNumber)
		{
			return frameNumber / 28d;
		}

		/// <summary>
		/// Returns a map from marker names to corresponding progress values.
		/// </summary>
		public IReadOnlyDictionary<string, double> Markers =>
			new Dictionary<string, double>
			{
				{ "NormalToPressed_Start", 0d },
				{ "NormalToPressed_End", 0.323214285714286 },
				{ "PointerOverToPressed_Start", 0.323214285714286 },
				{ "PointerOverToPressed_End", 0.680357142857143 },
				{ "PressedToNormal_Start", 0.716071428571429 },
				{ "PressedToNormal_End", 1d },
				{ "PressedToPointerOver_Start", 1d },
				{ "PressedToPointerOver_End", 1d },
			};

		/// <summary>
		/// Sets the color property with the given name, or does nothing if no such property
		/// exists.
		/// </summary>
		public void SetColorProperty(string propertyName, Color value)
		{
		}

		/// <summary>
		/// Sets the scalar property with the given name, or does nothing if no such property
		/// exists.
		/// </summary>
		public void SetScalarProperty(string propertyName, double value)
		{
		}

		sealed partial class CBOM_AnimatedVisual
			: Microsoft.UI.Xaml.Controls.IAnimatedVisual
			, Microsoft.UI.Xaml.Controls.IAnimatedVisual2
		{
			const long c_durationTicks = 11666666;
			readonly Compositor _c;
			readonly ExpressionAnimation _reusableExpressionAnimation;
			AnimationController _animationController_0;
			CanvasGeometry _geometry_01;
			CanvasGeometry _geometry_02;
			CanvasGeometry _geometry_04;
			CanvasGeometry _geometry_05;
			CanvasGeometry _geometry_06;
			CanvasGeometry _geometry_07;
			CanvasGeometry _geometry_08;
			CompositionColorGradientStop _gradientStop_1_AlmostGold_FFFDC52B;
			CompositionContainerShape _containerShape;
			CompositionPath _path_0;
			CompositionPath _path_1;
			CompositionPathGeometry _pathGeometry_0;
			CompositionSpriteShape _spriteShape_0;
			ContainerVisual _root;
			CubicBezierEasingFunction _cubicBezierEasingFunction_0;
			StepEasingFunction _holdThenStepEasingFunction;
			StepEasingFunction _stepThenHoldEasingFunction;

			void BindProperty(
				CompositionObject target,
				string animatedPropertyName,
				string expression,
				string referenceParameterName,
				CompositionObject referencedObject)
			{
				_reusableExpressionAnimation.ClearAllParameters();
				_reusableExpressionAnimation.Expression = expression;
				_reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
				target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
			}

			PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreatePathKeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreateScalarKeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			AnimationController AnimationController_0()
			{
				if (_animationController_0 != null) { return _animationController_0; }
				var result = _animationController_0 = _c.CreateAnimationController();
				result.Pause();
				BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
				return result;
			}

			CanvasGeometry Geometry_00()
			{
				var result = CanvasGeometry.CreateGroup(
					null,
					new CanvasGeometry[] { Geometry_01(), Geometry_02(), Geometry_03(), Geometry_04(), Geometry_05(), Geometry_06(), Geometry_07(), Geometry_08() },
					CanvasFilledRegionDetermination.Winding);
				return result;
			}

			CanvasGeometry Geometry_01()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(20F, -3.977F));
					builder.AddCubicBezier(new Vector2(20F, -3.977F), new Vector2(20F, -13F), new Vector2(20F, -13F));
					builder.AddCubicBezier(new Vector2(20F, -14.1049995F), new Vector2(19.1049995F, -15F), new Vector2(18F, -15F));
					builder.AddCubicBezier(new Vector2(18F, -15F), new Vector2(-18F, -15F), new Vector2(-18F, -15F));
					builder.AddCubicBezier(new Vector2(-19.1049995F, -15F), new Vector2(-20F, -14.1049995F), new Vector2(-20F, -13F));
					builder.AddCubicBezier(new Vector2(-20F, -13F), new Vector2(-20F, -3.977F), new Vector2(-20F, -3.977F));
					builder.AddCubicBezier(new Vector2(-18.7919998F, -3.06500006F), new Vector2(-18F, -1.63F), new Vector2(-18F, 0F));
					builder.AddCubicBezier(new Vector2(-18F, 1.63F), new Vector2(-18.7919998F, 3.06500006F), new Vector2(-20F, 3.977F));
					builder.AddCubicBezier(new Vector2(-20F, 3.977F), new Vector2(-20F, 13F), new Vector2(-20F, 13F));
					builder.AddCubicBezier(new Vector2(-20F, 14.1049995F), new Vector2(-19.1049995F, 15F), new Vector2(-18F, 15F));
					builder.AddCubicBezier(new Vector2(-18F, 15F), new Vector2(18F, 15F), new Vector2(18F, 15F));
					builder.AddCubicBezier(new Vector2(19.1049995F, 15F), new Vector2(20F, 14.1049995F), new Vector2(20F, 13F));
					builder.AddCubicBezier(new Vector2(20F, 13F), new Vector2(20F, 3.977F), new Vector2(20F, 3.977F));
					builder.AddCubicBezier(new Vector2(18.7919998F, 3.06399989F), new Vector2(18F, 1.63F), new Vector2(18F, 0F));
					builder.AddCubicBezier(new Vector2(18F, -1.63F), new Vector2(18.7919998F, -3.06500006F), new Vector2(20F, -3.977F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = _geometry_01 = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_02()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(11F, 13F));
					builder.AddCubicBezier(new Vector2(10.448F, 13F), new Vector2(10F, 12.552F), new Vector2(10F, 12F));
					builder.AddCubicBezier(new Vector2(10F, 11.448F), new Vector2(10.448F, 11F), new Vector2(11F, 11F));
					builder.AddCubicBezier(new Vector2(11.552F, 11F), new Vector2(12F, 11.448F), new Vector2(12F, 12F));
					builder.AddCubicBezier(new Vector2(12F, 12.552F), new Vector2(11.552F, 13F), new Vector2(11F, 13F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = _geometry_02 = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_03()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(11.0200005F, 9.00899982F));
					builder.AddCubicBezier(new Vector2(10.4680004F, 9.00899982F), new Vector2(10F, 8.55200005F), new Vector2(10F, 8F));
					builder.AddCubicBezier(new Vector2(10F, 7.44799995F), new Vector2(10.448F, 7F), new Vector2(11F, 7F));
					builder.AddCubicBezier(new Vector2(11.552F, 7F), new Vector2(12F, 7.44799995F), new Vector2(12F, 8F));
					builder.AddCubicBezier(new Vector2(12F, 8.55200005F), new Vector2(11.5719995F, 9.00899982F), new Vector2(11.0200005F, 9.00899982F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_04()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(11F, 5F));
					builder.AddCubicBezier(new Vector2(10.448F, 5F), new Vector2(10F, 4.55200005F), new Vector2(10F, 4F));
					builder.AddCubicBezier(new Vector2(10F, 3.44799995F), new Vector2(10.448F, 3F), new Vector2(11F, 3F));
					builder.AddCubicBezier(new Vector2(11.552F, 3F), new Vector2(12F, 3.44799995F), new Vector2(12F, 4F));
					builder.AddCubicBezier(new Vector2(12F, 4.55200005F), new Vector2(11.552F, 5F), new Vector2(11F, 5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = _geometry_04 = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_05()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(11F, 1F));
					builder.AddCubicBezier(new Vector2(10.448F, 1F), new Vector2(10F, 0.551999986F), new Vector2(10F, 0F));
					builder.AddCubicBezier(new Vector2(10F, -0.551999986F), new Vector2(10.448F, -1F), new Vector2(11F, -1F));
					builder.AddCubicBezier(new Vector2(11.552F, -1F), new Vector2(12F, -0.551999986F), new Vector2(12F, 0F));
					builder.AddCubicBezier(new Vector2(12F, 0.551999986F), new Vector2(11.552F, 1F), new Vector2(11F, 1F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = _geometry_05 = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_06()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(11F, -3F));
					builder.AddCubicBezier(new Vector2(10.448F, -3F), new Vector2(10F, -3.44799995F), new Vector2(10F, -4F));
					builder.AddCubicBezier(new Vector2(10F, -4.55200005F), new Vector2(10.448F, -5F), new Vector2(11F, -5F));
					builder.AddCubicBezier(new Vector2(11.552F, -5F), new Vector2(12F, -4.55200005F), new Vector2(12F, -4F));
					builder.AddCubicBezier(new Vector2(12F, -3.44799995F), new Vector2(11.552F, -3F), new Vector2(11F, -3F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = _geometry_06 = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_07()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(11F, -7F));
					builder.AddCubicBezier(new Vector2(10.448F, -7F), new Vector2(10F, -7.44799995F), new Vector2(10F, -8F));
					builder.AddCubicBezier(new Vector2(10F, -8.55200005F), new Vector2(10.448F, -9F), new Vector2(11F, -9F));
					builder.AddCubicBezier(new Vector2(11.552F, -9F), new Vector2(12F, -8.55200005F), new Vector2(12F, -8F));
					builder.AddCubicBezier(new Vector2(12F, -7.44799995F), new Vector2(11.552F, -7F), new Vector2(11F, -7F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = _geometry_07 = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_08()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(11F, -11F));
					builder.AddCubicBezier(new Vector2(10.448F, -11F), new Vector2(10F, -11.448F), new Vector2(10F, -12F));
					builder.AddCubicBezier(new Vector2(10F, -12.552F), new Vector2(10.448F, -13F), new Vector2(11F, -13F));
					builder.AddCubicBezier(new Vector2(11.552F, -13F), new Vector2(12F, -12.552F), new Vector2(12F, -12F));
					builder.AddCubicBezier(new Vector2(12F, -11.448F), new Vector2(11.552F, -11F), new Vector2(11F, -11F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = _geometry_08 = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_09()
			{
				var result = CanvasGeometry.CreateGroup(
					null,
					new CanvasGeometry[] { Geometry_01(), Geometry_10(), Geometry_11(), Geometry_04(), Geometry_05(), Geometry_06(), Geometry_07(), Geometry_08() },
					CanvasFilledRegionDetermination.Winding);
				return result;
			}

			CanvasGeometry Geometry_10()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(10.9729996F, 12.5950003F));
					builder.AddCubicBezier(new Vector2(10.4209995F, 12.5950003F), new Vector2(10F, 12.552F), new Vector2(10F, 12F));
					builder.AddCubicBezier(new Vector2(10F, 11.448F), new Vector2(10.448F, 11F), new Vector2(11F, 11F));
					builder.AddCubicBezier(new Vector2(11.552F, 11F), new Vector2(12F, 11.448F), new Vector2(12F, 12F));
					builder.AddCubicBezier(new Vector2(12F, 12.552F), new Vector2(11.5249996F, 12.5950003F), new Vector2(10.9729996F, 12.5950003F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_11()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(11.0249996F, 8.63300037F));
					builder.AddCubicBezier(new Vector2(10.4729996F, 8.63300037F), new Vector2(10F, 8.55200005F), new Vector2(10F, 8F));
					builder.AddCubicBezier(new Vector2(10F, 7.44799995F), new Vector2(10.448F, 7F), new Vector2(11F, 7F));
					builder.AddCubicBezier(new Vector2(11.552F, 7F), new Vector2(12F, 7.44799995F), new Vector2(12F, 8F));
					builder.AddCubicBezier(new Vector2(12F, 8.55200005F), new Vector2(11.5769997F, 8.63300037F), new Vector2(11.0249996F, 8.63300037F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - Layer aggregator
			// - - ShapeGroup: Group 1
			// - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
			CanvasGeometry Geometry_12()
			{
				var result = CanvasGeometry.CreateGroup(
					null,
					new CanvasGeometry[] { Geometry_13(), Geometry_02(), Geometry_14(), Geometry_04(), Geometry_05(), Geometry_06(), Geometry_07(), Geometry_08() },
					CanvasFilledRegionDetermination.Winding);
				return result;
			}

			// - - - - - Layer aggregator
			// - - - ShapeGroup: Group 1
			// - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
			CanvasGeometry Geometry_13()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(20F, -3.977F));
					builder.AddLine(new Vector2(20F, -13F));
					builder.AddCubicBezier(new Vector2(20F, -14.1049995F), new Vector2(19.1049995F, -15F), new Vector2(18F, -15F));
					builder.AddLine(new Vector2(-18F, -15F));
					builder.AddCubicBezier(new Vector2(-19.1049995F, -15F), new Vector2(-20F, -14.1049995F), new Vector2(-20F, -13F));
					builder.AddLine(new Vector2(-20F, -3.977F));
					builder.AddCubicBezier(new Vector2(-18.7919998F, -3.06500006F), new Vector2(-18F, -1.63F), new Vector2(-18F, 0F));
					builder.AddCubicBezier(new Vector2(-18F, 1.63F), new Vector2(-18.7919998F, 3.06500006F), new Vector2(-20F, 3.977F));
					builder.AddLine(new Vector2(-20F, 13F));
					builder.AddCubicBezier(new Vector2(-20F, 14.1049995F), new Vector2(-19.1049995F, 15F), new Vector2(-18F, 15F));
					builder.AddLine(new Vector2(18F, 15F));
					builder.AddCubicBezier(new Vector2(19.1049995F, 15F), new Vector2(20F, 14.1049995F), new Vector2(20F, 13F));
					builder.AddLine(new Vector2(20F, 3.977F));
					builder.AddCubicBezier(new Vector2(18.7919998F, 3.06399989F), new Vector2(18F, 1.63F), new Vector2(18F, 0F));
					builder.AddCubicBezier(new Vector2(18F, -1.63F), new Vector2(18.7919998F, -3.06500006F), new Vector2(20F, -3.977F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - ShapeGroup: Group 1
			// - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
			CanvasGeometry Geometry_14()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(11F, 9F));
					builder.AddCubicBezier(new Vector2(10.448F, 9F), new Vector2(10F, 8.55200005F), new Vector2(10F, 8F));
					builder.AddCubicBezier(new Vector2(10F, 7.44799995F), new Vector2(10.448F, 7F), new Vector2(11F, 7F));
					builder.AddCubicBezier(new Vector2(11.552F, 7F), new Vector2(12F, 7.44799995F), new Vector2(12F, 8F));
					builder.AddCubicBezier(new Vector2(12F, 8.55200005F), new Vector2(11.552F, 9F), new Vector2(11F, 9F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - Layer aggregator
			// - Transforms: ticket-2
			// Stop 0
			CompositionColorGradientStop GradientStop_0_AlmostDarkOrange_FFE97B01()
			{
				return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xE9, 0x7B, 0x01));
			}

			// - - - Layer aggregator
			// - ShapeGroup: Group 1
			// Stop 0
			CompositionColorGradientStop GradientStop_0_AlmostKhaki_FFFFD769()
			{
				return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xFF, 0xD7, 0x69));
			}

			// Stop 1
			CompositionColorGradientStop GradientStop_1_AlmostGold_FFFDC52B()
			{
				return (_gradientStop_1_AlmostGold_FFFDC52B == null)
					? _gradientStop_1_AlmostGold_FFFDC52B = _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0xFD, 0xC5, 0x2B))
					: _gradientStop_1_AlmostGold_FFFDC52B;
			}

			// Layer aggregator
			CompositionContainerShape ContainerShape()
			{
				if (_containerShape != null) { return _containerShape; }
				var result = _containerShape = _c.CreateContainerShape();
				result.CenterPoint = new Vector2(-20F, 15F);
				result.Offset = new Vector2(36F, 141F);
				result.Scale = new Vector2(4F, 4F);
				var shapes = result.Shapes;
				// Transforms: ticket-2
				shapes.Add(SpriteShape_0());
				// ShapeGroup: Group 1
				shapes.Add(SpriteShape_1());
				return result;
			}

			// - - Layer aggregator
			// Transforms: ticket-2
			CompositionLinearGradientBrush LinearGradientBrush_0()
			{
				var result = _c.CreateLinearGradientBrush();
				var colorStops = result.ColorStops;
				colorStops.Add(GradientStop_0_AlmostDarkOrange_FFE97B01());
				colorStops.Add(GradientStop_1_AlmostGold_FFFDC52B());
				result.MappingMode = CompositionMappingMode.Absolute;
				result.StartPoint = new Vector2(11.75F, 17.75F);
				result.EndPoint = new Vector2(-7.35500002F, -14.2489996F);
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 1
			CompositionLinearGradientBrush LinearGradientBrush_1()
			{
				var result = _c.CreateLinearGradientBrush();
				var colorStops = result.ColorStops;
				colorStops.Add(GradientStop_0_AlmostKhaki_FFFFD769());
				colorStops.Add(GradientStop_1_AlmostGold_FFFDC52B());
				result.MappingMode = CompositionMappingMode.Absolute;
				result.StartPoint = new Vector2(-8.25F, -14.25F);
				result.EndPoint = new Vector2(9.39500046F, 16.0009995F);
				return result;
			}

			CompositionPath Path_0()
			{
				if (_path_0 != null) { return _path_0; }
				var result = _path_0 = new CompositionPath(Geometry_00());
				return result;
			}

			CompositionPath Path_1()
			{
				if (_path_1 != null) { return _path_1; }
				var result = _path_1 = new CompositionPath(Geometry_09());
				return result;
			}

			// - - Layer aggregator
			// Transforms: ticket-2
			// Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
			CompositionPathGeometry PathGeometry_0()
			{
				if (_pathGeometry_0 != null) { return _pathGeometry_0; }
				var result = _pathGeometry_0 = _c.CreatePathGeometry();
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 1
			// Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
			CompositionPathGeometry PathGeometry_1()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_12()));
			}

			// - Layer aggregator
			// Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1
			CompositionSpriteShape SpriteShape_0()
			{
				if (_spriteShape_0 != null) { return _spriteShape_0; }
				var result = _spriteShape_0 = _c.CreateSpriteShape(PathGeometry_0());
				result.CenterPoint = new Vector2(-20F, 15F);
				result.FillBrush = LinearGradientBrush_0();
				return result;
			}

			// - Layer aggregator
			// Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1
			CompositionSpriteShape SpriteShape_1()
			{
				var result = _c.CreateSpriteShape(PathGeometry_1());
				result.FillBrush = LinearGradientBrush_1();
				return result;
			}

			// The root of the composition.
			ContainerVisual Root()
			{
				if (_root != null) { return _root; }
				var result = _root = _c.CreateContainerVisual();
				var propertySet = result.Properties;
				propertySet.InsertScalar("Progress", 0F);
				// Layer aggregator
				result.Children.InsertAtTop(ShapeVisual_0());
				return result;
			}

			CubicBezierEasingFunction CubicBezierEasingFunction_0()
			{
				return (_cubicBezierEasingFunction_0 == null)
					? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
					: _cubicBezierEasingFunction_0;
			}

			// - - - Layer aggregator
			// - Transforms: ticket-2
			// Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_0()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, Path_0(), HoldThenStepEasingFunction());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, Path_1(), CubicBezierEasingFunction_0());
				// Frame 19.
				result.InsertKeyFrame(0.678571403F, Path_1(), CubicBezierEasingFunction_0());
				// Frame 22.
				result.InsertKeyFrame(0.785714269F, Path_0(), CubicBezierEasingFunction_0());
				return result;
			}

			// - - Layer aggregator
			// Transforms: ticket-2
			// Rotation
			ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_0()
			{
				// Frame 0.
				var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
				// Frame 6.
				result.InsertKeyFrame(0.214285716F, 0F, HoldThenStepEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, -3F, CubicBezierEasingFunction_0());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, 4F, CubicBezierEasingFunction_0());
				// Frame 19.
				result.InsertKeyFrame(0.678571403F, 4F, CubicBezierEasingFunction_0());
				// Frame 22.
				result.InsertKeyFrame(0.785714269F, -3F, CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, 0F, CubicBezierEasingFunction_0());
				return result;
			}

			// - Layer aggregator
			// Rotation
			ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_1()
			{
				// Frame 0.
				var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, 0F, HoldThenStepEasingFunction());
				// Frame 6.
				result.InsertKeyFrame(0.214285716F, 4F, CubicBezierEasingFunction_0());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, -8F, CubicBezierEasingFunction_0());
				// Frame 12.
				result.InsertKeyFrame(0.428571433F, 0F, CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.666999996F, 1F)));
				// Frame 19.
				result.InsertKeyFrame(0.678571403F, 4F, CubicBezierEasingFunction_0());
				// Frame 22.
				result.InsertKeyFrame(0.785714269F, -8F, CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, 0F, CubicBezierEasingFunction_0());
				return result;
			}

			// Layer aggregator
			ShapeVisual ShapeVisual_0()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(192F, 192F);
				result.Shapes.Add(ContainerShape());
				return result;
			}

			StepEasingFunction HoldThenStepEasingFunction()
			{
				if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
				var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
				result.IsFinalStepSingleFrame = true;
				return result;
			}

			StepEasingFunction StepThenHoldEasingFunction()
			{
				if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
				var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
				result.IsInitialStepSingleFrame = true;
				return result;
			}

			internal CBOM_AnimatedVisual(
				Compositor compositor
				)
			{
				_c = compositor;
				_reusableExpressionAnimation = compositor.CreateExpressionAnimation();
				Root();
			}

			public Visual RootVisual => _root;
			public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
			public Vector2 Size => new Vector2(192F, 192F);
			void IDisposable.Dispose() => _root?.Dispose();

			public void CreateAnimations()
			{
				_containerShape.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_1(), AnimationController_0());
				_pathGeometry_0.StartAnimation("Path", PathKeyFrameAnimation_0(), AnimationController_0());
				_spriteShape_0.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_0(), AnimationController_0());
			}

			public void DestroyAnimations()
			{
				_containerShape.StopAnimation("RotationAngleInDegrees");
				_pathGeometry_0.StopAnimation("Path");
				_spriteShape_0.StopAnimation("RotationAngleInDegrees");
			}

		}
	}
}
