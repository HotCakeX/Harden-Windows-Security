//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.1.240821.1+077322fa26
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile TrashCan.json
//       
//       Input file:
//           TrashCan.json (184186 bytes created 10:34+02:00 Mar 15 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |    72 |
// |--------------------------+-------|
// | Expression animators     |     2 |
// | KeyFrame animators       |     8 |
// | Reference parameters     |     3 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     3 |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     2 |
// | CompositionSpriteShapes  |     7 |
// |--------------------------+-------|
// | Brushes                  |     4 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
	// Name:        waste
	// Frame rate:  24 fps
	// Frame count: 28
	// Duration:    1166.7 mS
	// _____________________________________________________________________________________________
	// |           Marker           |           Constant           | Frame |   mS   |   Progress   |
	// |____________________________|______________________________|_______|________|______________|
	// | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
	// | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
	// | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
	// | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
	// | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
	// | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
	// | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
	// | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
	// ---------------------------------------------------------------------------------------------
	sealed partial class TrashCan
		: Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
		, Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
	{
		// Animation duration: 1.167 seconds.
		internal const long c_durationTicks = 11666666;

		// Marker: NormalToPressed_Start.
		internal const float M_NormalToPressed_Start = 0F;

		// Marker: NormalToPressed_End.
		internal const float M_NormalToPressed_End = 0.323214293F;

		// Marker: PointerOverToPressed_Start.
		internal const float M_PointerOverToPressed_Start = 0.323214293F;

		// Marker: PointerOverToPressed_End.
		internal const float M_PointerOverToPressed_End = 0.680357158F;

		// Marker: PressedToNormal_Start.
		internal const float M_PressedToNormal_Start = 0.716071427F;

		// Marker: PressedToNormal_End.
		internal const float M_PressedToNormal_End = 1F;

		// Marker: PressedToPointerOver_Start.
		internal const float M_PressedToPointerOver_Start = 1F;

		// Marker: PressedToPointerOver_End.
		internal const float M_PressedToPointerOver_End = 1F;

		public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
		{
			object ignored = null;
			return TryCreateAnimatedVisual(compositor, out ignored);
		}

		public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
		{
			diagnostics = null;

			var res =
				new TrashCan_AnimatedVisual(
					compositor
					);
			res.CreateAnimations();
			return res;
		}

		/// <summary>
		/// Gets the number of frames in the animation.
		/// </summary>
		public double FrameCount => 28d;

		/// <summary>
		/// Gets the frame rate of the animation.
		/// </summary>
		public double Framerate => 24d;

		/// <summary>
		/// Gets the duration of the animation.
		/// </summary>
		public TimeSpan Duration => TimeSpan.FromTicks(11666666);

		/// <summary>
		/// Converts a zero-based frame number to the corresponding progress value denoting the
		/// start of the frame.
		/// </summary>
		public double FrameToProgress(double frameNumber)
		{
			return frameNumber / 28d;
		}

		/// <summary>
		/// Returns a map from marker names to corresponding progress values.
		/// </summary>
		public IReadOnlyDictionary<string, double> Markers =>
			new Dictionary<string, double>
			{
				{ "NormalToPressed_Start", 0d },
				{ "NormalToPressed_End", 0.323214285714286 },
				{ "PointerOverToPressed_Start", 0.323214285714286 },
				{ "PointerOverToPressed_End", 0.680357142857143 },
				{ "PressedToNormal_Start", 0.716071428571429 },
				{ "PressedToNormal_End", 1d },
				{ "PressedToPointerOver_Start", 1d },
				{ "PressedToPointerOver_End", 1d },
			};

		/// <summary>
		/// Sets the color property with the given name, or does nothing if no such property
		/// exists.
		/// </summary>
		public void SetColorProperty(string propertyName, Color value)
		{
		}

		/// <summary>
		/// Sets the scalar property with the given name, or does nothing if no such property
		/// exists.
		/// </summary>
		public void SetScalarProperty(string propertyName, double value)
		{
		}

		sealed partial class TrashCan_AnimatedVisual
			: Microsoft.UI.Xaml.Controls.IAnimatedVisual
			, Microsoft.UI.Xaml.Controls.IAnimatedVisual2
		{
			const long c_durationTicks = 11666666;
			readonly Compositor _c;
			readonly ExpressionAnimation _reusableExpressionAnimation;
			AnimationController _animationController_0;
			CompositionColorBrush _colorBrush_AlmostMediumPurple_FF7985CA;
			CompositionColorBrush _colorBrush_AlmostSlateBlue_FF5C6BC0;
			CompositionContainerShape _containerShape_0;
			CompositionContainerShape _containerShape_1;
			CompositionPath _path_0;
			CompositionPath _path_1;
			CompositionPath _path_2;
			CompositionPathGeometry _pathGeometry_0;
			CompositionPathGeometry _pathGeometry_2;
			CompositionPathGeometry _pathGeometry_3;
			CompositionSpriteShape _spriteShape_0;
			ContainerVisual _root;
			CubicBezierEasingFunction _cubicBezierEasingFunction_0;
			StepEasingFunction _holdThenStepEasingFunction;
			StepEasingFunction _stepThenHoldEasingFunction;

			void BindProperty(
				CompositionObject target,
				string animatedPropertyName,
				string expression,
				string referenceParameterName,
				CompositionObject referencedObject)
			{
				_reusableExpressionAnimation.ClearAllParameters();
				_reusableExpressionAnimation.Expression = expression;
				_reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
				target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
			}

			PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreatePathKeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreateScalarKeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
			{
				var result = _c.CreateVector2KeyFrameAnimation();
				result.Duration = TimeSpan.FromTicks(c_durationTicks);
				result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
				return result;
			}

			CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
			{
				var result = _c.CreateSpriteShape(geometry);
				result.TransformMatrix = transformMatrix;
				result.FillBrush = fillBrush;
				return result;
			}

			AnimationController AnimationController_0()
			{
				if (_animationController_0 != null) { return _animationController_0; }
				var result = _animationController_0 = _c.CreateAnimationController();
				result.Pause();
				BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
				return result;
			}

			CanvasGeometry Geometry_00()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-12F, -14.5F));
					builder.AddCubicBezier(new Vector2(-12F, -14.5F), new Vector2(-12F, 0.973999977F), new Vector2(-12F, 0.973999977F));
					builder.AddCubicBezier(new Vector2(-12F, 0.973999977F), new Vector2(-12F, 10.5F), new Vector2(-12F, 10.5F));
					builder.AddCubicBezier(new Vector2(-12F, 12.7089996F), new Vector2(-10.2089996F, 14.5F), new Vector2(-8F, 14.5F));
					builder.AddCubicBezier(new Vector2(-8F, 14.5F), new Vector2(8F, 14.5F), new Vector2(8F, 14.5F));
					builder.AddCubicBezier(new Vector2(10.2089996F, 14.5F), new Vector2(12F, 12.7089996F), new Vector2(12F, 10.5F));
					builder.AddCubicBezier(new Vector2(12F, 10.5F), new Vector2(12F, 0.973999977F), new Vector2(12F, 0.973999977F));
					builder.AddCubicBezier(new Vector2(12F, 0.973999977F), new Vector2(12F, -14.5F), new Vector2(12F, -14.5F));
					builder.AddCubicBezier(new Vector2(12F, -14.5F), new Vector2(-12F, -14.5F), new Vector2(-12F, -14.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - ShapeGroup: Group 6 Offset:<24, 27.5>
			// - Path
			CanvasGeometry Geometry_01()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-12F, -14.5F));
					builder.AddCubicBezier(new Vector2(-12F, -14.5F), new Vector2(-13.0629997F, -9.16800022F), new Vector2(-13.0629997F, 0.666000009F));
					builder.AddCubicBezier(new Vector2(-13.0629997F, 7.78700018F), new Vector2(-12F, 10.5F), new Vector2(-12F, 10.5F));
					builder.AddCubicBezier(new Vector2(-12F, 12.7089996F), new Vector2(-10.2089996F, 14.5F), new Vector2(-8F, 14.5F));
					builder.AddCubicBezier(new Vector2(-8F, 14.5F), new Vector2(8F, 14.5F), new Vector2(8F, 14.5F));
					builder.AddCubicBezier(new Vector2(10.2089996F, 14.5F), new Vector2(12F, 12.7089996F), new Vector2(12F, 10.5F));
					builder.AddCubicBezier(new Vector2(12F, 10.5F), new Vector2(13F, 7.79099989F), new Vector2(13F, 0.670000017F));
					builder.AddCubicBezier(new Vector2(13F, -9.16399956F), new Vector2(12F, -14.5F), new Vector2(12F, -14.5F));
					builder.AddCubicBezier(new Vector2(12F, -14.5F), new Vector2(-12F, -14.5F), new Vector2(-12F, -14.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - ShapeGroup: Group 6 Offset:<24, 27.5>
			// - Path
			CanvasGeometry Geometry_02()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-12F, -14.5F));
					builder.AddCubicBezier(new Vector2(-12F, -14.5F), new Vector2(-10.8129997F, -4.15299988F), new Vector2(-10.8129997F, 1.04400003F));
					builder.AddCubicBezier(new Vector2(-10.8129997F, 4.22100019F), new Vector2(-12F, 10.5F), new Vector2(-12F, 10.5F));
					builder.AddCubicBezier(new Vector2(-12.3129997F, 12.816F), new Vector2(-10.2089996F, 14.5F), new Vector2(-8F, 14.5F));
					builder.AddCubicBezier(new Vector2(-8F, 14.5F), new Vector2(8F, 14.5F), new Vector2(8F, 14.5F));
					builder.AddCubicBezier(new Vector2(10.2089996F, 14.5F), new Vector2(12.2659998F, 12.7119999F), new Vector2(12F, 10.5F));
					builder.AddCubicBezier(new Vector2(12F, 10.5F), new Vector2(10.8129997F, 4.22100019F), new Vector2(10.8129997F, 1.04400003F));
					builder.AddCubicBezier(new Vector2(10.8129997F, -4.15199995F), new Vector2(12F, -14.5F), new Vector2(12F, -14.5F));
					builder.AddCubicBezier(new Vector2(12F, -14.5F), new Vector2(-12F, -14.5F), new Vector2(-12F, -14.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - ShapeGroup: Group 6 Offset:<24, 27.5>
			// - Path
			CanvasGeometry Geometry_03()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-12F, -14.5F));
					builder.AddCubicBezier(new Vector2(-12F, -14.5F), new Vector2(-12.625F, -9.16800022F), new Vector2(-12.625F, 0.666000009F));
					builder.AddCubicBezier(new Vector2(-12.625F, 7.78700018F), new Vector2(-12F, 10.5F), new Vector2(-12F, 10.5F));
					builder.AddCubicBezier(new Vector2(-12F, 12.7089996F), new Vector2(-10.2089996F, 14.5F), new Vector2(-8F, 14.5F));
					builder.AddCubicBezier(new Vector2(-8F, 14.5F), new Vector2(8F, 14.5F), new Vector2(8F, 14.5F));
					builder.AddCubicBezier(new Vector2(10.2089996F, 14.5F), new Vector2(12F, 12.7089996F), new Vector2(12F, 10.5F));
					builder.AddCubicBezier(new Vector2(12F, 10.5F), new Vector2(12.5629997F, 7.79099989F), new Vector2(12.5629997F, 0.670000017F));
					builder.AddCubicBezier(new Vector2(12.5629997F, -9.16399956F), new Vector2(12F, -14.5F), new Vector2(12F, -14.5F));
					builder.AddCubicBezier(new Vector2(12F, -14.5F), new Vector2(-12F, -14.5F), new Vector2(-12F, -14.5F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - Layer aggregator
			// - - ShapeGroup: Group 5 Offset:<24, 26.5>
			CanvasGeometry Geometry_04()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-1F, -13.5019999F));
					builder.AddLine(new Vector2(1F, -13.5019999F));
					builder.AddLine(new Vector2(1F, 11.5F));
					builder.AddLine(new Vector2(-1F, 11.5F));
					builder.AddLine(new Vector2(-1F, -13.5019999F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_05()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-1F, -13.5019999F));
					builder.AddCubicBezier(new Vector2(-1F, -13.5019999F), new Vector2(1F, -13.5019999F), new Vector2(1F, -13.5019999F));
					builder.AddCubicBezier(new Vector2(1F, -13.5019999F), new Vector2(1F, 1.58899999F), new Vector2(1F, 1.58899999F));
					builder.AddCubicBezier(new Vector2(1F, 1.58899999F), new Vector2(1F, 11.5F), new Vector2(1F, 11.5F));
					builder.AddCubicBezier(new Vector2(1F, 11.5F), new Vector2(-1F, 11.5F), new Vector2(-1F, 11.5F));
					builder.AddCubicBezier(new Vector2(-1F, 11.5F), new Vector2(-1F, 1.68200004F), new Vector2(-1F, 1.68200004F));
					builder.AddCubicBezier(new Vector2(-1F, 1.68200004F), new Vector2(-1F, -13.5019999F), new Vector2(-1F, -13.5019999F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - ShapeGroup: Group 4 Offset:<30, 26.5>
			// - Path
			CanvasGeometry Geometry_06()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-1F, -13.4989996F));
					builder.AddCubicBezier(new Vector2(-1F, -13.4989996F), new Vector2(1F, -13.4989996F), new Vector2(1F, -13.4989996F));
					builder.AddCubicBezier(new Vector2(1F, -13.4989996F), new Vector2(2F, -6.72200012F), new Vector2(2F, 1.79799998F));
					builder.AddCubicBezier(new Vector2(2F, 8.87699986F), new Vector2(1F, 11.5F), new Vector2(1F, 11.5F));
					builder.AddCubicBezier(new Vector2(1F, 11.5F), new Vector2(-1F, 11.5F), new Vector2(-1F, 11.5F));
					builder.AddCubicBezier(new Vector2(-1F, 11.5F), new Vector2(0F, 8.96100044F), new Vector2(0F, 1.92499995F));
					builder.AddCubicBezier(new Vector2(0F, -6.63800001F), new Vector2(-1F, -13.4989996F), new Vector2(-1F, -13.4989996F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - ShapeGroup: Group 4 Offset:<30, 26.5>
			// - Path
			CanvasGeometry Geometry_07()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-1F, -13.5019999F));
					builder.AddCubicBezier(new Vector2(-1F, -13.5019999F), new Vector2(1F, -13.5019999F), new Vector2(1F, -13.5019999F));
					builder.AddCubicBezier(new Vector2(1F, -13.5019999F), new Vector2(0.307000011F, -3.46300006F), new Vector2(0.307000011F, 1.56500006F));
					builder.AddCubicBezier(new Vector2(0.307000011F, 4.88500023F), new Vector2(1F, 11.5F), new Vector2(1F, 11.5F));
					builder.AddCubicBezier(new Vector2(1F, 11.5F), new Vector2(-1F, 11.5F), new Vector2(-1F, 11.5F));
					builder.AddCubicBezier(new Vector2(-1F, 11.5F), new Vector2(-1.495F, 4.95699978F), new Vector2(-1.495F, 1.67999995F));
					builder.AddCubicBezier(new Vector2(-1.495F, -3.38400006F), new Vector2(-1F, -13.5019999F), new Vector2(-1F, -13.5019999F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - ShapeGroup: Group 4 Offset:<30, 26.5>
			// - Path
			CanvasGeometry Geometry_08()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-1F, -13.4989996F));
					builder.AddCubicBezier(new Vector2(-1F, -13.4989996F), new Vector2(1F, -13.4989996F), new Vector2(1F, -13.4989996F));
					builder.AddCubicBezier(new Vector2(1F, -13.4989996F), new Vector2(1.73000002F, -6.72200012F), new Vector2(1.73000002F, 1.79799998F));
					builder.AddCubicBezier(new Vector2(1.73000002F, 8.87699986F), new Vector2(1F, 11.5F), new Vector2(1F, 11.5F));
					builder.AddCubicBezier(new Vector2(1F, 11.5F), new Vector2(-1F, 11.5F), new Vector2(-1F, 11.5F));
					builder.AddCubicBezier(new Vector2(-1F, 11.5F), new Vector2(-0.202000007F, 8.96100044F), new Vector2(-0.202000007F, 1.92499995F));
					builder.AddCubicBezier(new Vector2(-0.202000007F, -6.63800001F), new Vector2(-1F, -13.4989996F), new Vector2(-1F, -13.4989996F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			CanvasGeometry Geometry_09()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-1F, -13.5019999F));
					builder.AddCubicBezier(new Vector2(-1F, -13.5019999F), new Vector2(1F, -13.5019999F), new Vector2(1F, -13.5019999F));
					builder.AddCubicBezier(new Vector2(1F, -13.5019999F), new Vector2(1F, 1.403F), new Vector2(1F, 1.403F));
					builder.AddCubicBezier(new Vector2(1F, 1.403F), new Vector2(1F, 11.5F), new Vector2(1F, 11.5F));
					builder.AddCubicBezier(new Vector2(1F, 11.5F), new Vector2(-1F, 11.5F), new Vector2(-1F, 11.5F));
					builder.AddCubicBezier(new Vector2(-1F, 11.5F), new Vector2(-1F, 1.403F), new Vector2(-1F, 1.403F));
					builder.AddCubicBezier(new Vector2(-1F, 1.403F), new Vector2(-1F, -13.5019999F), new Vector2(-1F, -13.5019999F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - ShapeGroup: Group 3 Offset:<18, 26.5>
			// - Path
			CanvasGeometry Geometry_10()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-1F, -13.4989996F));
					builder.AddCubicBezier(new Vector2(-1F, -13.4989996F), new Vector2(1F, -13.4989996F), new Vector2(1F, -13.4989996F));
					builder.AddCubicBezier(new Vector2(1F, -13.4989996F), new Vector2(-0.063000001F, -6.89599991F), new Vector2(-0.063000001F, 1.53900003F));
					builder.AddCubicBezier(new Vector2(-0.063000001F, 8.70300007F), new Vector2(1F, 11.5F), new Vector2(1F, 11.5F));
					builder.AddCubicBezier(new Vector2(1F, 11.5F), new Vector2(-1F, 11.5F), new Vector2(-1F, 11.5F));
					builder.AddCubicBezier(new Vector2(-1F, 11.5F), new Vector2(-2.06299996F, 8.70300007F), new Vector2(-2.06299996F, 1.53900003F));
					builder.AddCubicBezier(new Vector2(-2.06299996F, -6.89599991F), new Vector2(-1F, -13.4989996F), new Vector2(-1F, -13.4989996F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - ShapeGroup: Group 3 Offset:<18, 26.5>
			// - Path
			CanvasGeometry Geometry_11()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-1F, -13.5019999F));
					builder.AddCubicBezier(new Vector2(-1F, -13.5019999F), new Vector2(1F, -13.5019999F), new Vector2(1F, -13.5019999F));
					builder.AddCubicBezier(new Vector2(1F, -13.5019999F), new Vector2(1.495F, -3.61500001F), new Vector2(1.495F, 1.33299994F));
					builder.AddCubicBezier(new Vector2(1.495F, 4.72599983F), new Vector2(1F, 11.5F), new Vector2(1F, 11.5F));
					builder.AddCubicBezier(new Vector2(1F, 11.5F), new Vector2(-1F, 11.5F), new Vector2(-1F, 11.5F));
					builder.AddCubicBezier(new Vector2(-1F, 11.5F), new Vector2(-0.307000011F, 4.73000002F), new Vector2(-0.307000011F, 1.33299994F));
					builder.AddCubicBezier(new Vector2(-0.307000011F, -3.6170001F), new Vector2(-1F, -13.5019999F), new Vector2(-1F, -13.5019999F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - - Layer aggregator
			// - - - ShapeGroup: Group 3 Offset:<18, 26.5>
			// - Path
			CanvasGeometry Geometry_12()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-1F, -13.4989996F));
					builder.AddCubicBezier(new Vector2(-1F, -13.4989996F), new Vector2(1F, -13.4989996F), new Vector2(1F, -13.4989996F));
					builder.AddCubicBezier(new Vector2(1F, -13.4989996F), new Vector2(0.140000001F, -6.89599991F), new Vector2(0.140000001F, 1.53900003F));
					builder.AddCubicBezier(new Vector2(0.140000001F, 8.70300007F), new Vector2(1F, 11.5F), new Vector2(1F, 11.5F));
					builder.AddCubicBezier(new Vector2(1F, 11.5F), new Vector2(-1F, 11.5F), new Vector2(-1F, 11.5F));
					builder.AddCubicBezier(new Vector2(-1F, 11.5F), new Vector2(-1.79299998F, 8.70300007F), new Vector2(-1.79299998F, 1.53900003F));
					builder.AddCubicBezier(new Vector2(-1.79299998F, -6.89599991F), new Vector2(-1F, -13.4989996F), new Vector2(-1F, -13.4989996F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - Layer aggregator
			// - - ShapeGroup: Group 2 Offset:<24, 13>
			CanvasGeometry Geometry_13()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-14F, -2F));
					builder.AddLine(new Vector2(14F, -2F));
					builder.AddLine(new Vector2(14F, 2F));
					builder.AddLine(new Vector2(-14F, 2F));
					builder.AddLine(new Vector2(-14F, -2F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - - - - Layer aggregator
			// - - ShapeGroup: Group 1 Offset:<24, 9.513>
			CanvasGeometry Geometry_14()
			{
				CanvasGeometry result;
				using (var builder = new CanvasPathBuilder(null))
				{
					builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
					builder.BeginFigure(new Vector2(-2.20000005F, 3.51300001F));
					builder.AddCubicBezier(new Vector2(-2.69199991F, 2.97900009F), new Vector2(-3F, 2.27099991F), new Vector2(-3F, 1.48699999F));
					builder.AddCubicBezier(new Vector2(-3F, -0.170000002F), new Vector2(-1.65699995F, -1.51300001F), new Vector2(0F, -1.51300001F));
					builder.AddCubicBezier(new Vector2(1.65600002F, -1.51300001F), new Vector2(3F, -0.170000002F), new Vector2(3F, 1.48699999F));
					builder.AddCubicBezier(new Vector2(3F, 2.27099991F), new Vector2(2.69300008F, 2.97900009F), new Vector2(2.19899988F, 3.51300001F));
					builder.AddLine(new Vector2(4.56400013F, 3.51300001F));
					builder.AddCubicBezier(new Vector2(4.84000015F, 2.89299989F), new Vector2(5F, 2.21000004F), new Vector2(5F, 1.48699999F));
					builder.AddCubicBezier(new Vector2(5F, -1.27499998F), new Vector2(2.76200008F, -3.51300001F), new Vector2(0F, -3.51300001F));
					builder.AddCubicBezier(new Vector2(-2.76099992F, -3.51300001F), new Vector2(-5F, -1.27499998F), new Vector2(-5F, 1.48699999F));
					builder.AddCubicBezier(new Vector2(-5F, 2.21000004F), new Vector2(-4.84000015F, 2.89299989F), new Vector2(-4.5630002F, 3.51300001F));
					builder.AddLine(new Vector2(-2.20000005F, 3.51300001F));
					builder.EndFigure(CanvasFigureLoop.Closed);
					result = CanvasGeometry.CreatePath(builder);
				}
				return result;
			}

			// - Layer aggregator
			// Ellipse Path 1
			CompositionColorBrush ColorBrush_AlmostDarkGray_FFBCAAA4()
			{
				return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xBC, 0xAA, 0xA4));
			}

			// - - Layer aggregator
			// ShapeGroup: Group 6 Offset:<24, 27.5>
			CompositionColorBrush ColorBrush_AlmostLightSteelBlue_FF9FA8DA()
			{
				return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x9F, 0xA8, 0xDA));
			}

			CompositionColorBrush ColorBrush_AlmostMediumPurple_FF7985CA()
			{
				return (_colorBrush_AlmostMediumPurple_FF7985CA == null)
					? _colorBrush_AlmostMediumPurple_FF7985CA = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x79, 0x85, 0xCA))
					: _colorBrush_AlmostMediumPurple_FF7985CA;
			}

			CompositionColorBrush ColorBrush_AlmostSlateBlue_FF5C6BC0()
			{
				return (_colorBrush_AlmostSlateBlue_FF5C6BC0 == null)
					? _colorBrush_AlmostSlateBlue_FF5C6BC0 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x5C, 0x6B, 0xC0))
					: _colorBrush_AlmostSlateBlue_FF5C6BC0;
			}

			// Layer aggregator
			CompositionContainerShape ContainerShape_0()
			{
				if (_containerShape_0 != null) { return _containerShape_0; }
				var result = _containerShape_0 = _c.CreateContainerShape();
				result.CenterPoint = new Vector2(24F, 42F);
				var shapes = result.Shapes;
				// ShapeGroup: Group 6 Offset:<24, 27.5>
				shapes.Add(SpriteShape_1());
				// ShapeGroup: Group 5 Offset:<24, 26.5>
				shapes.Add(SpriteShape_2());
				// ShapeGroup: Group 4 Offset:<30, 26.5>
				shapes.Add(SpriteShape_3());
				// ShapeGroup: Group 3 Offset:<18, 26.5>
				shapes.Add(SpriteShape_4());
				return result;
			}

			// Layer aggregator
			CompositionContainerShape ContainerShape_1()
			{
				if (_containerShape_1 != null) { return _containerShape_1; }
				var result = _containerShape_1 = _c.CreateContainerShape();
				result.CenterPoint = new Vector2(36F, 13F);
				var shapes = result.Shapes;
				// ShapeGroup: Group 2 Offset:<24, 13>
				shapes.Add(SpriteShape_5());
				// ShapeGroup: Group 1 Offset:<24, 9.513>
				shapes.Add(SpriteShape_6());
				return result;
			}

			// - Layer aggregator
			// Ellipse Path 1
			// Ellipse Path 1.EllipseGeometry
			CompositionEllipseGeometry Ellipse_2()
			{
				var result = _c.CreateEllipseGeometry();
				result.Center = new Vector2(-6F, -7F);
				result.Radius = new Vector2(2F, 2F);
				return result;
			}

			CompositionPath Path_0()
			{
				if (_path_0 != null) { return _path_0; }
				var result = _path_0 = new CompositionPath(Geometry_00());
				return result;
			}

			CompositionPath Path_1()
			{
				if (_path_1 != null) { return _path_1; }
				var result = _path_1 = new CompositionPath(Geometry_05());
				return result;
			}

			CompositionPath Path_2()
			{
				if (_path_2 != null) { return _path_2; }
				var result = _path_2 = new CompositionPath(Geometry_09());
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 6 Offset:<24, 27.5>
			CompositionPathGeometry PathGeometry_0()
			{
				if (_pathGeometry_0 != null) { return _pathGeometry_0; }
				var result = _pathGeometry_0 = _c.CreatePathGeometry();
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 5 Offset:<24, 26.5>
			CompositionPathGeometry PathGeometry_1()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_04()));
			}

			// - - Layer aggregator
			// ShapeGroup: Group 4 Offset:<30, 26.5>
			CompositionPathGeometry PathGeometry_2()
			{
				if (_pathGeometry_2 != null) { return _pathGeometry_2; }
				var result = _pathGeometry_2 = _c.CreatePathGeometry();
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 3 Offset:<18, 26.5>
			CompositionPathGeometry PathGeometry_3()
			{
				if (_pathGeometry_3 != null) { return _pathGeometry_3; }
				var result = _pathGeometry_3 = _c.CreatePathGeometry();
				return result;
			}

			// - - Layer aggregator
			// ShapeGroup: Group 2 Offset:<24, 13>
			CompositionPathGeometry PathGeometry_4()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_13()));
			}

			// - - Layer aggregator
			// ShapeGroup: Group 1 Offset:<24, 9.513>
			CompositionPathGeometry PathGeometry_5()
			{
				return _c.CreatePathGeometry(new CompositionPath(Geometry_14()));
			}

			// Layer aggregator
			// Ellipse Path 1
			CompositionSpriteShape SpriteShape_0()
			{
				if (_spriteShape_0 != null) { return _spriteShape_0; }
				var result = _spriteShape_0 = _c.CreateSpriteShape(Ellipse_2());
				result.FillBrush = ColorBrush_AlmostDarkGray_FFBCAAA4();
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_1()
			{
				// Offset:<24, 27.5>
				var geometry = PathGeometry_0();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 27.5F), ColorBrush_AlmostLightSteelBlue_FF9FA8DA()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_2()
			{
				// Offset:<24, 26.5>
				var geometry = PathGeometry_1();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 26.5F), ColorBrush_AlmostMediumPurple_FF7985CA()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_3()
			{
				// Offset:<30, 26.5>
				var geometry = PathGeometry_2();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 30F, 26.5F), ColorBrush_AlmostMediumPurple_FF7985CA()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_4()
			{
				// Offset:<18, 26.5>
				var geometry = PathGeometry_3();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 18F, 26.5F), ColorBrush_AlmostMediumPurple_FF7985CA()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_5()
			{
				// Offset:<24, 13>
				var geometry = PathGeometry_4();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 13F), ColorBrush_AlmostSlateBlue_FF5C6BC0()); ;
				return result;
			}

			// - Layer aggregator
			// Path 1
			CompositionSpriteShape SpriteShape_6()
			{
				// Offset:<24, 9.513>
				var geometry = PathGeometry_5();
				var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 24F, 9.51299953F), ColorBrush_AlmostSlateBlue_FF5C6BC0()); ;
				return result;
			}

			// The root of the composition.
			ContainerVisual Root()
			{
				if (_root != null) { return _root; }
				var result = _root = _c.CreateContainerVisual();
				var propertySet = result.Properties;
				propertySet.InsertScalar("Progress", 0F);
				propertySet.InsertScalar("t0", 0F);
				// Layer aggregator
				result.Children.InsertAtTop(ShapeVisual_0());
				return result;
			}

			CubicBezierEasingFunction CubicBezierEasingFunction_0()
			{
				return (_cubicBezierEasingFunction_0 == null)
					? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
					: _cubicBezierEasingFunction_0;
			}

			// - - - Layer aggregator
			// - ShapeGroup: Group 6 Offset:<24, 27.5>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_0()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, Path_0(), HoldThenStepEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, new CompositionPath(Geometry_01()), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new CompositionPath(Geometry_02()), CubicBezierEasingFunction_0());
				// Frame 21.
				result.InsertKeyFrame(0.75F, new CompositionPath(Geometry_03()), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, Path_0(), CubicBezierEasingFunction_0());
				return result;
			}

			// - - - Layer aggregator
			// - ShapeGroup: Group 4 Offset:<30, 26.5>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_1()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_1(), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, Path_1(), HoldThenStepEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, new CompositionPath(Geometry_06()), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new CompositionPath(Geometry_07()), CubicBezierEasingFunction_0());
				// Frame 21.
				result.InsertKeyFrame(0.75F, new CompositionPath(Geometry_08()), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, Path_1(), CubicBezierEasingFunction_0());
				return result;
			}

			// - - - Layer aggregator
			// - ShapeGroup: Group 3 Offset:<18, 26.5>
			// Path
			PathKeyFrameAnimation PathKeyFrameAnimation_2()
			{
				// Frame 0.
				var result = CreatePathKeyFrameAnimation(0F, Path_2(), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, Path_2(), HoldThenStepEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, new CompositionPath(Geometry_10()), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new CompositionPath(Geometry_11()), CubicBezierEasingFunction_0());
				// Frame 21.
				result.InsertKeyFrame(0.75F, new CompositionPath(Geometry_12()), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, Path_2(), CubicBezierEasingFunction_0());
				return result;
			}

			// - Layer aggregator
			// Rotation
			ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0()
			{
				// Frame 0.
				var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, 0F, HoldThenStepEasingFunction());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, 25F, CubicBezierEasingFunction_0());
				// Frame 21.
				result.InsertKeyFrame(0.75F, 0F, CubicBezierEasingFunction_0());
				return result;
			}

			ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
			{
				// Frame 9.
				var result = CreateScalarKeyFrameAnimation(0.321428597F, 0F, StepThenHoldEasingFunction());
				result.SetReferenceParameter("_", _root);
				// Frame 17.
				result.InsertKeyFrame(0.607142806F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F)));
				return result;
			}

			// Layer aggregator
			ShapeVisual ShapeVisual_0()
			{
				var result = _c.CreateShapeVisual();
				result.Size = new Vector2(48F, 48F);
				var shapes = result.Shapes;
				// Ellipse Path 1
				shapes.Add(SpriteShape_0());
				shapes.Add(ContainerShape_0());
				shapes.Add(ContainerShape_1());
				return result;
			}

			StepEasingFunction HoldThenStepEasingFunction()
			{
				if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
				var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
				result.IsFinalStepSingleFrame = true;
				return result;
			}

			StepEasingFunction StepThenHoldEasingFunction()
			{
				if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
				var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
				result.IsInitialStepSingleFrame = true;
				return result;
			}

			// - Layer aggregator
			// Ellipse Path 1
			// Offset
			Vector2KeyFrameAnimation OffsetVector2Animation_0()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-3.68799996F, 14.75F), StepThenHoldEasingFunction());
				result.SetReferenceParameter("_", _root);
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, new Vector2(-3.68799996F, 14.75F), HoldThenStepEasingFunction());
				// Frame 17.
				result.InsertExpressionKeyFrame(0.607142806F, "Pow(1-_.t0,3)*Vector2(-3.688,14.75)+(3*Square(1-_.t0)*_.t0*Vector2(6.583,12.312))+(3*(1-_.t0)*Square(_.t0)*Vector2(20.292,13.812))+(Pow(_.t0,3)*Vector2(27,24.625))", StepThenHoldEasingFunction());
				// Frame 17.
				result.InsertKeyFrame(0.607142866F, new Vector2(27F, 24.625F), StepThenHoldEasingFunction());
				return result;
			}

			// - Layer aggregator
			// Offset
			Vector2KeyFrameAnimation OffsetVector2Animation_1()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, new Vector2(0F, 2F), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
				// Frame 21.
				result.InsertKeyFrame(0.75F, new Vector2(0F, 1F), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
				return result;
			}

			// - Layer aggregator
			// Scale
			Vector2KeyFrameAnimation ScaleVector2Animation()
			{
				// Frame 0.
				var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
				// Frame 3.
				result.InsertKeyFrame(0.107142858F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
				// Frame 9.
				result.InsertKeyFrame(0.321428567F, new Vector2(1F, 0.899999976F), CubicBezierEasingFunction_0());
				// Frame 16.
				result.InsertKeyFrame(0.571428597F, new Vector2(1F, 1.04999995F), CubicBezierEasingFunction_0());
				// Frame 21.
				result.InsertKeyFrame(0.75F, new Vector2(1F, 0.949999988F), CubicBezierEasingFunction_0());
				// Frame 25.
				result.InsertKeyFrame(0.892857134F, new Vector2(1F, 1F), CubicBezierEasingFunction_0());
				return result;
			}

			internal TrashCan_AnimatedVisual(
				Compositor compositor
				)
			{
				_c = compositor;
				_reusableExpressionAnimation = compositor.CreateExpressionAnimation();
				Root();
			}

			public Visual RootVisual => _root;
			public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
			public Vector2 Size => new Vector2(48F, 48F);
			void IDisposable.Dispose() => _root?.Dispose();

			public void CreateAnimations()
			{
				_containerShape_0.StartAnimation("Scale", ScaleVector2Animation(), AnimationController_0());
				_containerShape_1.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0(), AnimationController_0());
				_containerShape_1.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
				_pathGeometry_0.StartAnimation("Path", PathKeyFrameAnimation_0(), AnimationController_0());
				_pathGeometry_2.StartAnimation("Path", PathKeyFrameAnimation_1(), AnimationController_0());
				_pathGeometry_3.StartAnimation("Path", PathKeyFrameAnimation_2(), AnimationController_0());
				_spriteShape_0.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
				_root.Properties.StartAnimation("t0", t0ScalarAnimation_0_to_1(), AnimationController_0());
			}

			public void DestroyAnimations()
			{
				_containerShape_0.StopAnimation("Scale");
				_containerShape_1.StopAnimation("RotationAngleInDegrees");
				_containerShape_1.StopAnimation("Offset");
				_pathGeometry_0.StopAnimation("Path");
				_pathGeometry_2.StopAnimation("Path");
				_pathGeometry_3.StopAnimation("Path");
				_spriteShape_0.StopAnimation("Offset");
				_root.Properties.StopAnimation("t0");
			}

		}
	}
}
