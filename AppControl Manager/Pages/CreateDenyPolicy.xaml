<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.CreateDenyPolicy"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:others="using:AppControlManager.Others"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    mc:Ignorable="d">

    <ScrollView x:Name="MainScrollView">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.Resources>

                <!-- For the Packaged Apps ListView Grouping -->
                <CollectionViewSource x:Name="PackagedAppsCollectionViewSource" IsSourceGrouped="True"/>

                <!-- Defines a single App that is displayed in the ListView -->
                <DataTemplate x:Key="PackagedAppsListViewTemplate" x:DataType="others:PackagedAppView">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border CornerRadius="15" VerticalAlignment="Center"
                            HorizontalAlignment="Center" BorderThickness="0" Grid.RowSpan="3" Grid.Column="0">
                            <Image Width ="32" Height="32" Margin="6" Source="{x:Bind Logo}" />
                        </Border>

                        <TextBlock Grid.Column="1"
                        Grid.Row="0"
                        Text="{x:Bind DisplayName}"
                        x:Phase="1"
                        Style="{ThemeResource BaseTextBlockStyle}"
                        Margin="12,6,0,0"/>
                        <TextBlock  Grid.Column="1"
                        Grid.Row="1"
                        Text="{x:Bind Version}"
                        x:Phase="2"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Margin="12,6,0,0"/>


                        <TextBlock  Grid.Column="1"
                        Grid.Row="2"
                        Text="{x:Bind PackageFamilyName}"
                        x:Phase="2"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Margin="12,0,0,6"/>
                    </Grid>
                </DataTemplate>

            </Grid.Resources>

            <controls:WrapPanel Grid.Row="0" VerticalSpacing="4" HorizontalSpacing="4" Orientation="Vertical" Margin="6,0,6,10">

                <TextBlock TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}">
                    <Span>
                        Create a <Bold>Deny</Bold> <Underline>base</Underline> policy that will <Run Foreground="{ThemeResource SystemAccentColor}">explicitly deny</Run> files or applications. Keep in mind that Application Control is fundamentally based on allow-listing, which means anything that is not allowed by a policy is <Bold>already automatically denied.</Bold>
                    </Span>
                </TextBlock>

                <HyperlinkButton x:Uid="GuideButtonAtTop" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Create-Deny-App-Control-Policy" />

            </controls:WrapPanel>


            <StackPanel HorizontalAlignment="Stretch"
                        Spacing="{StaticResource SettingsCardSpacing}" Grid.Row="1" Margin="0,40,0,0">

                <win:StackPanel.ChildrenTransitions>
                    <win:EntranceThemeTransition FromVerticalOffset="50" />
                    <win:RepositionThemeTransition IsStaggeringEnabled="False" />
                </win:StackPanel.ChildrenTransitions>

                <!-- Files and Folders Scan -->
                <controls:SettingsExpander x:Name="FilesAndFoldersSettingsCard"
                           x:Uid="CreateDenyPolicyFilesAndFoldersSettingsExpander"
                           HeaderIcon="{ui:FontIcon Glyph=&#xE71D;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="FilesAndFoldersInfoBar"
                              Title="Current Status"
                              BorderThickness="0"
                              CornerRadius="0"
                              IsIconVisible="True"
                              IsOpen="False"
                              IsClosable="False"
                              Severity="Informational">
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>


                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="CreateFilesAndFoldersDenyPolicyButton" x:Uid="CreateDenyPolicyButton"
                            Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0" Click="CreateFilesAndFoldersDenyPolicyButton_Click" />

                        <ToggleButton x:Name="FilesAndFoldersPolicyDeployToggleButton" Click="FilesAndFoldersPolicyDeployToggleButton_Click" x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                        <TeachingTip x:Name="CreateDenyPolicyTeachingTip"
                            Target="{x:Bind CreateFilesAndFoldersDenyPolicyButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard x:Name="FilesAndFoldersBrowseForFilesSettingsCard" x:Uid="BrowseForFilesDenyPolicySettingsCard"
                               Holding="FilesAndFoldersBrowseForFilesSettingsCard_Holding" RightTapped="FilesAndFoldersBrowseForFilesSettingsCard_RightTapped"
                               IsClickEnabled="True" IsActionIconVisible="False" Click="FilesAndFoldersBrowseForFilesSettingsCard_Click">

                            <Button x:Name="FilesAndFoldersBrowseForFilesButton" RightTapped="FilesAndFoldersBrowseForFilesButton_RightTapped"
                                    x:Uid="FileBrowseButton" Click="FilesAndFoldersBrowseForFilesButton_Click">

                                <Button.Flyout>
                                    <Flyout x:Name="FilesAndFoldersBrowseForFilesButton_Flyout">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="FilesAndFoldersBrowseForFilesButton_Flyout_Clear_Click" />

                                            <TextBlock x:Uid="ViewSelectedFilesTextBlock" TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="FilesAndFoldersBrowseForFilesButton_SelectedFilesTextBox"
                                                TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                                MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                            </Button>

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Uid="BrowseForFoldersDenyPolicySettingsCard" x:Name="FilesAndFoldersBrowseForFoldersSettingsCard" Click="FilesAndFoldersBrowseForFoldersSettingsCard_Click"
                                Holding="FilesAndFoldersBrowseForFoldersSettingsCard_Holding" RightTapped="FilesAndFoldersBrowseForFoldersSettingsCard_RightTapped" IsClickEnabled="True" IsActionIconVisible="False">

                            <Button x:Name="FilesAndFoldersBrowseForFoldersButton" RightTapped="FilesAndFoldersBrowseForFoldersButton_RightTapped" x:Uid="FolderBrowseButton" Click="FilesAndFoldersBrowseForFoldersButton_Click">

                                <Button.Flyout>
                                    <Flyout x:Name="FilesAndFoldersBrowseForFoldersButton_FlyOut">

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="FilesAndFoldersBrowseForFoldersButton_Flyout_Clear_Click" />

                                            <TextBlock x:Uid="ViewSelectedFoldersTextBlock" TextWrapping="WrapWholeWords" />

                                            <TextBox x:Name="FilesAndFoldersBrowseForFoldersButton_SelectedFoldersTextBox"
                                                TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                                MinWidth="400" IsReadOnly="True" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                            </Button>

                        </controls:SettingsCard>

                        <controls:SettingsCard x:Uid="DenyPolicyNameSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox x:Name="FilesAndFoldersPolicyNameTextBox" TextChanged="FilesAndFoldersPolicyNameTextBox_TextChanged" PlaceholderText="Deny Policy Name"/>
                        </controls:SettingsCard>

                        <controls:SettingsCard Description="Select the level based on which the detected files will be scanned."
                        Header="Select Scan Level" Click="ScanLevelComboBoxSettingsCard_Click" x:Name="ScanLevelComboBoxSettingsCard" IsClickEnabled="True" IsActionIconVisible="False">

                            <ComboBox x:Name="ScanLevelComboBox" SelectionChanged="ScanLevelComboBox_SelectionChanged" x:Uid="ScanLevelComboBox"
                                  SelectedIndex="0">
                                <ComboBoxItem>File Publisher</ComboBoxItem>
                                <ComboBoxItem>Publisher</ComboBoxItem>
                                <ComboBoxItem>Hash</ComboBoxItem>
                                <ComboBoxItem>File Path</ComboBoxItem>
                                <ComboBoxItem>WildCard Folder Path</ComboBoxItem>
                            </ComboBox>

                        </controls:SettingsCard>

                        <controls:SettingsCard Description="The higher this number, the faster the scan completes and the more system resources will be consumed."
                        Header="Scalability" IsClickEnabled="False" IsActionIconVisible="False">

                            <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="15">

                                <!-- Scalability Button with RadialGauge Flyout -->
                                <Button x:Name="ScalabilityButton" Content="Scalability" ToolTipService.ToolTip="The number of the concurrent/parallel tasks to use when scanning files. By default it uses 2 parallel tasks.">
                                    <Button.Flyout>
                                        <Flyout>
                                            <StackPanel>
                                                <controls:RadialGauge x:Name="ScalabilityRadialGauge"
                                                    StepSize="1"
                                                    TickSpacing="2"
                                                    ScaleWidth="12"
                                                    NeedleWidth="5"
                                                    NeedleLength="80"
                                                    TickLength="8"
                                                    TickWidth="0"
                                                    ScalePadding="0"
                                                    TickPadding="24"
                                                    Width="200"
                                                    Maximum="120"
                                                    Minimum="2"
                                                    ValueChanged="ScalabilityRadialGauge_ValueChanged"
                                                    ValueStringFormat="N0"/>
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                </Button>

                                <ProgressBar x:Name="FilesAndFoldersProgressBar" Width="200" Value="0" ToolTipService.ToolTip="The Deny policy creation progress" />

                            </controls:WrapPanel>

                        </controls:SettingsCard>

                        <controls:SettingsCard Description="View the details of all of the files that were detected in the file and folder paths you selected."
                                           Header="View detected file details"
                                           HeaderIcon="{ui:FontIcon Glyph=&#xE83B;}"
                                           IsClickEnabled="True" IsActionIconVisible="True"
                                           IsEnabled="False"
                                           x:Name="FilesAndFoldersViewFileDetailsSettingsCard"
                                           Click="FilesAndFoldersViewFileDetailsSettingsCard_Click">

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>


                <!-- Package Family Name (PFN) -->
                <controls:SettingsExpander x:Name="PFNSettingsCard"
                    x:Uid="CreateDenyPolicyPFNSettingsExpander"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE8F1;}" Expanded="PFNSettingsCard_Expanded">

                    <controls:SettingsExpander.ItemsHeader>
                        <InfoBar x:Name="PFNInfoBar"
                            Title="Current Status"
                            BorderThickness="0"
                            CornerRadius="0"
                            IsIconVisible="True"
                            IsOpen="False"
                            IsClosable="False"
                            Severity="Informational">
                        </InfoBar>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Name="CreatePFNDenyPolicyButton" Click="CreatePFNDenyPolicyButton_Click" x:Uid="CreateDenyPolicyButton"
Style="{StaticResource AccentButtonStyle}" Margin="0,0,15,0"/>

                        <ToggleButton x:Name="PFNPolicyDeployToggleButton" x:Uid="DeployAfterCreationButton" Margin="0,0,15,0" />

                        <TeachingTip x:Name="CreatePFNDenyPolicyTeachingTip" Target="{x:Bind CreatePFNDenyPolicyButton}" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard x:Uid="DenyPolicyNameSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox x:Name="PFNPolicyNameTextBox" PlaceholderText="Deny Policy Name"/>
                        </controls:SettingsCard>

                        <controls:SettingsCard Description="Select one or more installed packages to create a Deny policy for"
                            Header="Package Family Names" x:Name="PFNSelectPackagedAppsSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">


                            <controls:WrapPanel Orientation="Horizontal">

                                <controls:WrapPanel VerticalAlignment="Center" Orientation="Vertical" Margin="0,0,15,0" VerticalSpacing="15" HorizontalSpacing="10">

                                    <TextBox x:Name="PFNAppFilteringTextBox" TextChanged="PFNAppFilteringTextBox_TextChanged" PlaceholderText="Search among the apps"/>

                                    <TextBlock x:Uid="SelectedAppsTextBlock" x:Name="PFNSelectedItemsCount" HorizontalAlignment="Center"/>
                                    <Button x:Uid="RefreshButton" HorizontalAlignment="Center" x:Name="PFNRefreshAppsListButton" Click="PFNRefreshAppsListButton_Click" />
                                    <Button x:Uid="SelectAllButton" HorizontalAlignment="Center" x:Name="PFNSelectAllAppsListButton" Click="PFNSelectAllAppsListButton_Click" />
                                    <Button x:Uid="RemoveSelectionsButton" HorizontalAlignment="Center" x:Name="PFNRemoveSelectionAppsListButton" Click="PFNRemoveSelectionAppsListButton_Click" />

                                </controls:WrapPanel>


                                <RefreshContainer x:Name="PFNRefreshContainer" RefreshRequested="PFNRefreshContainer_RefreshRequested">

                                    <ListView
                                        x:Name="PFNPackagedAppsListView"
                                        BorderThickness="1"
                                        CornerRadius="5"
                                        ItemsSource="{x:Bind PackagedAppsCollectionViewSource.View, Mode=OneWay}"
                                        BorderBrush="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                                        Width="450"
                                        Height="400"
                                        HorizontalAlignment="Left"
                                        SelectionMode="Multiple"
                                        PointerEntered="PFNPackagedAppsListView_PointerEntered"
                                        PointerExited="PFNPackagedAppsListView_PointerExited"
                                        SelectionChanged="PFNPackagedAppsListView_SelectionChanged"
                                        ItemTemplate="{StaticResource PackagedAppsListViewTemplate}">

                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ItemsStackPanel AreStickyGroupHeadersEnabled="True"/>
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.GroupStyle>
                                            <GroupStyle >
                                                <GroupStyle.HeaderTemplate>
                                                    <DataTemplate x:DataType="others:GroupInfoListForPackagedAppView">
                                                        <Border AutomationProperties.AccessibilityView="Raw">
                                                            <TextBlock Text="{x:Bind Key}" Style="{ThemeResource TitleTextBlockStyle}" AutomationProperties.AccessibilityView="Raw"/>
                                                        </Border>
                                                    </DataTemplate>
                                                </GroupStyle.HeaderTemplate>
                                            </GroupStyle>
                                        </ListView.GroupStyle>

                                    </ListView>

                                </RefreshContainer>

                            </controls:WrapPanel>

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>

            </StackPanel>

        </Grid>
    </ScrollView>
</Page>
