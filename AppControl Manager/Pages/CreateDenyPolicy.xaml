<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.CreateDenyPolicy"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:customUI="using:AppControlManager.CustomUIElements"
    xmlns:others="using:AppControlManager.Others"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    FlowDirection="{x:Bind AppSettings.ApplicationGlobalFlowDirection, Mode=OneWay}"
    mc:Ignorable="d">

    <ScrollView>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.Resources>

                <!-- For the Packaged Apps ListView Grouping -->
                <CollectionViewSource x:Name="PackagedAppsCollectionViewSource"
                                      Source="{x:Bind ViewModel.PFNBasedAppsListItemsSource, Mode=OneWay}"
                                      IsSourceGrouped="True"/>

                <!-- Defines a single App that is displayed in the ListView -->
                <DataTemplate x:Key="PackagedAppsListViewTemplate" x:DataType="others:PackagedAppView">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border CornerRadius="15" VerticalAlignment="Center"
                            HorizontalAlignment="Center" BorderThickness="0" Grid.RowSpan="3" Grid.Column="0">
                            <Image Width ="32" Height="32" Margin="6" Source="{x:Bind Logo}" />
                        </Border>

                        <TextBlock Grid.Column="1"
                                   Grid.Row="0"
                                   Text="{x:Bind DisplayName}"
                                   x:Phase="1"
                                   Style="{ThemeResource BaseTextBlockStyle}"
                                   Margin="12,6,0,0"/>
                        <TextBlock  Grid.Column="1"
                                   Grid.Row="1"
                                   Text="{x:Bind Version}"
                                   x:Phase="2"
                                   Style="{ThemeResource BodyTextBlockStyle}"
                                   Margin="12,6,0,0"/>

                        <TextBlock Grid.Column="1"
                                   Grid.Row="2"
                                   Text="{x:Bind PackageFamilyName}"
                                   x:Phase="2"
                                   Style="{ThemeResource BodyTextBlockStyle}"
                                   Margin="12,0,0,6"/>
                    </Grid>
                </DataTemplate>

            </Grid.Resources>

            <controls:WrapPanel Grid.Row="0" VerticalSpacing="4" HorizontalSpacing="4" Orientation="Vertical" Margin="6,0,6,10">

                <TextBlock x:Uid="CreateDenyPolicyPageTitle" TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}" />

                <HyperlinkButton x:Uid="GuideButtonAtTop" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Create-Deny-App-Control-Policy" />

            </controls:WrapPanel>

            <StackPanel HorizontalAlignment="Stretch"
                        Spacing="{StaticResource SettingsCardSpacing}" Grid.Row="1" Margin="0,40,0,0">

                <win:StackPanel.ChildrenTransitions>
                    <win:EntranceThemeTransition FromVerticalOffset="50" />
                    <win:RepositionThemeTransition IsStaggeringEnabled="False" />
                </win:StackPanel.ChildrenTransitions>

                <!-- Files and Folders Scan -->
                <controls:SettingsExpander x:Uid="CreateDenyPolicyFilesAndFoldersSettingsExpander"
                                           IsExpanded="{x:Bind ViewModel.FilesAndFoldersSettingsExpanderIsExpanded, Mode=TwoWay}"
                                           HeaderIcon="{ui:FontIcon Glyph=&#xE71D;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <customUI:InfoBarV2 x:Uid="CurrentStatusInfoBar"
                              BorderThickness="0"
                              CornerRadius="0"
                              IsIconVisible="True"
                              Title="{x:Bind ViewModel.FilesAndFoldersInfoBarTitle, Mode=OneWay}"
                              Message="{x:Bind ViewModel.FilesAndFoldersInfoBarMessage, Mode=OneWay}"
                              IsOpen="{x:Bind ViewModel.FilesAndFoldersInfoBarIsOpen, Mode=TwoWay}"
                              IsClosable="{x:Bind ViewModel.FilesAndFoldersInfoBarIsClosable, Mode=OneWay}"
                              Severity="{x:Bind ViewModel.FilesAndFoldersInfoBarSeverity, Mode=OneWay}">
                            <customUI:InfoBarV2.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton"
                                        Visibility="{x:Bind ViewModel.FilesAndFoldersInfoBarActionButtonVisibility, Mode=OneWay}"
                                        Click="{x:Bind ViewModel.OpenInPolicyEditor_FilesAndFolders}" />
                            </customUI:InfoBarV2.ActionButton>
                        </customUI:InfoBarV2>
                    </controls:SettingsExpander.ItemsHeader>


                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button x:Uid="CreateDenyPolicyButton"
                                Style="{StaticResource AccentButtonStyle}"
                                Margin="0,0,15,0"
                                IsEnabled="{x:Bind ViewModel.FilesAndFoldersElementsAreEnabled, Mode=OneWay}"
                                Click="{x:Bind ViewModel.CreateFilesAndFoldersDenyPolicyButton_Click}" />

                        <ToggleButton IsChecked="{x:Bind ViewModel.filesAndFoldersDeployButton, Mode=TwoWay}"
                                      IsEnabled="{x:Bind ViewModel.FilesAndFoldersElementsAreEnabled, Mode=OneWay}"
                                      x:Uid="DeployAfterCreationButton"
                                      Margin="0,0,15,0" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <customUI:SettingsCardV3 Visibility="{x:Bind ViewModel.FilesAndFoldersBrowseForFilesSettingsCardVisibility, Mode=OneWay}"
                                                 x:Uid="BrowseForFilesPolicyCreationSettingsCard">

                            <Button IsEnabled="{x:Bind ViewModel.FilesAndFoldersElementsAreEnabled, Mode=OneWay}"
                                    x:Uid="FileBrowseButton"
                                    Click="{x:Bind ViewModel.FilesAndFoldersBrowseForFilesButton_Click}">

                                <Button.Flyout>
                                    <Flyout>

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="{x:Bind ViewModel.FilesAndFoldersBrowseForFilesButton_Flyout_Clear_Click}" />

                                            <TextBlock x:Uid="ViewSelectedFilesTextBlock" TextWrapping="WrapWholeWords" />

                                            <ListBox MinWidth="400" SelectionMode="Single" ItemsSource="{x:Bind ViewModel.filesAndFoldersFilePaths, Mode=OneWay}" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                            </Button>

                        </customUI:SettingsCardV3>

                        <customUI:SettingsCardV3 x:Uid="BrowseForFoldersPolicyCreationSettingsCard">

                            <Button x:Uid="FolderBrowseButton"
                                    IsEnabled="{x:Bind ViewModel.FilesAndFoldersElementsAreEnabled, Mode=OneWay}"
                                    Click="{x:Bind ViewModel.FilesAndFoldersBrowseForFoldersButton_Click}">

                                <Button.Flyout>
                                    <Flyout>

                                        <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                            <Button x:Uid="ClearButton" Click="{x:Bind ViewModel.FilesAndFoldersBrowseForFoldersButton_Flyout_Clear_Click}" />

                                            <TextBlock x:Uid="ViewSelectedFoldersTextBlock" TextWrapping="WrapWholeWords" />

                                            <ListBox MinWidth="400" SelectionMode="Single" ItemsSource="{x:Bind ViewModel.filesAndFoldersFolderPaths, Mode=OneWay}" />

                                        </controls:WrapPanel>

                                    </Flyout>
                                </Button.Flyout>

                            </Button>

                        </customUI:SettingsCardV3>

                        <controls:SettingsCard x:Uid="DenyPolicyNameSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox Text="{x:Bind ViewModel.filesAndFoldersDenyPolicyName, Mode=TwoWay}"
                                     PlaceholderText="Deny Policy Name"
                                     IsEnabled="{x:Bind ViewModel.FilesAndFoldersElementsAreEnabled, Mode=OneWay}"/>
                        </controls:SettingsCard>

                        <customUI:SettingsCardV2 x:Uid="SelectScanLevelSettingsCard">

                            <ComboBox SelectedItem="{x:Bind ViewModel.FilesAndFoldersScanLevelComboBoxSelectedItem, Mode=TwoWay}"
                                      IsEnabled="{x:Bind ViewModel.FilesAndFoldersElementsAreEnabled, Mode=OneWay}"
                                      x:Uid="ScanLevelComboBox">
                                <x:String>File Publisher</x:String>
                                <x:String>Publisher</x:String>
                                <x:String>Hash</x:String>
                                <x:String>File Path</x:String>
                                <x:String>WildCard Folder Path</x:String>
                            </ComboBox>

                        </customUI:SettingsCardV2>

                        <customUI:SettingsCardV2 x:Uid="ScalabilitySettingsCard">

                            <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="10" VerticalSpacing="10">

                                <ProgressRing IsIndeterminate="False"
                                              Value="{x:Bind ViewModel.FilesAndFoldersProgressRingValue, Mode=OneWay}"
                                              ToolTipService.ToolTip="The Deny policy creation progress" />

                                <!-- Scalability Button with RadialGauge Flyout -->
                                <Button Content="{x:Bind ViewModel.FilesAndFoldersScalabilityButtonContent, Mode=OneWay}"
                                        IsEnabled="{x:Bind ViewModel.FilesAndFoldersElementsAreEnabled, Mode=OneWay}"
                                        x:Uid="ScalabilityButton">
                                    <Button.Flyout>
                                        <Flyout>
                                            <StackPanel>
                                                <customUI:ColorRadialGaugeV2
                                                                      StepSize="1"
                                                                      TickSpacing="2"
                                                                      ScaleWidth="12"
                                                                      NeedleWidth="0"
                                                                      NeedleLength="0"
                                                                      TickLength="8"
                                                                      TickWidth="0"
                                                                      ScalePadding="5"
                                                                      TickPadding="24"
                                                                      Width="200"
                                                                      Maximum="120"
                                                                      Minimum="2"
                                                                      Value="{x:Bind ViewModel.FilesAndFoldersScalabilityRadialGaugeValue, Mode=TwoWay}"
                                                                      ValueStringFormat="N0"/>
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                </Button>

                            </controls:WrapPanel>

                        </customUI:SettingsCardV2>

                        <controls:SettingsCard x:Uid="ViewDetectedFilesDetailsSettingsCard"
                                           HeaderIcon="{ui:FontIcon Glyph=&#xE83B;}"
                                           IsClickEnabled="True" IsActionIconVisible="True"
                                           Click="{x:Bind ViewModel.FilesAndFoldersViewFileDetailsSettingsCard_Click}">

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>


                <!-- Package Family Name (PFN) -->
                <controls:SettingsExpander x:Uid="CreateDenyPolicyPFNSettingsExpander"
                                           HeaderIcon="{ui:FontIcon Glyph=&#xE8F1;}"
                                           Expanded="{x:Bind ViewModel.PFNSettingsCard_Expanded}"
                                           IsExpanded="{x:Bind ViewModel.PFNBasedSettingsExpanderIsExpanded, Mode=TwoWay}">

                    <controls:SettingsExpander.ItemsHeader>
                        <customUI:InfoBarV2 x:Uid="CurrentStatusInfoBar"
                            BorderThickness="0"
                            CornerRadius="0"
                            IsIconVisible="True"
                            Title="{x:Bind ViewModel.PFNInfoBarTitle, Mode=OneWay}"
                            Message="{x:Bind ViewModel.PFNInfoBarMessage, Mode=OneWay}"
                            IsOpen="{x:Bind ViewModel.PFNInfoBarIsOpen, Mode=TwoWay}"
                            IsClosable="{x:Bind ViewModel.PFNInfoBarIsClosable, Mode=OneWay}"
                            Severity="{x:Bind ViewModel.PFNInfoBarSeverity, Mode=OneWay}">
                            <customUI:InfoBarV2.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton"
                                        Visibility="{x:Bind ViewModel.PFNInfoBarActionButtonVisibility, Mode=OneWay}"
                                        Click="{x:Bind ViewModel.OpenInPolicyEditor_PFN}" />
                            </customUI:InfoBarV2.ActionButton>
                        </customUI:InfoBarV2>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button Click="{x:Bind ViewModel.CreatePFNDenyPolicyButton_Click}"
                                x:Uid="CreateDenyPolicyButton"
                                IsEnabled="{x:Bind ViewModel.PFNElementsAreEnabled, Mode=OneWay}"
                                Style="{StaticResource AccentButtonStyle}"
                                Margin="0,0,15,0"/>

                        <ToggleButton x:Uid="DeployAfterCreationButton"
                                      IsChecked="{x:Bind ViewModel.PFNBasedShouldDeploy, Mode=TwoWay}"
                                      IsEnabled="{x:Bind ViewModel.PFNElementsAreEnabled, Mode=OneWay}"
                                      Margin="0,0,15,0" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard x:Uid="DenyPolicyNameSettingsCard"
                                               IsClickEnabled="False"
                                               IsActionIconVisible="False">
                            <TextBox IsEnabled="{x:Bind ViewModel.PFNElementsAreEnabled, Mode=OneWay}"
                                     Text="{x:Bind ViewModel.PFNBasedDenyPolicyName, Mode=TwoWay}"
                                     PlaceholderText="Deny Policy Name"/>
                        </controls:SettingsCard>

                        <controls:SettingsCard x:Uid="PackageFamilyNamesSelectionSettingsCard"
                                               IsClickEnabled="False"
                                               IsActionIconVisible="False">

                            <controls:WrapPanel Orientation="Horizontal">

                                <controls:WrapPanel VerticalAlignment="Center"
                                                    Orientation="Vertical"
                                                    Margin="0,0,15,0"
                                                    VerticalSpacing="15"
                                                    HorizontalSpacing="10">

                                    <TextBox Text="{x:Bind ViewModel.PFNBasedSearchKeywordForAppsList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             PlaceholderText="Search among the apps"/>

                                    <TextBlock x:Uid="SelectedAppsTextBlock"
                                               Text="{x:Bind ViewModel.PFNBasedSelectedItemsCount, Mode=OneWay}"
                                               HorizontalAlignment="Center"/>
                                    <Button x:Uid="RefreshButton"
                                            HorizontalAlignment="Center"
                                            IsEnabled="{x:Bind ViewModel.PFNElementsAreEnabled, Mode=OneWay}"
                                            Click="{x:Bind ViewModel.PFNRefreshAppsListButton_Click}" />
                                    <Button x:Uid="SelectAllButton"
                                            HorizontalAlignment="Center"
                                            IsEnabled="{x:Bind ViewModel.PFNElementsAreEnabled, Mode=OneWay}"
                                            Click="{x:Bind ViewModel.PFNSelectAllAppsListButton_Click}" />
                                    <Button x:Uid="RemoveSelectionsButton"
                                            HorizontalAlignment="Center"
                                            IsEnabled="{x:Bind ViewModel.PFNElementsAreEnabled, Mode=OneWay}"
                                            Click="{x:Bind ViewModel.PFNRemoveSelectionAppsListButton_Click}" />

                                </controls:WrapPanel>

                                <RefreshContainer RefreshRequested="{x:Bind ViewModel.PFNRefreshAppsListButton_Click}">

                                    <customUI:ListViewV3
                                        IsEnabled="{x:Bind ViewModel.PFNElementsAreEnabled, Mode=OneWay}"
                                        RegistryKey="DenyPolicy_PFNBasedRules"
                                        BorderThickness="1"
                                        CornerRadius="5"
                                        ItemsSource="{x:Bind PackagedAppsCollectionViewSource.View, Mode=OneWay}"
                                        BorderBrush="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                                        Width="450"
                                        Height="400"
                                        HorizontalAlignment="Left"
                                        SelectionMode="Multiple"
                                        SelectionChanged="{x:Bind ViewModel.PFNPackagedAppsListView_SelectionChanged}"
                                        ItemTemplate="{StaticResource PackagedAppsListViewTemplate}">

                                        <customUI:ListViewV3.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ItemsStackPanel AreStickyGroupHeadersEnabled="True"/>
                                            </ItemsPanelTemplate>
                                        </customUI:ListViewV3.ItemsPanel>
                                        <customUI:ListViewV3.GroupStyle>
                                            <GroupStyle >
                                                <GroupStyle.HeaderTemplate>
                                                    <DataTemplate x:DataType="others:GroupInfoListForPackagedAppView">
                                                        <Border AutomationProperties.AccessibilityView="Raw">
                                                            <TextBlock Text="{x:Bind Key}" Style="{ThemeResource TitleTextBlockStyle}" AutomationProperties.AccessibilityView="Raw"/>
                                                        </Border>
                                                    </DataTemplate>
                                                </GroupStyle.HeaderTemplate>
                                            </GroupStyle>
                                        </customUI:ListViewV3.GroupStyle>

                                    </customUI:ListViewV3>

                                </RefreshContainer>

                            </controls:WrapPanel>

                        </controls:SettingsCard>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>


                <!-- Custom File Path Rules -->
                <controls:SettingsExpander x:Uid="DenyPolicyCustomPatternBasedFileRuleSettingsExpander"
                                           IsExpanded="{x:Bind ViewModel.CustomFilePathRulesSettingsExpanderIsExpanded, Mode=TwoWay}"
                                           HeaderIcon="{ui:FontIcon Glyph=&#xE8A1;}">

                    <controls:SettingsExpander.ItemsHeader>
                        <customUI:InfoBarV2 x:Uid="CurrentStatusInfoBar"
                            BorderThickness="0"
                            CornerRadius="0"
                            IsIconVisible="True"
                            Title="{x:Bind ViewModel.CustomFilePathRulesInfoBarTitle, Mode=OneWay}"
                            IsOpen="{x:Bind ViewModel.CustomFilePathRulesInfoBarIsOpen, Mode=TwoWay}"
                            Message="{x:Bind ViewModel.CustomFilePathRulesInfoBarMessage, Mode=OneWay}"
                            IsClosable="{x:Bind ViewModel.CustomFilePathRulesInfoBarIsClosable, Mode=OneWay}"
                            Severity="{x:Bind ViewModel.CustomFilePathRulesInfoBarSeverity, Mode=OneWay}">
                            <customUI:InfoBarV2.ActionButton>
                                <Button x:Uid="OpenInPolicyEditorButton"
                                        Visibility="{x:Bind ViewModel.CustomFilePathRulesInfoBarActionButtonVisibility, Mode=OneWay}"
                                        Click="{x:Bind ViewModel.OpenInPolicyEditor_CustomPatternBasedFileRule}" />
                            </customUI:InfoBarV2.ActionButton>
                        </customUI:InfoBarV2>
                    </controls:SettingsExpander.ItemsHeader>

                    <controls:WrapPanel Orientation="Horizontal" HorizontalSpacing="6" VerticalSpacing="10">

                        <Button Click="{x:Bind ViewModel.CreateCustomPatternBasedFileRuleDenyPolicyButton_Click}"
                                x:Uid="CreateDenyPolicyButton"
                                IsEnabled="{x:Bind ViewModel.CustomFilePathRulesElementsAreEnabled, Mode=OneWay}"
                                Style="{StaticResource AccentButtonStyle}"
                                Margin="0,0,15,0" />

                        <ToggleButton x:Uid="DeployAfterCreationButton"
                                      IsEnabled="{x:Bind ViewModel.CustomFilePathRulesElementsAreEnabled, Mode=OneWay}"
                                      IsChecked="{x:Bind ViewModel.CustomPatternBasedFileRuleBasedDeployButton, Mode=TwoWay}"
                                      Margin="0,0,15,0" />

                    </controls:WrapPanel>

                    <controls:SettingsExpander.Items>

                        <controls:SettingsCard x:Uid="DenyPolicyNameSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox IsEnabled="{x:Bind ViewModel.CustomFilePathRulesElementsAreEnabled, Mode=OneWay}"
                                     Text="{x:Bind ViewModel.CustomPatternBasedFileRuleBasedDenyPolicyName, Mode=TwoWay}"
                                     PlaceholderText="Choose a Deny policy name"/>
                        </controls:SettingsCard>

                        <controls:SettingsCard x:Uid="DenyPolicyCustomPatternBasedFileRuleActualPatternSettingsCard" IsClickEnabled="False" IsActionIconVisible="False">
                            <TextBox x:Uid="DenyPolicyCustomPatternBasedCustomPatternTextBox"
                                     Text="{x:Bind ViewModel.DenyPolicyCustomPatternBasedCustomPatternTextBox, Mode=TwoWay}"
                                     IsEnabled="{x:Bind ViewModel.CustomFilePathRulesElementsAreEnabled, Mode=OneWay}"
                                     TextWrapping="Wrap"
                                     MaxWidth="400"/>
                        </controls:SettingsCard>

                        <controls:SettingsCard x:Uid="CustomPatternBasedFileRuleInfoSettingsCard"
                                               IsClickEnabled="True"
                                               Click="{x:Bind ViewModel.DenyPolicyCustomPatternBasedFileRuleSettingsCard_Click}"
                                               IsActionIconVisible="True"/>

                    </controls:SettingsExpander.Items>

                </controls:SettingsExpander>

            </StackPanel>

        </Grid>
    </ScrollView>
</Page>
