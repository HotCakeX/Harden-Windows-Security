<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="AppControlManager.Pages.MDEAHPolicyCreation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppControlManager.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:tk7controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <controls:WrapPanel Grid.Row="0" VerticalSpacing="4" HorizontalSpacing="4" Orientation="Vertical" Margin="6,0,6,0">

            <TextBlock TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}">

    <Span>
        Leverage <Italic>Microsoft Defender for Endpoint</Italic>
            <Run Foreground="{ThemeResource SystemAccentColor}">Advanced Hunting</Run>
        exported logs to build Application Control Policies.
        Begin by browsing for the MDE AH CSV logs, then click the
        <Underline><Bold>Scan button</Bold></Underline> to populate the data grid.
        Once populated, use the <Underline><Bold>Create Policy button</Bold></Underline>
        to define output configuration and generate the XML policy file.
    </Span>
            </TextBlock>

            <HyperlinkButton x:Uid="GuideButtonAtTop" NavigateUri="https://github.com/HotCakeX/Harden-Windows-Security/wiki/Create-Policy-From-MDE-Advanced-Hunting" />

        </controls:WrapPanel>

        <InfoBar x:Name="MainInfoBar" Grid.Row="1" Visibility="Collapsed" />

        <controls:WrapPanel Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

            <ProgressRing x:Name="ScanLogsProgressRing" Visibility="Collapsed" IsActive="False"/>

            <SelectorBar x:Name="MenuSelectorBar" SelectionChanged="MenuSelectorBar_SelectionChanged" HorizontalAlignment="Left" VerticalAlignment="Center">
                <SelectorBarItem x:Name="SelectorBarItemMain" Text="Local" IsSelected="True"/>
                <SelectorBarItem x:Name="SelectorBarItemCloud" Text="Cloud"/>
                <SelectorBarItem x:Name="SelectorBarItemCreate" Text="Create"/>
            </SelectorBar>

            <TextBox x:Uid="TotalLogsTextBlock"
                x:Name="TotalCountOfTheFilesTextBox"
                IsReadOnly="True"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"/>

            <TextBox x:Name="SearchBox" x:Uid="SearchBoxTextBox" TextChanged="SearchBox_TextChanged" VerticalAlignment="Center" VerticalContentAlignment="Center" />

            <CalendarDatePicker x:Name="FilterByDateCalendarPicker" PlaceholderText="Filter logs by date" ToolTipService.ToolTip="Will only show logs that are newer than the selected date"/>


        </controls:WrapPanel>

        <Border
  Grid.Row="3" Visibility="{x:Bind IsLocalSelected, Mode=OneWay}"
  Margin="0,10,0,10"
  Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                <!-- Scan MDE Advanced Hunting button -->
                <Button x:Name="ScanLogs" IsEnabled="False" ToolTipService.ToolTip="Once you select MDE Advanced Hunting logs, you can use this button to scan them and display their results in the grid below" Style="{StaticResource AccentButtonStyle}" Click="ScanLogs_Click" >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xEE6F;" />
                            <TextBlock Text="Scan Logs" Margin="5,0,0,0" />

                        </StackPanel>
                    </Button.Content>
                </Button>

                <Button x:Name="BrowseForLogs" ToolTipService.ToolTip="Browse for Advanced Hunting Logs" Click="BrowseForLogs_Click"
                        Holding="BrowseForLogs_Holding" RightTapped="BrowseForLogs_RightTapped">

                    <Button.Flyout>
                        <Flyout x:Name="BrowseForLogs_Flyout">

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="15" VerticalSpacing="15">

                                <Button x:Uid="ClearButton" Click="BrowseForLogs_Flyout_Clear_Click" />

                                <TextBlock Text="View the log files you selected." TextWrapping="WrapWholeWords" />

                                <TextBox x:Name="BrowseForLogs_SelectedFilesTextBox"
                                    TextWrapping="Wrap" AcceptsReturn="True" IsSpellCheckEnabled="False"
                                    MinWidth="400" IsReadOnly="True" />

                            </controls:WrapPanel>

                        </Flyout>
                    </Button.Flyout>

                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xEC50;" />
                            <TextBlock Text="Browse for MDE Advanced Hunting logs" Margin="5,0,0,0" />
                        </StackPanel>
                    </Button.Content>
                </Button>


            </controls:WrapPanel>
        </Border>


        <Border Grid.Row="3" Visibility="{x:Bind IsCloudSelected, Mode=OneWay}"
              Margin="0,10,0,10" Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">

                <Button Content="Sign In" x:Name="MSGraphSignInButton" Click="MSGraphSignInButton_Click" ToolTipService.ToolTip="Sign into your tenant"/>

                <Button Content="Sign Out" IsEnabled="False" x:Name="MSGraphSignOutButton" Click="MSGraphSignOutButton_Click" ToolTipService.ToolTip="Sign out of your tenant and discard any saved authentication tokens"/>

                <Button Content="Cancel Sign In" x:Name="MSGraphCancelSignInButton" IsEnabled="False" Click="MSGraphCancelSignInButton_Click" ToolTipService.ToolTip="Cancel the sign in process"/>

                <Button Content="Device Name" x:Name="MSGraphDeviceNameButton" ToolTipService.ToolTip="Enter a device name to filter the incoming logs">
                    <Button.Flyout>
                        <Flyout>
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="CornerRadius" Value="8" />
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="3" VerticalSpacing="8">
                                <TextBox Width="300" Header="Optional: Choose a device name to filter the logs before retrieval" PlaceholderText="Device Name..." x:Name="DeviceNameTextBox"/>
                            </controls:WrapPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>


                <Button Content="Retrieve The Logs" x:Name="RetrieveTheLogsButton" IsEnabled="False" Click="RetrieveTheLogsButton_Click" ToolTipService.ToolTip="Retrieve the logs by submitting an Advanced Hunting query to MDE"/>

                <Button Content="Query Examples" ToolTipService.ToolTip="You can copy the following queries and use them in the MDE Advanced Hunting portal to generate standard logs that are compatible with the AppControl Manager, or you can use the built-in functionality of the application to automatically retrieve the logs and process them">
                    <Button.Flyout>
                        <Flyout>

                            <ListView ItemsSource="{x:Bind AdvancedHuntingQueries, Mode=OneWay}"
                  SelectionMode="None">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" Width="300"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>

                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="local:MDEAdvancedHuntingQueriesForMDEAHPolicyCreationPage">
                                        <StackPanel Margin="0,0,0,12" HorizontalAlignment="Center">
                                            <!-- Title -->
                                            <TextBlock 
                                                Text="{x:Bind QueryTitle}" 
                                                TextWrapping="WrapWholeWords"
                                                FontWeight="Bold" 
                                                HorizontalAlignment="Center"
                                                FontSize="16" 
                                                Margin="0,5,0,5"/>

                                            <!-- Copy Button -->
                                            <!-- The button's content is a Grid containing two TextBlocks: one for the normal text and one for the copied state -->
                                            <Button x:Name="CopyButton" Click="CopyButton_Click" HorizontalAlignment="Center" Margin="0,0,0,5">
                                                <Grid>
                                                    <TextBlock x:Name="NormalText" Text="Copy" Opacity="1"/>
                                                    <TextBlock x:Name="CopiedText" Text="Copied" Opacity="0"/>
                                                </Grid>
                                            </Button>

                                            <!-- Query Text -->
                                            <TextBox Text="{x:Bind Query}" IsReadOnly="True" TextWrapping="Wrap"
                                            HorizontalAlignment="Center"
                                            Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                        </Flyout>
                    </Button.Flyout>
                </Button>

            </controls:WrapPanel>

        </Border>


        <Border Grid.Row="3" Visibility="{x:Bind IsCreateSelected, Mode=OneWay}"
       Margin="0,10,0,10" Style="{StaticResource GridCardStyle}" Padding="8">

            <controls:WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalSpacing="10" VerticalSpacing="10">


                <SplitButton x:Name="CreatePolicyButton" ToolTipService.ToolTip="Create the supplemental policy based on the MDE Advanced Hunting logs" Click="CreatePolicyButton_Click">

                    <SplitButton.Content>
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xECCD;" />
                            <TextBlock Text="Create Policy for Selected Base" Margin="5,0,0,0" />
                        </StackPanel>
                    </SplitButton.Content>

                    <SplitButton.Flyout>
                        <Flyout Placement="Bottom">

                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="Padding" Value="0" />
                                    <!-- Same corner radius as the one in PanelStyle  -->
                                    <Setter Property="CornerRadius" Value="8" />

                                    <!--
                                  Important: the "resolution order" for widths (at least in winui) is minwidth, maxwidth, width
                                  Width does not override MaxWidth
                                  https://learn.microsoft.com/en-us/uwp/api/windows.ui.xaml.frameworkelement.maxwidth?view=winrt-26100#remarks
                                  -->
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>


                            <StackPanel
VerticalAlignment="Top"
Orientation="Vertical"
Spacing="8">
                                <controls:Segmented x:Name="segmentedControl"
            HorizontalAlignment="Stretch"
            SelectedIndex="1" SelectionChanged="SegmentedControl_SelectionChanged">
                                    <controls:SegmentedItem Content="Add To Policy"
                    Tag="AddToPolicy" Width="160" Icon="{ui:FontIcon Glyph=&#xEB49;}" />
                                    <controls:SegmentedItem Content="Base Policy File"
                    Tag="BasePolicyFile" Width="160" Icon="{ui:FontIcon Glyph=&#xEB49;}"/>
                                    <controls:SegmentedItem Content="Base GUID"
                    Tag="BaseGUID" Width="130" Icon="{ui:FontIcon Glyph=&#xEB49;}"/>
                                </controls:Segmented>
                                <controls:SwitchPresenter Value="{Binding SelectedItem.Tag, ElementName=segmentedControl}" HorizontalAlignment="Center">

                                    <controls:Case Value="AddToPolicy">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
            Style="{StaticResource PanelStyle}">

                                            <TextBlock Margin="5" VerticalAlignment="Center" TextWrapping="WrapWholeWords">
                                                <Span>Browse for a XML policy file to add <Bold>the logs</Bold> to </Span>
                                            </TextBlock>

                                            <Button Margin="5" x:Name="AddToPolicyButton" Content="Browse" ToolTipService.ToolTip="Select a XML file to add the scanned logs to" Style="{StaticResource AccentButtonStyle}" Click="AddToPolicyButton_Click" />

                                        </StackPanel>
                                    </controls:Case>
                                    <controls:Case Value="BasePolicyFile">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
            Style="{StaticResource PanelStyle}">


                                            <TextBlock Margin="5" VerticalAlignment="Center" TextWrapping="WrapWholeWords" Width="290" >
                                               <Span>Browse for a <Bold>base</Bold>
                                                    policy XML file that this <Underline>Supplemental</Underline> policy will belong to </Span>
                                            </TextBlock>

                                            <Button Margin="5" x:Name="BasePolicyFileButton" Content="Browse" ToolTipService.ToolTip="Select a base policy that this supplemental policy will belong to." Style="{StaticResource AccentButtonStyle}" Click="BasePolicyFileButton_Click" />


                                        </StackPanel>
                                    </controls:Case>

                                    <controls:Case Value="BaseGUID">
                                        <StackPanel animations:Implicit.HideAnimations="{StaticResource HideTransitions}"
            animations:Implicit.ShowAnimations="{StaticResource ShowTransitions}"
            Style="{StaticResource PanelStyle}">

                                            <TextBox x:Name="BaseGUIDTextBox" PlaceholderText="Enter a Base policy GUID" Width="300" Margin="10" VerticalAlignment="Center" VerticalContentAlignment="Center" ToolTipService.ToolTip="Enter the Base GUID" />

                                            <Button Margin="5" x:Name="BaseGUIDSubmitButton" Content="Submit" ToolTipService.ToolTip="Submit the GUID" Style="{StaticResource AccentButtonStyle}" Click="BaseGUIDSubmitButton_Click" />

                                        </StackPanel>
                                    </controls:Case>
                                </controls:SwitchPresenter>
                            </StackPanel>

                        </Flyout>
                    </SplitButton.Flyout>

                </SplitButton>

                <DropDownButton x:Uid="ExtraActionsDropDownButton">
                    <DropDownButton.Flyout>

                        <MenuFlyout Placement="Bottom">

                            <MenuFlyoutItem x:Uid="SelectAllMenuFlyoutItem" Click="SelectAll_Click">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE762;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutItem x:Uid="DeSelectAllMenuFlyoutItem" Click="DeSelectAll_Click">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE8E6;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutItem Click="ClearDataButton_Click" x:Uid="ClearDataMenuFlyoutItem">
                                <MenuFlyoutItem.Icon>
                                    <SymbolIcon Symbol="Delete" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <MenuFlyoutSeparator/>

                            <ToggleMenuFlyoutItem x:Name="DeployPolicyToggle" x:Uid="DeployAfterCreationMenuFlyoutItem" IsChecked="False">
                                <ToggleMenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE896;"/>
                                </ToggleMenuFlyoutItem.Icon>
                            </ToggleMenuFlyoutItem>

                        </MenuFlyout>

                    </DropDownButton.Flyout>
                </DropDownButton>

                <Button Content="Policy Name">
                    <Button.Flyout>
                        <Flyout>
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="CornerRadius" Value="8" />
                                    <Setter Property="MaxWidth" Value="1234" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <controls:WrapPanel Orientation="Vertical" HorizontalSpacing="3" VerticalSpacing="8">
                                <TextBox Width="300" Header="Optional: Choose a policy name" PlaceholderText="Policy Name..." x:Name="PolicyNameTextBox"/>
                            </controls:WrapPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <ComboBox SelectionChanged="ScanLevelComboBox_SelectionChanged" x:Name="ScanLevelComboBox" x:Uid="ScanLevelComboBox" PlaceholderText="Scan level">
                    <ComboBoxItem>FilePublisher</ComboBoxItem>
                    <ComboBoxItem>Publisher</ComboBoxItem>
                    <ComboBoxItem>Hash</ComboBoxItem>
                </ComboBox>

            </controls:WrapPanel>

        </Border>

        <!-- DataGrid for FileIdentity Outputs -->
        <Border Grid.Row="4" Style="{StaticResource GridCardStyle}" Margin="0,0,0,10" Padding="5">
            <tk7controls:DataGrid
      ItemsSource="{x:Bind FileIdentities, Mode=OneWay}"
      x:Name="FileIdentitiesDataGrid"
      AllowDrop="False"
      AreRowDetailsFrozen="True"
      AutoGenerateColumns="False"
      CanDrag="False"
      HeadersVisibility="Column"
      IsReadOnly="True"
      IsTabStop="True"
      RowDetailsVisibilityMode="Collapsed"
      SelectionMode="Extended"
      TabIndex="2"
      ScrollViewer.HorizontalScrollBarVisibility="Auto"
      ScrollViewer.VerticalScrollBarVisibility="Auto"
      ScrollViewer.VerticalScrollMode="Auto"
      ScrollViewer.HorizontalScrollMode="Auto"
      Sorting="FileIdentitiesDataGrid_Sorting"
      CanUserSortColumns="True"
      Loaded="FileIdentitiesDataGrid_Loaded">
                <tk7controls:DataGrid.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="Delete Row" Click="DataGridFlyoutMenuDelete_Click">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE74D;" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>

                        <MenuFlyoutItem Text="Copy Row" Click="DataGridFlyoutMenuCopy_Click">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE8C8;" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>

                        <MenuFlyoutSubItem x:Name="CopyIndividualItemsSubMenu" Text="Copy Individual Items">
                            <MenuFlyoutSubItem.Icon>
                                <FontIcon Glyph="&#xE8C8;" />
                            </MenuFlyoutSubItem.Icon>
                            <!-- Dynamic items will be added here in the Loaded event handler -->
                        </MenuFlyoutSubItem>

                    </MenuFlyout>
                </tk7controls:DataGrid.ContextFlyout>

                <tk7controls:DataGrid.Columns>
                    <tk7controls:DataGridTextColumn Header="File Name" Binding="{Binding FileName}" Width="Auto" Tag="FileName"/>
                    <tk7controls:DataGridTextColumn Header="Time Created" Binding="{Binding TimeCreated}" Width="Auto" Tag="TimeCreated"/>
                    <tk7controls:DataGridTextColumn Header="Signature Status" Binding="{Binding SignatureStatus}" Tag="SignatureStatus" Width="Auto"/>
                    <tk7controls:DataGridTextColumn Header="Action" Binding="{Binding Action}" Width="Auto" Tag="Action"/>
                    <tk7controls:DataGridTextColumn Header="Original File Name" Binding="{Binding OriginalFileName}" Width="Auto" Tag="OriginalFileName"/>
                    <tk7controls:DataGridTextColumn Header="InternalName" Binding="{Binding InternalName}" Width="Auto" Tag="InternalName"/>
                    <tk7controls:DataGridTextColumn Header="File Description" Binding="{Binding FileDescription}" Width="Auto" Tag="FileDescription"/>
                    <tk7controls:DataGridTextColumn Header="File Version" Binding="{Binding FileVersion}" Width="Auto" Tag="FileVersion"/>
                    <tk7controls:DataGridTextColumn Header="SHA256 Hash" Binding="{Binding SHA256Hash}" Width="Auto" Tag="SHA256Hash"/>
                    <tk7controls:DataGridTextColumn Header="SHA1 Hash" Binding="{Binding SHA1Hash}" Width="Auto" Tag="SHA1Hash"/>
                    <tk7controls:DataGridTextColumn Header="SHA256 Flat Hash" Binding="{Binding SHA256FlatHash}" Width="Auto" Tag="SHA256FlatHash"/>
                    <tk7controls:DataGridTextColumn Header="SHA1 Flat Hash" Binding="{Binding SHA1FlatHash}" Width="Auto" Tag="SHA1FlatHash"/>
                    <tk7controls:DataGridTextColumn Header="Signing Scenario" Binding="{Binding SISigningScenario}" Width="Auto" Tag="SISigningScenario"/>
                    <tk7controls:DataGridTextColumn Header="File Path" Binding="{Binding FilePath}" Width="Auto" Tag="FilePath"/>
                    <tk7controls:DataGridTextColumn Header="Computer Name" Binding="{Binding ComputerName}" Width="Auto" Tag="ComputerName"/>
                    <tk7controls:DataGridTextColumn Header="Policy GUID" Binding="{Binding PolicyGUID}" Width="Auto" Tag="PolicyGUID"/>
                    <tk7controls:DataGridTextColumn Header="Policy Name" Binding="{Binding PolicyName}" Width="Auto" Tag="PolicyName"/>
                    <tk7controls:DataGridTextColumn Header="File Publishers" Binding="{Binding FilePublishersToDisplay}" Width="Auto" Tag="FilePublishersToDisplay"/>

                </tk7controls:DataGrid.Columns>
            </tk7controls:DataGrid>
        </Border>

    </Grid>
</Page>
