//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.1.240821.1+077322fa26
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile MicrosoftCloud.json
//       
//       Input file:
//           MicrosoftCloud.json (93060 bytes created 9:51+03:00 Apr 4 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   100 |
// |--------------------------+-------|
// | Expression animators     |     7 |
// | KeyFrame animators       |     6 |
// | Reference parameters     |     5 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     1 |
// | CompositionSpriteShapes  |     7 |
// |--------------------------+-------|
// | Brushes                  |     7 |
// | Gradient stops           |    17 |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        cloud-development
    // Frame rate:  24 fps
    // Frame count: 28
    // Duration:    1166.7 mS
    // _____________________________________________________________________________________________
    // |           Marker           |           Constant           | Frame |   mS   |   Progress   |
    // |____________________________|______________________________|_______|________|______________|
    // | NormalToPressed_Start      | M_NormalToPressed_Start      |     0 |    0.0 | 0F           |
    // | NormalToPressed_End        | M_NormalToPressed_End        |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_Start | M_PointerOverToPressed_Start |     9 |  375.0 | 0.323214293F |
    // | PointerOverToPressed_End   | M_PointerOverToPressed_End   |    19 |  791.7 | 0.680357158F |
    // | PressedToNormal_Start      | M_PressedToNormal_Start      |    20 |  833.3 | 0.716071427F |
    // | PressedToNormal_End        | M_PressedToNormal_End        |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_Start | M_PressedToPointerOver_Start |    28 | 1166.7 | 1F           |
    // | PressedToPointerOver_End   | M_PressedToPointerOver_End   |    28 | 1166.7 | 1F           |
    // ---------------------------------------------------------------------------------------------
    sealed partial class MicrosoftCloud
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 1.167 seconds.
        internal const long c_durationTicks = 11666666;

        // Marker: NormalToPressed_Start.
        internal const float M_NormalToPressed_Start = 0F;

        // Marker: NormalToPressed_End.
        internal const float M_NormalToPressed_End = 0.323214293F;

        // Marker: PointerOverToPressed_Start.
        internal const float M_PointerOverToPressed_Start = 0.323214293F;

        // Marker: PointerOverToPressed_End.
        internal const float M_PointerOverToPressed_End = 0.680357158F;

        // Marker: PressedToNormal_Start.
        internal const float M_PressedToNormal_Start = 0.716071427F;

        // Marker: PressedToNormal_End.
        internal const float M_PressedToNormal_End = 1F;

        // Marker: PressedToPointerOver_Start.
        internal const float M_PressedToPointerOver_Start = 1F;

        // Marker: PressedToPointerOver_End.
        internal const float M_PressedToPointerOver_End = 1F;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new MicrosoftCloud_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 28d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 24d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(11666666);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 28d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
                { "NormalToPressed_Start", 0d },
                { "NormalToPressed_End", 0.323214285714286 },
                { "PointerOverToPressed_Start", 0.323214285714286 },
                { "PointerOverToPressed_End", 0.680357142857143 },
                { "PressedToNormal_Start", 0.716071428571429 },
                { "PressedToNormal_End", 1d },
                { "PressedToPointerOver_Start", 1d },
                { "PressedToPointerOver_End", 1d },
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed partial class MicrosoftCloud_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 11666666;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CompositionColorGradientStop _gradientStop_0_AlmostMediumTurquoise_FF33BDEF;
            CompositionColorGradientStop _gradientStop_0p859_AlmostGainsboro_FFE3E3E6;
            CompositionColorGradientStop _gradientStop_1_AlmostDodgerBlue_FF0985D9;
            CompositionContainerShape _containerShape;
            CompositionPathGeometry _pathGeometry_4;
            CompositionSpriteShape _spriteShape_3;
            CompositionSpriteShape _spriteShape_4;
            CompositionSpriteShape _spriteShape_5;
            CompositionSpriteShape _spriteShape_6;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: line-1 Scale:4,4, Offset:<87.999, 36>
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(3.5F, 7F));
                    builder.AddCubicBezier(new Vector2(3.36800003F, 7F), new Vector2(3.23399997F, 6.9749999F), new Vector2(3.10599995F, 6.91900015F));
                    builder.AddLine(new Vector2(-1.46899998F, 4.95800018F));
                    builder.AddCubicBezier(new Vector2(-3.31100011F, 4.16900015F), new Vector2(-4.5F, 2.36500001F), new Vector2(-4.5F, 0.361999989F));
                    builder.AddLine(new Vector2(-4.5F, -6F));
                    builder.AddCubicBezier(new Vector2(-4.5F, -6.55299997F), new Vector2(-4.05299997F, -7F), new Vector2(-3.5F, -7F));
                    builder.AddCubicBezier(new Vector2(-2.94700003F, -7F), new Vector2(-2.5F, -6.55299997F), new Vector2(-2.5F, -6F));
                    builder.AddLine(new Vector2(-2.5F, 0.361999989F));
                    builder.AddCubicBezier(new Vector2(-2.5F, 1.56299996F), new Vector2(-1.78600001F, 2.64599991F), new Vector2(-0.681999981F, 3.11999989F));
                    builder.AddLine(new Vector2(3.89299989F, 5.08099985F));
                    builder.AddCubicBezier(new Vector2(4.40100002F, 5.29899979F), new Vector2(4.63600016F, 5.88700008F), new Vector2(4.41800022F, 6.39400005F));
                    builder.AddCubicBezier(new Vector2(4.25699997F, 6.77299976F), new Vector2(3.88800001F, 7F), new Vector2(3.5F, 7F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: line-2 Scale:4,4, Offset:<50, 40>
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 9F));
                    builder.AddCubicBezier(new Vector2(-0.552999973F, 9F), new Vector2(-1F, 8.55300045F), new Vector2(-1F, 8F));
                    builder.AddLine(new Vector2(-1F, -8F));
                    builder.AddCubicBezier(new Vector2(-1F, -8.55300045F), new Vector2(-0.552999973F, -9F), new Vector2(0F, -9F));
                    builder.AddCubicBezier(new Vector2(0.552999973F, -9F), new Vector2(1F, -8.55300045F), new Vector2(1F, -8F));
                    builder.AddLine(new Vector2(1F, 8F));
                    builder.AddCubicBezier(new Vector2(1F, 8.55300045F), new Vector2(0.552999973F, 9F), new Vector2(0F, 9F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: line-3 Scale:4,4, Offset:<12, 36>
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-3.5F, 7F));
                    builder.AddCubicBezier(new Vector2(-3.88800001F, 7F), new Vector2(-4.25699997F, 6.77299976F), new Vector2(-4.41900015F, 6.39400005F));
                    builder.AddCubicBezier(new Vector2(-4.63700008F, 5.88700008F), new Vector2(-4.40100002F, 5.29899979F), new Vector2(-3.89400005F, 5.08099985F));
                    builder.AddLine(new Vector2(0.680999994F, 3.11999989F));
                    builder.AddCubicBezier(new Vector2(1.78600001F, 2.64599991F), new Vector2(2.5F, 1.56299996F), new Vector2(2.5F, 0.361999989F));
                    builder.AddLine(new Vector2(2.5F, -6F));
                    builder.AddCubicBezier(new Vector2(2.5F, -6.55299997F), new Vector2(2.94700003F, -7F), new Vector2(3.5F, -7F));
                    builder.AddCubicBezier(new Vector2(4.05299997F, -7F), new Vector2(4.5F, -6.55299997F), new Vector2(4.5F, -6F));
                    builder.AddLine(new Vector2(4.5F, 0.361999989F));
                    builder.AddCubicBezier(new Vector2(4.5F, 2.36500001F), new Vector2(3.31100011F, 4.16900015F), new Vector2(1.46899998F, 4.95800018F));
                    builder.AddLine(new Vector2(-3.10599995F, 6.91900015F));
                    builder.AddCubicBezier(new Vector2(-3.23399997F, 6.9749999F), new Vector2(-3.36800003F, 7F), new Vector2(-3.5F, 7F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: cloud
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(10.1829996F, -6.46600008F));
                    builder.AddCubicBezier(new Vector2(7.9920001F, -10.0780001F), new Vector2(4.03399992F, -12.5F), new Vector2(-0.5F, -12.5F));
                    builder.AddCubicBezier(new Vector2(-6.58699989F, -12.5F), new Vector2(-11.6520004F, -8.14700031F), new Vector2(-12.7659998F, -2.38499999F));
                    builder.AddCubicBezier(new Vector2(-16.3040009F, -1.78199995F), new Vector2(-19F, 1.28999996F), new Vector2(-19F, 5F));
                    builder.AddCubicBezier(new Vector2(-19F, 9.1420002F), new Vector2(-15.6420002F, 12.5F), new Vector2(-11.5F, 12.5F));
                    builder.AddCubicBezier(new Vector2(-11.493F, 12.5F), new Vector2(-11.4860001F, 12.4989996F), new Vector2(-11.4790001F, 12.4989996F));
                    builder.AddLine(new Vector2(-11.4790001F, 12.5F));
                    builder.AddLine(new Vector2(9.5F, 12.5F));
                    builder.AddCubicBezier(new Vector2(14.7469997F, 12.5F), new Vector2(19F, 8.24699974F), new Vector2(19F, 3F));
                    builder.AddCubicBezier(new Vector2(19F, -2.01600003F), new Vector2(15.1099997F, -6.11399984F), new Vector2(10.1829996F, -6.46600008F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -3F));
                    builder.AddCubicBezier(new Vector2(1.65699995F, -3F), new Vector2(3F, -1.65699995F), new Vector2(3F, 0F));
                    builder.AddCubicBezier(new Vector2(3F, 1.65699995F), new Vector2(1.65699995F, 3F), new Vector2(0F, 3F));
                    builder.AddCubicBezier(new Vector2(-1.65699995F, 3F), new Vector2(-3F, 1.65699995F), new Vector2(-3F, 0F));
                    builder.AddCubicBezier(new Vector2(-3F, -1.65699995F), new Vector2(-1.65699995F, -3F), new Vector2(0F, -3F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - Transforms: cloud 
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostDodgerBlue_FF2AA3F4()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x2A, 0xA3, 0xF4));
            }

            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostMediumTurquoise_FF33BDEF()
            {
                return (_gradientStop_0_AlmostMediumTurquoise_FF33BDEF == null)
                    ? _gradientStop_0_AlmostMediumTurquoise_FF33BDEF = _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x33, 0xBD, 0xEF))
                    : _gradientStop_0_AlmostMediumTurquoise_FF33BDEF;
            }

            // - - - Layer aggregator
            // - Transforms: line-1 Scale:4,4, Offset:<87.999, 36>
            // Stop 3
            CompositionColorGradientStop GradientStop_0p45_AlmostGainsboro_FFDEDFE1()
            {
                return _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0xFF, 0xDE, 0xDF, 0xE1));
            }

            // - - - Layer aggregator
            // - Transforms: line-2 Scale:4,4, Offset:<50, 40>
            // Stop 0
            CompositionColorGradientStop GradientStop_0p149_AlmostLightGray_FFC8CDCF()
            {
                return _c.CreateColorGradientStop(0.149000004F, Color.FromArgb(0xFF, 0xC8, 0xCD, 0xCF));
            }

            // - - - Layer aggregator
            // - Transforms: line-1 Scale:4,4, Offset:<87.999, 36>
            // Stop 0
            CompositionColorGradientStop GradientStop_0p168_AlmostLightGray_FFC8CDCF()
            {
                return _c.CreateColorGradientStop(0.167999998F, Color.FromArgb(0xFF, 0xC8, 0xCD, 0xCF));
            }

            // - - - Layer aggregator
            // - Transforms: line-3 Scale:4,4, Offset:<12, 36>
            // Stop 0
            CompositionColorGradientStop GradientStop_0p194_AlmostLightGray_FFC8CDCF()
            {
                return _c.CreateColorGradientStop(0.194000006F, Color.FromArgb(0xFF, 0xC8, 0xCD, 0xCF));
            }

            // - - - Layer aggregator
            // - Transforms: line-2 Scale:4,4, Offset:<50, 40>
            // Stop 1
            CompositionColorGradientStop GradientStop_0p233_AlmostLightGray_FFCDD1D2()
            {
                return _c.CreateColorGradientStop(0.232999995F, Color.FromArgb(0xFF, 0xCD, 0xD1, 0xD2));
            }

            // - - - Layer aggregator
            // - Transforms: line-1 Scale:4,4, Offset:<87.999, 36>
            // Stop 1
            CompositionColorGradientStop GradientStop_0p295_AlmostLightGray_FFD2D5D7()
            {
                return _c.CreateColorGradientStop(0.294999987F, Color.FromArgb(0xFF, 0xD2, 0xD5, 0xD7));
            }

            // - - - Layer aggregator
            // - Transforms: line-2 Scale:4,4, Offset:<50, 40>
            // Stop 2
            CompositionColorGradientStop GradientStop_0p318_AlmostLightGray_FFD2D4D6()
            {
                return _c.CreateColorGradientStop(0.317999989F, Color.FromArgb(0xFF, 0xD2, 0xD4, 0xD6));
            }

            // - - - Layer aggregator
            // - Transforms: line-2 Scale:4,4, Offset:<50, 40>
            // Stop 3
            CompositionColorGradientStop GradientStop_0p406_AlmostGainsboro_FFD9DBDD()
            {
                return _c.CreateColorGradientStop(0.405999988F, Color.FromArgb(0xFF, 0xD9, 0xDB, 0xDD));
            }

            // - - - Layer aggregator
            // - Transforms: line-1 Scale:4,4, Offset:<87.999, 36>
            // Stop 2
            CompositionColorGradientStop GradientStop_0p423_AlmostGainsboro_FFDCDEDF()
            {
                return _c.CreateColorGradientStop(0.423000008F, Color.FromArgb(0xFF, 0xDC, 0xDE, 0xDF));
            }

            // - - - Layer aggregator
            // - Transforms: line-1 Scale:4,4, Offset:<87.999, 36>
            // Stop 4
            CompositionColorGradientStop GradientStop_0p477_AlmostGainsboro_FFE0E1E3()
            {
                return _c.CreateColorGradientStop(0.476999998F, Color.FromArgb(0xFF, 0xE0, 0xE1, 0xE3));
            }

            // - - - Layer aggregator
            // - Transforms: line-2 Scale:4,4, Offset:<50, 40>
            // Stop 4
            CompositionColorGradientStop GradientStop_0p494_AlmostGainsboro_FFE0E1E3()
            {
                return _c.CreateColorGradientStop(0.493999988F, Color.FromArgb(0xFF, 0xE0, 0xE1, 0xE3));
            }

            // - - - Layer aggregator
            // - Transforms: line-3 Scale:4,4, Offset:<12, 36>
            // Stop 1
            CompositionColorGradientStop GradientStop_0p503_AlmostGainsboro_FFE0E1E3()
            {
                return _c.CreateColorGradientStop(0.503000021F, Color.FromArgb(0xFF, 0xE0, 0xE1, 0xE3));
            }

            // Stop 5
            CompositionColorGradientStop GradientStop_0p859_AlmostGainsboro_FFE3E3E6()
            {
                return (_gradientStop_0p859_AlmostGainsboro_FFE3E3E6 == null)
                    ? _gradientStop_0p859_AlmostGainsboro_FFE3E3E6 = _c.CreateColorGradientStop(0.859000027F, Color.FromArgb(0xFF, 0xE3, 0xE3, 0xE6))
                    : _gradientStop_0p859_AlmostGainsboro_FFE3E3E6;
            }

            // - - - Layer aggregator
            // - Transforms: cloud 
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostDodgerBlue_FF0079D9()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x00, 0x79, 0xD9));
            }

            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostDodgerBlue_FF0985D9()
            {
                return (_gradientStop_1_AlmostDodgerBlue_FF0985D9 == null)
                    ? _gradientStop_1_AlmostDodgerBlue_FF0985D9 = _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x09, 0x85, 0xD9))
                    : _gradientStop_1_AlmostDodgerBlue_FF0985D9;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape()
            {
                if (_containerShape != null) { return _containerShape; }
                var result = _containerShape = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(50F, 50F);
                result.Offset = new Vector2(-26F, -15.5F);
                var shapes = result.Shapes;
                // Transforms: line-1 Scale:4,4, Offset:<87.999, 36>
                shapes.Add(SpriteShape_0());
                // Transforms: line-2 Scale:4,4, Offset:<50, 40>
                shapes.Add(SpriteShape_1());
                // Transforms: line-3 Scale:4,4, Offset:<12, 36>
                shapes.Add(SpriteShape_2());
                // Transforms: cloud
                shapes.Add(SpriteShape_3());
                // Transforms: circle-3
                shapes.Add(SpriteShape_4());
                // Transforms: circle-2
                shapes.Add(SpriteShape_5());
                // Transforms: circle-1
                shapes.Add(SpriteShape_6());
                return result;
            }

            // - - Layer aggregator
            // Transforms: line-1 Scale:4,4, Offset:<87.999, 36>
            CompositionLinearGradientBrush LinearGradientBrush_0()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0p168_AlmostLightGray_FFC8CDCF());
                colorStops.Add(GradientStop_0p295_AlmostLightGray_FFD2D5D7());
                colorStops.Add(GradientStop_0p423_AlmostGainsboro_FFDCDEDF());
                colorStops.Add(GradientStop_0p45_AlmostGainsboro_FFDEDFE1());
                colorStops.Add(GradientStop_0p477_AlmostGainsboro_FFE0E1E3());
                colorStops.Add(GradientStop_0p859_AlmostGainsboro_FFE3E3E6());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-0.5F, 739F);
                result.EndPoint = new Vector2(-0.5F, 746.119019F);
                return result;
            }

            // - - Layer aggregator
            // Transforms: line-2 Scale:4,4, Offset:<50, 40>
            CompositionLinearGradientBrush LinearGradientBrush_1()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0p149_AlmostLightGray_FFC8CDCF());
                colorStops.Add(GradientStop_0p233_AlmostLightGray_FFCDD1D2());
                colorStops.Add(GradientStop_0p318_AlmostLightGray_FFD2D4D6());
                colorStops.Add(GradientStop_0p406_AlmostGainsboro_FFD9DBDD());
                colorStops.Add(GradientStop_0p494_AlmostGainsboro_FFE0E1E3());
                colorStops.Add(GradientStop_0p859_AlmostGainsboro_FFE3E3E6());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(0F, 738F);
                result.EndPoint = new Vector2(0F, 745.119019F);
                return result;
            }

            // - - Layer aggregator
            // Transforms: line-3 Scale:4,4, Offset:<12, 36>
            CompositionLinearGradientBrush LinearGradientBrush_2()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0p194_AlmostLightGray_FFC8CDCF());
                colorStops.Add(GradientStop_0p503_AlmostGainsboro_FFE0E1E3());
                colorStops.Add(GradientStop_0p859_AlmostGainsboro_FFE3E3E6());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-0.5F, 739F);
                result.EndPoint = new Vector2(-0.5F, 746.119019F);
                return result;
            }

            // - - Layer aggregator
            // Transforms: cloud
            CompositionLinearGradientBrush LinearGradientBrush_3()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostDodgerBlue_FF2AA3F4());
                colorStops.Add(GradientStop_1_AlmostDodgerBlue_FF0079D9());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-9.375F, -8.375F);
                result.EndPoint = new Vector2(5.48999977F, 13.3859997F);
                return result;
            }

            // - - Layer aggregator
            // Transforms: circle-3
            CompositionLinearGradientBrush LinearGradientBrush_4()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostMediumTurquoise_FF33BDEF());
                colorStops.Add(GradientStop_1_AlmostDodgerBlue_FF0985D9());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-1.375F, -3.43799996F);
                result.EndPoint = new Vector2(1.10800004F, 3.29699993F);
                return result;
            }

            // - - Layer aggregator
            // Transforms: circle-2
            CompositionLinearGradientBrush LinearGradientBrush_5()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostMediumTurquoise_FF33BDEF());
                colorStops.Add(GradientStop_1_AlmostDodgerBlue_FF0985D9());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-2.4059999F, -2.9690001F);
                result.EndPoint = new Vector2(2.2019999F, 3.046F);
                return result;
            }

            // - - Layer aggregator
            // Transforms: circle-1
            CompositionLinearGradientBrush LinearGradientBrush_6()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostMediumTurquoise_FF33BDEF());
                colorStops.Add(GradientStop_1_AlmostDodgerBlue_FF0985D9());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-0.875F, -3F);
                result.EndPoint = new Vector2(1.38900006F, 3.34299994F);
                return result;
            }

            // - - Layer aggregator
            // Transforms: line-1 Scale:4,4, Offset:<87.999, 36>
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - - Layer aggregator
            // Transforms: line-2 Scale:4,4, Offset:<50, 40>
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - - Layer aggregator
            // Transforms: line-3 Scale:4,4, Offset:<12, 36>
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // - - Layer aggregator
            // Transforms: cloud
            CompositionPathGeometry PathGeometry_3()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
            }

            CompositionPathGeometry PathGeometry_4()
            {
                return (_pathGeometry_4 == null)
                    ? _pathGeometry_4 = _c.CreatePathGeometry(new CompositionPath(Geometry_4()))
                    : _pathGeometry_4;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<87.999, 36>, Scale:<4, 4>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(4F, 0F, 0F, 4F, 87.9990005F, 36F), LinearGradientBrush_0());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<50, 40>, Scale:<4, 4>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(4F, 0F, 0F, 4F, 50F, 40F), LinearGradientBrush_1());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<12, 36>, Scale:<4, 4>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(4F, 0F, 0F, 4F, 12F, 36F), LinearGradientBrush_2());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                if (_spriteShape_3 != null) { return _spriteShape_3; }
                var result = _spriteShape_3 = _c.CreateSpriteShape(PathGeometry_3());
                result.CenterPoint = new Vector2(0F, 12.5F);
                result.Offset = new Vector2(50F, 11.5F);
                result.FillBrush = LinearGradientBrush_3();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                if (_spriteShape_4 != null) { return _spriteShape_4; }
                var result = _spriteShape_4 = _c.CreateSpriteShape(PathGeometry_4());
                result.Scale = new Vector2(4F, 4F);
                result.FillBrush = LinearGradientBrush_4();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                if (_spriteShape_5 != null) { return _spriteShape_5; }
                var result = _spriteShape_5 = _c.CreateSpriteShape(PathGeometry_4());
                result.Scale = new Vector2(4F, 4F);
                result.FillBrush = LinearGradientBrush_5();
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_6()
            {
                if (_spriteShape_6 != null) { return _spriteShape_6; }
                var result = _spriteShape_6 = _c.CreateSpriteShape(PathGeometry_4());
                result.Scale = new Vector2(4F, 4F);
                result.FillBrush = LinearGradientBrush_6();
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 5.
                result.InsertKeyFrame(0.178571418F, 1F, CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142895F, 0F, StepThenHoldEasingFunction());
                // Frame 15.
                result.InsertKeyFrame(0.535714209F, 1F, CubicBezierEasingFunction_0());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(48F, 48F);
                result.Shapes.Add(ContainerShape());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - Layer aggregator
            // Transforms: circle-3
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(102F, 60F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 5.
                result.InsertExpressionKeyFrame(0.178571418F, "Pow(1-_.t0,3)*Vector2(102,60)+(3*Square(1-_.t0)*_.t0*Vector2(101.146,59.667))+(3*(1-_.t0)*Square(_.t0)*Vector2(95.729,57.542))+(Pow(_.t0,3)*Vector2(96.875,58))", StepThenHoldEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, new Vector2(96.875F, 58F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new Vector2(108.875F, 62.75F), CubicBezierEasingFunction_0());
                // Frame 15.
                result.InsertExpressionKeyFrame(0.535714209F, "Pow(1-_.t0,3)*Vector2(108.875,62.75)+(3*Square(1-_.t0)*_.t0*Vector2(109.729,63.083))+(3*(1-_.t0)*Square(_.t0)*Vector2(103.146,60.458))+(Pow(_.t0,3)*Vector2(102,60))", StepThenHoldEasingFunction());
                // Frame 15.
                result.InsertKeyFrame(0.535714269F, new Vector2(102F, 60F), StepThenHoldEasingFunction());
                return result;
            }

            // - - Layer aggregator
            // Transforms: circle-2
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(50F, 76F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 5.
                result.InsertExpressionKeyFrame(0.178571418F, "Pow(1-_.t0,3)*Vector2(50,76)+(3*Square(1-_.t0)*_.t0*Vector2(50,74.958))+(3*(1-_.t0)*Square(_.t0)*Vector2(50,68.917))+(Pow(_.t0,3)*Vector2(50,69.75))", StepThenHoldEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, new Vector2(50F, 69.75F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new Vector2(50F, 81F), CubicBezierEasingFunction_0());
                // Frame 15.
                result.InsertExpressionKeyFrame(0.535714209F, "Pow(1-_.t0,3)*Vector2(50,81)+(3*Square(1-_.t0)*_.t0*Vector2(50,82.042))+(3*(1-_.t0)*Square(_.t0)*Vector2(50,76.833))+(Pow(_.t0,3)*Vector2(50,76))", StepThenHoldEasingFunction());
                // Frame 15.
                result.InsertKeyFrame(0.535714269F, new Vector2(50F, 76F), StepThenHoldEasingFunction());
                return result;
            }

            // - - Layer aggregator
            // Transforms: circle-1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-2F, 60F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 5.
                result.InsertExpressionKeyFrame(0.178571418F, "Pow(1-_.t0,3)*Vector2(-2,60)+(3*Square(1-_.t0)*_.t0*Vector2(-1.198,59.599))+(3*(1-_.t0)*Square(_.t0)*Vector2(3.645,57.188))+(Pow(_.t0,3)*Vector2(2.812,57.594))", StepThenHoldEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, new Vector2(2.81200004F, 57.5940018F), StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new Vector2(-7F, 62.4379997F), CubicBezierEasingFunction_0());
                // Frame 15.
                result.InsertExpressionKeyFrame(0.535714209F, "Pow(1-_.t0,3)*Vector2(-7,62.438)+(3*Square(1-_.t0)*_.t0*Vector2(-7.802,62.839))+(3*(1-_.t0)*Square(_.t0)*Vector2(-2.833,60.406))+(Pow(_.t0,3)*Vector2(-2,60))", StepThenHoldEasingFunction());
                // Frame 15.
                result.InsertKeyFrame(0.535714269F, new Vector2(-2F, 60F), StepThenHoldEasingFunction());
                return result;
            }

            // - - Layer aggregator
            // Transforms: cloud 
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(4F, 4F), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, new Vector2(3.79999995F, 3.79999995F), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new Vector2(4.0999999F, 4.0999999F), CubicBezierEasingFunction_0());
                // Frame 15.
                result.InsertKeyFrame(0.535714269F, new Vector2(4F, 4F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0.25F, 0.25F), HoldThenStepEasingFunction());
                // Frame 5.
                result.InsertKeyFrame(0.178571433F, new Vector2(0.224999994F, 0.224999994F), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.357142866F, new Vector2(0.25F, 0.25F), CubicBezierEasingFunction_0());
                return result;
            }

            internal MicrosoftCloud_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(48F, 48F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape.StartAnimation("Scale", ScaleVector2Animation_1(), AnimationController_0());
                _spriteShape_3.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _spriteShape_4.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _spriteShape_5.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _spriteShape_6.StartAnimation("Offset", OffsetVector2Animation_2(), AnimationController_0());
                _root.Properties.StartAnimation("t0", t0ScalarAnimation_0_to_1(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _containerShape.StopAnimation("Scale");
                _spriteShape_3.StopAnimation("Scale");
                _spriteShape_4.StopAnimation("Offset");
                _spriteShape_5.StopAnimation("Offset");
                _spriteShape_6.StopAnimation("Offset");
                _root.Properties.StopAnimation("t0");
            }

        }
    }
}
