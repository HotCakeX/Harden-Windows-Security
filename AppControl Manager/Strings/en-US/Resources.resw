<?xml version="1.0" encoding="utf-8"?>
<root><!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateDenyPolicyNavItem.Content" xml:space="preserve">
    <value>Create Deny Policy</value>
  </data>
  <data name="CreateDenyPolicyNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create Deny App Control Policies</value>
  </data>
  <data name="CreatePolicyNavItem.Content" xml:space="preserve">
    <value>Create Policy</value>
    <comment>Main Navigation</comment>
  </data>
  <data name="CreatePolicyNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create AppControl Policies with different characteristics</value>
    <comment>Main Navigation</comment>
  </data>
  <data name="CreateSupplementalPolicyNavItem.Content" xml:space="preserve">
    <value>Create Supplemental Policy</value>
  </data>
  <data name="CreateSupplementalPolicyNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create Supplemental AppControl Policies</value>
  </data>
  <data name="BuildNewCertificateNavItem.Content" xml:space="preserve">
    <value>Build New Certificate</value>
  </data>
  <data name="BuildNewCertificateNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Generate Certificates that are suitable for signing App Control Policies</value>
  </data>
  <data name="ViewFileCertificatesNavItem.Content" xml:space="preserve">
    <value>View File Certificates</value>
  </data>
  <data name="ViewFileCertificatesNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>View advanced and highly detailed information about all certificates of signed files</value>
  </data>
  <data name="CreatePolicyFromEventLogsNavItem.Content" xml:space="preserve">
    <value>Create policy from Event Logs</value>
  </data>
  <data name="CreatePolicyFromEventLogsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create App Control policy either from the local event logs or EVTX files</value>
  </data>
  <data name="CreatePolicyFromMDEAHNavItem.Content" xml:space="preserve">
    <value>MDE Advanced Hunting</value>
  </data>
  <data name="CreatePolicyFromMDEAHNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create App Control policy from Microsoft Defender for Endpoint (MDE) Advanced Hunting Logs</value>
  </data>
  <data name="SimulationNavItem.Content" xml:space="preserve">
    <value>Simulation</value>
  </data>
  <data name="SimulationNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Simulate deployment of App Control policies</value>
  </data>
  <data name="AllowNewAppsNavItem.Content" xml:space="preserve">
    <value>Allow New Apps</value>
  </data>
  <data name="AllowNewAppsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Allow new apps or programs that are being blocked from installation or are already installed but are being blocked from running.</value>
  </data>
  <data name="SystemInformationNavItem.Content" xml:space="preserve">
    <value>System Information</value>
  </data>
  <data name="SystemInformationNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>View information about the system</value>
  </data>
  <data name="GetCodeIntegrityHashesNavItem.Content" xml:space="preserve">
    <value>Get Code Integrity Hashes</value>
  </data>
  <data name="GetCodeIntegrityHashesNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Get Code Integrity Hashes of files</value>
  </data>
  <data name="GetSecurePolicySettingsNavItem.Content" xml:space="preserve">
    <value>Get Secure Policy Settings</value>
  </data>
  <data name="GetSecurePolicySettingsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Get the secure policy settings among the deployed policies</value>
  </data>
  <data name="ConfigurePolicyRuleOptionsNavItem.Content" xml:space="preserve">
    <value>Configure Policy Rule Options</value>
  </data>
  <data name="ConfigurePolicyRuleOptionsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Configure Policy Rule Options</value>
  </data>
  <data name="MergePoliciesNavItem.Content" xml:space="preserve">
    <value>Merge App Control Policies</value>
  </data>
  <data name="MergePoliciesNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Merge 2 App Control policies together or deduplicate a single policy</value>
  </data>
  <data name="DeploymentNavItem.Content" xml:space="preserve">
    <value>Deploy App Control Policy</value>
  </data>
  <data name="DeploymentNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Deploy signed or unsigned AppControl policies on the system</value>
  </data>
  <data name="ValidatePoliciesNavItem.Content" xml:space="preserve">
    <value>Validate Policies</value>
  </data>
  <data name="ValidatePoliciesNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Validate App Control Policies</value>
  </data>
  <data name="GitHubDocsNavItem.Content" xml:space="preserve">
    <value>GitHub Documentation</value>
  </data>
  <data name="GitHubDocsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Get online documentation from GitHub about how to use the application</value>
  </data>
  <data name="MSFTDocsNavItem.Content" xml:space="preserve">
    <value>Microsoft Documentation</value>
  </data>
  <data name="MSFTDocsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Get online documentation from Microsoft about App Control for Business policies</value>
  </data>
  <data name="LogsNavItem.Content" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="SettingsNavItem.Content" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="LogsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>View the application logs in real time</value>
  </data>
  <data name="ScanResults" xml:space="preserve">
    <value>Scan Results</value>
  </data>
  <data name="BrowseForFilesSettingsCard.Description" xml:space="preserve">
    <value>Browse for a file to see all of its available certificates</value>
  </data>
  <data name="BrowseForFilesSettingsCard.Header" xml:space="preserve">
    <value>Select File</value>
  </data>
  <data name="GuideButtonAtTop.Content" xml:space="preserve">
    <value>Guide</value>
  </data>
  <data name="GuideButtonAtTop.ToolTipService.ToolTip" xml:space="preserve">
    <value>Click/Tap to visit the full Guide for this page on GitHub</value>
  </data>
  <data name="DeployAfterCreationButton.Content" xml:space="preserve">
    <value>Deploy after Creation</value>
  </data>
  <data name="DeployAfterCreationButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Toggling this button means the policy will be deployed on the system after it&apos;s been created</value>
  </data>
  <data name="CreateSupplementalPolicyButton.Content" xml:space="preserve">
    <value>Create Supplemental Policy</value>
  </data>
  <data name="CreateSupplementalPolicyButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create the Supplemental policy based on the configurations you selected</value>
  </data>
  <data name="CreateDenyPolicyButton.Content" xml:space="preserve">
    <value>Create Deny Policy</value>
  </data>
  <data name="CreateDenyPolicyButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create the Deny policy based on the configurations you selected</value>
  </data>
  <data name="CreateDenyPolicyFilesAndFoldersSettingsExpander.Description" xml:space="preserve">
    <value>Create Deny policy by scanning files and folders</value>
  </data>
  <data name="CreateDenyPolicyFilesAndFoldersSettingsExpander.Header" xml:space="preserve">
    <value>Files and Folders</value>
  </data>
  <data name="CreateDenyPolicyFilesAndFoldersSettingsExpander.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create Deny policy by scanning files and folders</value>
  </data>
  <data name="CreateDenyPolicyPFNSettingsExpander.Description" xml:space="preserve">
    <value>Create a Deny policy based on an app&apos;s Package Family Name (PFN)</value>
  </data>
  <data name="CreateDenyPolicyPFNSettingsExpander.Header" xml:space="preserve">
    <value>Package Family Name</value>
  </data>
  <data name="CreateDenyPolicyPFNSettingsExpander.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create a Deny policy based on an app&apos;s Package Family Name (PFN)</value>
  </data>
  <data name="AuditRuleOptionSettingsCard.Description" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Enabled:Audit Mode) policy rule option and will generate audit logs instead of blocking files.</value>
  </data>
  <data name="AuditRuleOptionSettingsCard.Header" xml:space="preserve">
    <value>Audit</value>
  </data>
  <data name="AuditRuleOptionSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Enabled:Audit Mode) policy rule option and will generate audit logs instead of blocking files.</value>
  </data>
  <data name="RequireEVSignersRuleOption.Description" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Require EV Signers) policy rule option which will only allow kernel-mode drivers signed with an EV certificate to run.</value>
  </data>
  <data name="RequireEVSignersRuleOption.Header" xml:space="preserve">
    <value>Require EVSigners</value>
  </data>
  <data name="RequireEVSignersRuleOption.ToolTipService.ToolTip" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Require EV Signers) policy rule option which will only allow kernel-mode drivers signed with an EV certificate to run.</value>
  </data>
  <data name="EnableScriptEnforcementRuleOption.Description" xml:space="preserve">
    <value>Enables script enforcement for the policy which will severely limit the attack surface of PowerShell by requiring only scripts/modules signed and allowed in the Code Integrity policy to run.</value>
  </data>
  <data name="EnableScriptEnforcementRuleOption.Header" xml:space="preserve">
    <value>Enable Script Enforcement</value>
  </data>
  <data name="EnableScriptEnforcementRuleOption.ToolTipService.ToolTip" xml:space="preserve">
    <value>Enables script enforcement for the policy which will severely limit the attack surface of PowerShell by requiring only scripts/modules signed and allowed in the Code Integrity policy to run.</value>
  </data>
  <data name="TestModeRuleOption.Description" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Enabled:Boot Audit on Failure) and (Enabled:Advanced Boot Options Menu) policy rule options. Useful for testing the policy and having recovery options available when something goes wrong. Not recommended to be used in the final production-ready policy due to security reasons.</value>
  </data>
  <data name="TestModeRuleOption.Header" xml:space="preserve">
    <value>Test Mode</value>
  </data>
  <data name="TestModeRuleOption.ToolTipService.ToolTip" xml:space="preserve">
    <value>Indicates that the created/deployed policy will have (Enabled:Boot Audit on Failure) and (Enabled:Advanced Boot Options Menu) policy rule options. Useful for testing the policy and having recovery options available when something goes wrong. Not recommended to be used in the final production-ready policy due to security reasons.</value>
  </data>
  <data name="FileBrowseButton.Content" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="FileBrowseButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Opens the File picker dialog allowing you select file(s)</value>
  </data>
  <data name="FolderBrowseButton.Content" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="FolderBrowseButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Opens the Folder picker dialog allowing you select folder(s)</value>
  </data>
  <data name="SupplementalPolicyNameTextBox.PlaceholderText" xml:space="preserve">
    <value>Supplemental Policy Name</value>
  </data>
  <data name="SupplementalPolicyNameTextBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Enter a name for the Supplemental policy that will be created.</value>
  </data>
  <data name="SupplementalPolicyNameSettingsCard.Description" xml:space="preserve">
    <value>The name of the Supplemental policy that is going to be created.</value>
  </data>
  <data name="SupplementalPolicyNameSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>The name of the Supplemental policy that is going to be created.</value>
  </data>
  <data name="SupplementalPolicyNameSettingsCard.Header" xml:space="preserve">
    <value>Policy Name</value>
  </data>
  <data name="SupplementalFilesAndFoldersSettingsCard.Header" xml:space="preserve">
    <value>Files and Folders</value>
  </data>
  <data name="SupplementalFilesAndFoldersSettingsCard.Description" xml:space="preserve">
    <value>Create Supplemental policy by scanning files and folders</value>
  </data>
  <data name="SupplementalFilesAndFoldersSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create Supplemental policy by scanning files and folders</value>
  </data>
  <data name="ClearButton.Content" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ClearButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ReviewEventLogsNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Review the Event Logs that were collected during the Audit mode phase</value>
  </data>
  <data name="ReviewEventLogsNavItem.Content" xml:space="preserve">
    <value>Review the Event Logs</value>
  </data>
  <data name="ReviewLocalFilesNavItem.Content" xml:space="preserve">
    <value>Review the Local Files</value>
  </data>
  <data name="ReviewLocalFilesNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Review the Local Files. These are the files that were found in the directories you browsed for.</value>
  </data>
  <data name="AllowNewAppsInternalMainNavItem.Content" xml:space="preserve">
    <value>Start allowing apps or files</value>
  </data>
  <data name="AllowNewAppsInternalMainNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Start allowing apps or files by either running them or browsing for their directories during the Audit mode phase.</value>
  </data>
  <data name="ExtraActionsDropDownButton.Content" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="ExtraActionsDropDownButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Offers multiple different actions to take on the displayed data</value>
  </data>
  <data name="ClearDataMenuFlyoutItem.Text" xml:space="preserve">
    <value>Clear Data</value>
  </data>
  <data name="ClearDataMenuFlyoutItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Clear all of the displayed data</value>
  </data>
  <data name="DeployAfterCreationMenuFlyoutItem.Text" xml:space="preserve">
    <value>Deploy after Creation</value>
  </data>
  <data name="DeployAfterCreationMenuFlyoutItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Toggling this button means the policy will be deployed on the system after it&apos;s been created</value>
  </data>
  <data name="SearchBoxTextBox.PlaceholderText" xml:space="preserve">
    <value>Search the data...</value>
  </data>
  <data name="SearchBoxTextBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Search among the displayed data</value>
  </data>
  <data name="DeSelectAllMenuFlyoutItem.Text" xml:space="preserve">
    <value>De-Select All</value>
  </data>
  <data name="DeSelectAllMenuFlyoutItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>De-select any selected data</value>
  </data>
  <data name="SelectAllMenuFlyoutItem.Text" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="SelectAllMenuFlyoutItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Select all of the displayed data</value>
  </data>
  <data name="SelectAllButton.Content" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="SelectAllButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="RefreshButton.Content" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="RefreshButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="RemoveSelectionsButton.Content" xml:space="preserve">
    <value>Remove Selections</value>
  </data>
  <data name="RemoveSelectionsButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Remove Selections</value>
  </data>
  <data name="SelectedAppsTextBlock.Text" xml:space="preserve">
    <value>Selected Apps: 0</value>
  </data>
  <data name="SelectedAppsTextBlock.ToolTipService.ToolTip" xml:space="preserve">
    <value>The total number of the selected Apps</value>
  </data>
  <data name="BrowseForFoldersDenyPolicySettingsCard.Description" xml:space="preserve">
    <value>Browse for Folder paths to scan and include in the Deny policy. The folders will be scanned recursively.</value>
  </data>
  <data name="BrowseForFoldersDenyPolicySettingsCard.Header" xml:space="preserve">
    <value>Browse For Folders</value>
  </data>
  <data name="BrowseForFoldersDenyPolicySettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Browse for Folder paths to scan and include in the Deny policy. The folders will be scanned recursively.</value>
  </data>
  <data name="BrowseForFilesDenyPolicySettingsCard.Description" xml:space="preserve">
    <value>Browse for file paths to scan and include in the Deny policy.</value>
  </data>
  <data name="BrowseForFilesDenyPolicySettingsCard.Header" xml:space="preserve">
    <value>Browse For Files</value>
  </data>
  <data name="BrowseForFilesDenyPolicySettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Browse for file paths to scan and include in the Deny policy.</value>
  </data>
  <data name="DenyPolicyNameSettingsCard.Description" xml:space="preserve">
    <value>The name of the Deny policy that is going to be created.</value>
  </data>
  <data name="DenyPolicyNameSettingsCard.Header" xml:space="preserve">
    <value>Policy Name</value>
  </data>
  <data name="DenyPolicyNameSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>The name of the Deny policy that is going to be created.</value>
  </data>
  <data name="ViewSelectedBasePolicyTextBlock.Text" xml:space="preserve">
    <value>View the Base policy path you selected.</value>
  </data>
  <data name="ViewSelectedFilesTextBlock.Text" xml:space="preserve">
    <value>View the files you selected.</value>
  </data>
  <data name="ViewSelectedFoldersTextBlock.Text" xml:space="preserve">
    <value>View the folders you selected.</value>
  </data>
  <data name="TotalLogsTextBlock.PlaceholderText" xml:space="preserve">
    <value>Total logs: 0</value>
  </data>
  <data name="TotalLogsTextBlock.ToolTipService.ToolTip" xml:space="preserve">
    <value>The total number of the logs</value>
  </data>
  <data name="RefreshLogFilesButton.Content" xml:space="preserve">
    <value>Refresh The Logs</value>
  </data>
  <data name="RefreshLogFilesButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Retrieve the latest logs for the current session by reading them from the log file in the user configurations directory</value>
  </data>
  <data name="MainSearchAutoSuggestBox.PlaceholderText" xml:space="preserve">
    <value>Search menu items...</value>
  </data>
  <data name="MainSearchAutoSuggestBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Enter menu item names to find them quickly</value>
  </data>
  <data name="UpdateNavItem.ToolTipService.ToolTip" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="UpdateNavItem.Content" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="OpenConfigDirectoryButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Open the directory where user configurations and user generated files are stored</value>
  </data>
  <data name="OpenConfigDirectoryButtonText.Text" xml:space="preserve">
    <value>Open User Config Directory</value>
  </data>
  <data name="ResetStepsButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Will reset the steps and if the base policy is deployed in Audit mode, will redeploy it in Enforced mode.</value>
  </data>
  <data name="ResetStepsButton.Content" xml:space="preserve">
    <value>Reset Steps</value>
  </data>
  <data name="AllowNewAppsStep1Text.Text" xml:space="preserve">
    <value>Select the required info such as a deployed policy XML file and a name for the Supplemental policy that will be created</value>
  </data>
  <data name="AllowNewAppsStep2Text.Text" xml:space="preserve">
    <value>Now install your new app or run a pre-installed app that was being blocked. You can optionally browse for folders to scan such as the location where the app is installed. Once you&apos;re done, use the button below to go to Step 3.</value>
  </data>
  <data name="AllowNewAppsStep3Text.Text" xml:space="preserve">
    <value>Use the Event logs and local files tab to confirm or select the detected files in order to include them in the final Supplemental policy.</value>
  </data>
  <data name="AllowNewAppsCreatePolicyButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Start creating the policy with the logs and files you selected</value>
  </data>
  <data name="AllowNewAppsCreatePolicyButton.Content" xml:space="preserve">
    <value>Create Policy</value>
  </data>
  <data name="LogSizeNumberBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>This is the Maximum Capacity of the Code Integrity Operational Log Size</value>
  </data>
  <data name="LogSizeNumberBox.Header" xml:space="preserve">
    <value>Enter a number for Log Size in MB</value>
  </data>
  <data name="BrowseTextBlock.Text" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="BrowseForBasePolicyTextBlock.Text" xml:space="preserve">
    <value>Browse for a Base policy file</value>
  </data>
  <data name="BrowseForPolicyTextBlock.Text" xml:space="preserve">
    <value>Browse for a policy XML file</value>
  </data>
  <data name="PickPolicyFileButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Click/Tap to choose a XML policy file from your device</value>
  </data>
  <data name="ScanLevelComboBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Pick a level based on which the Files/Logs will be scanned</value>
  </data>
  <data name="WebViewBackButton.Text" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="WebViewForwardButton.Text" xml:space="preserve">
    <value>Forward</value>
  </data>
  <data name="WebViewReloadButton.Text" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="WebViewHomeButton.Text" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="UserConfigsSettingsExpander.Description" xml:space="preserve">
    <value>The following are the contents of the User Configurations JSON file</value>
  </data>
  <data name="UserConfigsSettingsExpander.Header" xml:space="preserve">
    <value>User Configs</value>
  </data>
  <data name="SaveAppBarButton.Label" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveAppBarButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="BrowseAppBarButton.Label" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="BrowseAppBarButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="ClearAppBarButton.Label" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ClearAppBarButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="RefreshAppBarButton.Label" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="RefreshAppBarButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Fetches the latest certificate common names from the User&apos;s personal certificate store</value>
  </data>
  <data name="BackgroundStyleSettingsCard.Description" xml:space="preserve">
    <value>Customize the App Background Style</value>
  </data>
  <data name="BackgroundStyleSettingsCard.Header" xml:space="preserve">
    <value>Background Style</value>
  </data>
  <data name="BackgroundStyleSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>This is the backdrop of the AppControl Manager. The changes will be visible in the background.</value>
  </data>
  <data name="MainNavigationIconsSettingsCard.Description" xml:space="preserve">
    <value>Choose a style for the main navigation icons</value>
  </data>
  <data name="MainNavigationIconsSettingsCard.Header" xml:space="preserve">
    <value>Icons Style</value>
  </data>
  <data name="MainNavigationIconsSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Pick a style for the main navigation&apos;s icons.</value>
  </data>
  <data name="AppThemeSettingsCard.Description" xml:space="preserve">
    <value>Customize the Theme</value>
  </data>
  <data name="AppThemeSettingsCard.Header" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="AppThemeSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Select a theme for the AppControl Manager</value>
  </data>
  <data name="MainNavigationLocationSettingsCard.Description" xml:space="preserve">
    <value>Customize the Navigation Menu location</value>
  </data>
  <data name="MainNavigationLocationSettingsCard.Header" xml:space="preserve">
    <value>Navigation Menu</value>
  </data>
  <data name="MainNavigationLocationSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Select a location for the navigation menu</value>
  </data>
  <data name="AppSoundSettingSettingsCard.Description" xml:space="preserve">
    <value>Hear audio feedback when using different elements of the AppControl Manager</value>
  </data>
  <data name="AppSoundSettingSettingsCard.Header" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="AppSoundSettingSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Hear audio feedback when using different elements of the AppControl Manager</value>
  </data>
  <data name="DarkerBackGroundSettingsCard.Description" xml:space="preserve">
    <value>Mostly suitable when using MicaAlt as the background.</value>
  </data>
  <data name="DarkerBackGroundSettingsCard.Header" xml:space="preserve">
    <value>Darker Background</value>
  </data>
  <data name="DarkerBackGroundSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>It will remove the extra light shadow from the background, giving an overall darker look to the AppControl Manager&apos;s appearance.</value>
  </data>
  <data name="UserConfigurations.Text" xml:space="preserve">
    <value>User Configurations</value>
  </data>
  <data name="Appearance.Text" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="Sound.Text" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="About.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ValidateAppControlPolicySettingsCard.Description" xml:space="preserve">
    <value>Browse for an App Control policy XML file to validate</value>
  </data>
  <data name="ValidateAppControlPolicySettingsCard.Header" xml:space="preserve">
    <value>Select Policy</value>
  </data>
  <data name="BrowseButton.Content" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="ViewSelectedXMLFileTextBlock.Text" xml:space="preserve">
    <value>View the XML file(s) you selected.</value>
  </data>
  <data name="SelectXMLFileTextBlock.Text" xml:space="preserve">
    <value>Select XML File</value>
  </data>
  <data name="SelectFilesTextBlock.Text" xml:space="preserve">
    <value>Select Files</value>
  </data>
  <data name="SelectFoldersTextBlock.Text" xml:space="preserve">
    <value>Select Folders</value>
  </data>
  <data name="ScanLogsTextBlock.Text" xml:space="preserve">
    <value>Scan Logs</value>
  </data>
  <data name="ScanLogsButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Scan the system or the selected EVTX files for Code Integrity/AppLocker logs</value>
  </data>
  <data name="RuleOption_EnabledUMCI" xml:space="preserve">
    <value>App Control policies restrict both kernel-mode and user-mode binaries. By default, only kernel-mode binaries are restricted. Enabling this rule option validates user mode executables and scripts.</value>
  </data>
  <data name="RuleOption_EnabledBootMenuProtection" xml:space="preserve">
    <value>This option isn&apos;t currently supported.</value>
  </data>
  <data name="RuleOption_RequiredWHQL" xml:space="preserve">
    <value>By default, kernel drivers that aren&apos;t Windows Hardware Quality Labs (WHQL) signed are allowed to run. Enabling this rule requires that every driver is WHQL signed and removes legacy driver support. Kernel drivers built for Windows 10 should be WHQL certified.</value>
  </data>
  <data name="RuleOption_EnabledAuditMode" xml:space="preserve">
    <value>Instructs App Control to log information about applications, binaries, and scripts that would have been blocked, if the policy was enforced. You can use this option to identify the potential impact of your App Control policy, and use the audit events to refine the policy before enforcement. To enforce an App Control policy, delete this option.</value>
  </data>
  <data name="RuleOption_DisabledFlightSigning" xml:space="preserve">
    <value>If enabled, binaries from Windows Insider builds aren&apos;t trusted. This option is useful for organizations that only want to run released binaries, not prerelease Windows builds.</value>
  </data>
  <data name="RuleOption_EnabledInheritDefaultPolicy" xml:space="preserve">
    <value>This option is reserved for future use and currently has no effect.</value>
  </data>
  <data name="RuleOption_EnabledUnsignedSystemIntegrityPolicy" xml:space="preserve">
    <value>Allows the policy to remain unsigned. When this option is removed, the policy must be signed and any supplemental policies must also be signed. The certificates that are trusted for future policy updates must be identified in the UpdatePolicySigners section. Certificates that are trusted for supplemental policies must be identified in the SupplementalPolicySigners section.</value>
  </data>
  <data name="RuleOption_RequiredEVSigners" xml:space="preserve">
    <value>This option isn&apos;t currently supported.</value>
  </data>
  <data name="RuleOption_EnabledAdvancedBootOptionsMenu" xml:space="preserve">
    <value>The F8 preboot menu is disabled by default for all App Control policies. Setting this rule option allows the F8 menu to appear to physically present users.</value>
  </data>
  <data name="RuleOption_EnabledBootAuditOnFailure" xml:space="preserve">
    <value>Used when the App Control policy is in enforcement mode. When a boot-critical driver fails during startup, the App Control policy is placed in audit mode so that Windows loads. Administrators can validate the reason for the failure in the CodeIntegrity event log.</value>
  </data>
  <data name="RuleOption_DisabledScriptEnforcement" xml:space="preserve">
    <value>This option disables script enforcement options, covering PowerShell, Windows Based Script Host (wscript.exe), Windows Console Based Script Host (cscript.exe), HTA files run in Microsoft HTML Application Host (mshta.exe), and MSXML. Some script hosts may behave differently even when your policy is in audit mode. For more information on script enforcement, see Script enforcement with App Control.
NOTE: This option isn&apos;t supported on Windows Server 2016 or Windows 10 1607 LTSB and shouldn&apos;t be used on those operating systems.</value>
  </data>
  <data name="RuleOption_RequiredEnforceStoreApplications" xml:space="preserve">
    <value>If this rule option is enabled, App Control policies also apply to Universal Windows applications.</value>
  </data>
  <data name="RuleOption_EnabledManagedInstaller" xml:space="preserve">
    <value>Use this option to automatically allow applications installed by a managed installer. For more information, see Authorize apps deployed with an App Control managed installer.</value>
  </data>
  <data name="RuleOption_EnabledIntelligentSecurityGraphAuthorization" xml:space="preserve">
    <value>Use this option to automatically allow applications with &quot;known good&quot; reputation as defined by Microsoft&apos;s Intelligent Security Graph (ISG).</value>
  </data>
  <data name="RuleOption_EnabledInvalidateEAsOnReboot" xml:space="preserve">
    <value>When the Intelligent Security Graph option is used, App Control sets an extended file attribute that indicates that the file was authorized to run. This option causes App Control to periodically revalidate the reputation for files previously authorized by the ISG.</value>
  </data>
  <data name="RuleOption_EnabledUpdatePolicyNoReboot" xml:space="preserve">
    <value>Use this option to allow future App Control policy updates to apply without requiring a system reboot.
NOTE: This option is only supported on Windows 10, version 1709 and later, or Windows Server 2019 and later.</value>
  </data>
  <data name="RuleOption_EnabledAllowSupplementalPolicies" xml:space="preserve">
    <value>Use this option on a base policy to allow supplemental policies to expand it.
NOTE: This option is only supported on Windows 10, version 1903 and later, or Windows Server 2022 and later.</value>
  </data>
  <data name="RuleOption_DisabledRuntimeFilePathRuleProtection" xml:space="preserve">
    <value>This option disables the default runtime check that only allows FilePath rules for paths that are only writable by an administrator.
NOTE: This option is only supported on Windows 10, version 1903 and later, or Windows Server 2022 and later.</value>
  </data>
  <data name="RuleOption_EnabledDynamicCodeSecurity" xml:space="preserve">
    <value>Enables policy enforcement for .NET applications and dynamically loaded libraries.
NOTE: This option is only supported on Windows 10, version 1803 and later, or Windows Server 2019 and later.
NOTE: This option is always enforced if any App Control UMCI policy enables it. There&apos;s no audit mode for .NET dynamic code security hardening.</value>
  </data>
  <data name="RuleOption_EnabledRevokedExpiredAsUnsigned" xml:space="preserve">
    <value>Use this option to treat binaries signed with revoked certificates, or expired certificates with the Lifetime Signing EKU on the signature, as &quot;Unsigned binaries&quot; for user-mode process/components, under enterprise signing scenarios.</value>
  </data>
  <data name="RuleOption_EnabledDeveloperModeDynamicCodeTrust" xml:space="preserve">
    <value>Use this option to trust UWP apps that are debugged in Visual Studio or deployed through device portal when Developer Mode is enabled on the system.</value>
  </data>
  <data name="RuleOption_EnabledSecureSettingPolicy" xml:space="preserve">
    <value>It is currently undocumented.</value>
  </data>
  <data name="RuleOption_EnabledConditionalWindowsLockdownPolicy" xml:space="preserve">
    <value>It&apos;s used by the Smart App Control policy only.</value>
  </data>
  <data name="ConfigurePolicyRuleOptions_ButtonContent" xml:space="preserve">
    <value>Configure Policy Rule Options</value>
  </data>
  <data name="SelectPolicyFileBeforeAddingOptions" xml:space="preserve">
    <value>Please select a policy file before adding options.</value>
  </data>
  <data name="SelectPolicyFileBeforeSettingTemplate" xml:space="preserve">
    <value>Please select a policy file before setting a template.</value>
  </data>
  <data name="SelectPolicyFileBeforeRetrievingOptions" xml:space="preserve">
    <value>Please select a policy file before retrieving its rule options status.</value>
  </data>
  <data name="GetSecurePolicySettings_FillAllFields" xml:space="preserve">
    <value>Please fill in all three fields.</value>
  </data>
  <data name="GetSecurePolicySettings_InputRequired" xml:space="preserve">
    <value>Input Required</value>
  </data>
  <data name="GetSecurePolicySettings_NoPolicyMessage" xml:space="preserve">
    <value>There is no policy deployed on the system that contains the selected secure setting.</value>
  </data>
  <data name="GetSecurePolicySettings_PolicyNotFound" xml:space="preserve">
    <value>Policy not found</value>
  </data>
  <data name="GetSecurePolicySettings_PolicyFoundMessage" xml:space="preserve">
    <value>A policy with the selected secure setting details is currently deployed on the system.</value>
  </data>
  <data name="GetSecurePolicySettings_PolicyFound" xml:space="preserve">
    <value>Policy found</value>
  </data>
  <data name="MergePolicies_SelectMainPolicyXML" xml:space="preserve">
    <value>Select main policy XML</value>
  </data>
  <data name="MergePolicies_SelectMainPolicySubtitle" xml:space="preserve">
    <value>You need to select an XML file as the main policy</value>
  </data>
  <data name="MergePolicies_SelectOtherPolicies" xml:space="preserve">
    <value>Select other policies</value>
  </data>
  <data name="MergePolicies_SelectOtherPoliciesSubtitle" xml:space="preserve">
    <value>You need to select at least one more policy to merge with the main policy</value>
  </data>
  <data name="MergePolicies_MergingMessage" xml:space="preserve">
    <value>Merging the policies</value>
  </data>
  <data name="MergePolicies_DeployingMessage" xml:space="preserve">
    <value>Deploying the main policy after merge.</value>
  </data>
  <data name="MergePolicies_StagingAreaName" xml:space="preserve">
    <value>PolicyMerger</value>
  </data>
  <data name="MergePolicies_MergedPolicyFileName" xml:space="preserve">
    <value>MergedPolicy.cip</value>
  </data>
  <data name="MergePolicies_ErrorMessage" xml:space="preserve">
    <value>An error occurred during the merge process</value>
  </data>
  <data name="MergePolicies_SuccessMessage" xml:space="preserve">
    <value>Policies have been merged successfully</value>
  </data>
  <data name="UpdateNotInitialized" xml:space="preserve">
    <value>Update is not initialized.</value>
  </data>
  <data name="CheckingForUpdate" xml:space="preserve">
    <value>Checking for update</value>
  </data>
  <data name="InstallingCustomPath" xml:space="preserve">
    <value>Installing the MSIXBundle path that you selected: </value>
  </data>
  <data name="VersionComparison" xml:space="preserve">
    <value>The current version is </value>
  </data>
  <data name="WhileOnlineVersion" xml:space="preserve">
    <value> while the online version is </value>
  </data>
  <data name="UpdatingApplication" xml:space="preserve">
    <value>, updating the application...</value>
  </data>
  <data name="DownloadingPackage" xml:space="preserve">
    <value>Downloading the AppControl Manager MSIXBundle package...</value>
  </data>
  <data name="DownloadSuccess" xml:space="preserve">
    <value>The AppControl Manager MSIXBundle package has been successfully downloaded to </value>
  </data>
  <data name="NoMSIXBundlePath" xml:space="preserve">
    <value>No MSIXBundle path was selected</value>
  </data>
  <data name="DetectingSignTool" xml:space="preserve">
    <value>Detecting/Downloading the SignTool.exe from the Microsoft servers</value>
  </data>
  <data name="DownloadsFinished" xml:space="preserve">
    <value>All Downloads finished, installing the new AppControl Manager version</value>
  </data>
  <data name="ASRError" xml:space="preserve">
    <value>An error occurred while trying to remove the ASR rule exclusions which you can safely ignore: </value>
  </data>
  <data name="InstallingPackage" xml:space="preserve">
    <value>Installing the AppControl Manager MSIXBundle package</value>
  </data>
  <data name="InstallationError" xml:space="preserve">
    <value>Error installing The AppControl Manager. Error code: </value>
  </data>
  <data name="InstallationErrorText" xml:space="preserve">
    <value> - Error text: </value>
  </data>
  <data name="InstallationCanceled" xml:space="preserve">
    <value>The AppControl Manager Installation canceled</value>
  </data>
  <data name="InstallationSucceeded" xml:space="preserve">
    <value>The AppControl Manager Installation succeeded</value>
  </data>
  <data name="UnknownInstallationIssue" xml:space="preserve">
    <value>There was an unknown problem installing the AppControl Manager</value>
  </data>
  <data name="ASRAddError" xml:space="preserve">
    <value>An error occurred while trying to add the ASR rule exclusions which you can safely ignore: </value>
  </data>
  <data name="UpdateSuccess" xml:space="preserve">
    <value>Update has been successful. When you close and reopen the AppControl Manager, you will be automatically using the new version.</value>
  </data>
  <data name="UpdatesInstalled" xml:space="preserve">
    <value>Updates installed</value>
  </data>
  <data name="AlreadyUpdated" xml:space="preserve">
    <value>The current version is already up to date.</value>
  </data>
  <data name="UpdateCheckError" xml:space="preserve">
    <value>An error occurred while checking for update.</value>
  </data>
  <data name="RequiresWindows1124H2" xml:space="preserve">
    <value>Requires Windows 11 24H2 or later</value>
  </data>
  <data name="DeployUnsignedPolicy" xml:space="preserve">
    <value>Deploy Unsigned Policy</value>
  </data>
  <data name="DeploySignedPolicy" xml:space="preserve">
    <value>Deploy Signed Policy</value>
  </data>
  <data name="DeployingXMLFiles" xml:space="preserve">
    <value>Deploying </value>
  </data>
  <data name="UnsignedXMLFiles" xml:space="preserve">
    <value> unsigned XML files.</value>
  </data>
  <data name="DeployingXMLFile" xml:space="preserve">
    <value>Currently Deploying XML file: &apos;</value>
  </data>
  <data name="SignedPolicyError" xml:space="preserve">
    <value>The XML file &apos;</value>
  </data>
  <data name="DeploymentError" xml:space="preserve">
    <value>There was an error deploying the selected XML files</value>
  </data>
  <data name="DeploymentSuccess" xml:space="preserve">
    <value>Successfully deployed all of the selected XML files</value>
  </data>
  <data name="DeployingSignedXMLFiles" xml:space="preserve">
    <value>Deploying </value>
  </data>
  <data name="SignedXMLFiles" xml:space="preserve">
    <value> Signed XML files.</value>
  </data>
  <data name="PolicyConflictMessage" xml:space="preserve">
    <value>A policy with the same PolicyID </value>
  </data>
  <data name="RemovingPolicy" xml:space="preserve">
    <value> is already deployed on the system in Unsigned version. Removing it before deployed the signed version to prevent boot failures.</value>
  </data>
  <data name="SignedDeploymentSuccess" xml:space="preserve">
    <value>Successfully deployed all of the selected XML files as Signed policies</value>
  </data>
  <data name="DeployingCIPFiles" xml:space="preserve">
    <value>Deploying </value>
  </data>
  <data name="CIPFiles" xml:space="preserve">
    <value> CIP binary files.</value>
  </data>
  <data name="DeployingCIPFile" xml:space="preserve">
    <value>Currently Deploying CIP file: &apos;</value>
  </data>
  <data name="CIPDeploymentSuccess" xml:space="preserve">
    <value>Successfully deployed all of the selected CIP files</value>
  </data>
  <data name="SigningIntoIntune" xml:space="preserve">
    <value>Signing into Intune</value>
  </data>
  <data name="IntuneSignInSuccess" xml:space="preserve">
    <value>Successfully signed into Intune</value>
  </data>
  <data name="CloudDeploymentActive" xml:space="preserve">
    <value>Cloud Deployment is Currently Active</value>
  </data>
  <data name="IntuneSignInCancelled" xml:space="preserve">
    <value>Sign in to Intune was cancelled by the user</value>
  </data>
  <data name="IntuneSignInCancelledMessage" xml:space="preserve">
    <value>Sign in to Intune was cancelled by the user</value>
  </data>
  <data name="IntuneSignInError" xml:space="preserve">
    <value>There was an error signing into Intune: </value>
  </data>
  <data name="SigningOutOfIntune" xml:space="preserve">
    <value>Signing out of Intune</value>
  </data>
  <data name="IntuneSignOutSuccess" xml:space="preserve">
    <value>Successfully signed out of Intune</value>
  </data>
  <data name="LocalDeploymentActive" xml:space="preserve">
    <value>Local Deployment is Currently Active</value>
  </data>
  <data name="IntuneSignOutError" xml:space="preserve">
    <value>There was an error signing out of Intune: </value>
  </data>
  <data name="ProcessingTitle" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="BuildingCertificate" xml:space="preserve">
    <value>Building the certificate...</value>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="CertificateBuildError" xml:space="preserve">
    <value>Errors occurred while building the certificate</value>
  </data>
  <data name="SuccessTitle" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="CertificateBuildSuccess" xml:space="preserve">
    <value>Successfully generated the certificate with the selected details. The certificate&apos;s thumbprint is: &apos;</value>
  </data>
  <data name="CreateDenyPolicyNotInitialized" xml:space="preserve">
    <value>CreateDenyPolicy is not initialized.</value>
  </data>
  <data name="SelectFilesOrFoldersTitle" xml:space="preserve">
    <value>Select files or folders</value>
  </data>
  <data name="NoFilesOrFoldersSelected" xml:space="preserve">
    <value>No files or folders were selected for Deny policy creation</value>
  </data>
  <data name="ChooseDenyPolicyNameTitle" xml:space="preserve">
    <value>Choose Deny Policy Name</value>
  </data>
  <data name="ProvidePolicyName" xml:space="preserve">
    <value>You need to provide a name for the Deny policy.</value>
  </data>
  <data name="SelectedFilesAndFolders" xml:space="preserve">
    <value>You selected </value>
  </data>
  <data name="FilesAnd" xml:space="preserve">
    <value> files and </value>
  </data>
  <data name="Folders" xml:space="preserve">
    <value> folders.</value>
  </data>
  <data name="NoCompatibleFilesTitle" xml:space="preserve">
    <value>No compatible files detected</value>
  </data>
  <data name="NoCompatibleFilesDetected" xml:space="preserve">
    <value>No AppControl compatible files have been detected in any of the files and folder paths you selected</value>
  </data>
  <data name="ScanningFiles" xml:space="preserve">
    <value>Scanning a total of </value>
  </data>
  <data name="AppControlCompatibleFiles" xml:space="preserve">
    <value> AppControl compatible files...</value>
  </data>
  <data name="ScanCompleted" xml:space="preserve">
    <value>Scan completed, creating the Deny policy</value>
  </data>
  <data name="DeployingDenyPolicy" xml:space="preserve">
    <value>Deploying the Deny policy on the system</value>
  </data>
  <data name="ErrorCreatingDenyPolicy" xml:space="preserve">
    <value>An error occurred while creating the Deny policy</value>
  </data>
  <data name="DenyPolicyCreatedSuccessfully" xml:space="preserve">
    <value>Successfully created a Deny policy named &apos;</value>
  </data>
  <data name="Scalability" xml:space="preserve">
    <value>Scalability: </value>
  </data>
  <data name="PFNBasedDenyPolicyTitle" xml:space="preserve">
    <value>PFN based Deny policy</value>
  </data>
  <data name="NoAppSelectedForDenyPolicy" xml:space="preserve">
    <value>No app was selected to create a deny policy for</value>
  </data>
  <data name="NoPolicyNameSelected" xml:space="preserve">
    <value>No policy name was selected for the deny policy</value>
  </data>
  <data name="CreatingPFNBasedDenyPolicy" xml:space="preserve">
    <value>Creating the deny policy based on Package Family Names</value>
  </data>
  <data name="SelectedApps" xml:space="preserve">
    <value>Selected Apps: </value>
  </data>
  <data name="ErrorOccurred" xml:space="preserve">
    <value>There was an error: </value>
  </data>
  <data name="DenyPolicyCreated" xml:space="preserve">
    <value>Successfully created the Deny policy</value>
  </data>
  <data name="NumberOfPolicies" xml:space="preserve">
    <value>Number of Policies: </value>
  </data>
  <data name="WarningTitle" xml:space="preserve">
    <value>WARNING</value>
  </data>
  <data name="ManualRemovalWarning" xml:space="preserve">
    <value>The policy &apos;</value>
  </data>
  <data name="ManualRemovalWarningEnd" xml:space="preserve">
    <value> must not be manually removed because you WILL NOT BE ABLE TO USE APPCONTROL MANAGER AGAIN. It is automatically removed when its corresponding base policy is removed from the system. Are you sure you still want to remove it manually?</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="RestartRequired" xml:space="preserve">
    <value>Before you can safely remove the signed policy named &apos;</value>
  </data>
  <data name="RestartRequiredEnd" xml:space="preserve">
    <value> with the ID &apos;</value>
  </data>
  <data name="Understand" xml:space="preserve">
    <value>I Understand</value>
  </data>
  <data name="PolicyIDHeader.Text" xml:space="preserve">
    <value>Policy ID</value>
  </data>
  <data name="BasePolicyIDHeader.Text" xml:space="preserve">
    <value>Base Policy ID</value>
  </data>
  <data name="FriendlyNameHeader.Text" xml:space="preserve">
    <value>Friendly Name</value>
  </data>
  <data name="VersionHeader.Text" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="IsAuthorizedHeader.Text" xml:space="preserve">
    <value>Is Authorized</value>
  </data>
  <data name="IsEnforcedHeader.Text" xml:space="preserve">
    <value>Is Enforced</value>
  </data>
  <data name="IsOnDiskHeader.Text" xml:space="preserve">
    <value>Is On Disk</value>
  </data>
  <data name="IsSignedPolicyHeader.Text" xml:space="preserve">
    <value>Is Signed Policy</value>
  </data>
  <data name="IsSystemPolicyHeader.Text" xml:space="preserve">
    <value>Is System Policy</value>
  </data>
  <data name="PolicyOptionsHeader.Text" xml:space="preserve">
    <value>Policy Options</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy </value>
  </data>
  <data name="PolicyIDLabel" xml:space="preserve">
    <value>Policy ID: </value>
  </data>
  <data name="BasePolicyIDLabel" xml:space="preserve">
    <value>Base Policy ID: </value>
  </data>
  <data name="FriendlyNameLabel" xml:space="preserve">
    <value>Friendly Name: </value>
  </data>
  <data name="VersionLabel" xml:space="preserve">
    <value>Version: </value>
  </data>
  <data name="IsAuthorizedLabel" xml:space="preserve">
    <value>Is Authorized: </value>
  </data>
  <data name="IsEnforcedLabel" xml:space="preserve">
    <value>Is Enforced: </value>
  </data>
  <data name="IsOnDiskLabel" xml:space="preserve">
    <value>Is On Disk: </value>
  </data>
  <data name="IsSignedPolicyLabel" xml:space="preserve">
    <value>Is Signed Policy: </value>
  </data>
  <data name="IsSystemPolicyLabel" xml:space="preserve">
    <value>Is System Policy: </value>
  </data>
  <data name="PolicyOptionsLabel" xml:space="preserve">
    <value>Policy Options: </value>
  </data>
  <data name="LastRebootTime" xml:space="preserve">
    <value>System&apos;s last reboot was </value>
  </data>
  <data name="PolicyStage1Completed" xml:space="preserve">
    <value>Signed policy with the ID &apos;</value>
  </data>
  <data name="CompletedAt" xml:space="preserve">
    <value> completed its 1st stage at </value>
  </data>
  <data name="PolicySafeToRemove" xml:space="preserve">
    <value>Signed policy is safe to be removed because system was restarted after 1st stage</value>
  </data>
  <data name="SelectedPolicyName" xml:space="preserve">
    <value>The selected policy with the name </value>
  </data>
  <data name="AndID" xml:space="preserve">
    <value> and ID </value>
  </data>
  <data name="WillBeChangedTo" xml:space="preserve">
    <value> will be changed to the type </value>
  </data>
  <data name="PolicyRedeployInfo" xml:space="preserve">
    <value>It will be re-deployed on the system with the same Policy ID and Base Policy ID. If it&apos;s currently in Audit Mode, it will be in Enforced Mode after this operation is completed.</value>
  </data>
  <data name="SupplementalPolicyContinues" xml:space="preserve">
    <value>Any existing Supplemental policy will continue to work.</value>
  </data>
  <data name="SwappingPolicyTitle" xml:space="preserve">
    <value>Swapping Policy</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="LastUpdatedLabel" xml:space="preserve">
    <value>Last Updated: </value>
  </data>
  <data name="DriverBlockListError" xml:space="preserve">
    <value>Error retrieving driver block list information.</value>
  </data>
  <data name="ConfiguringAutoUpdate" xml:space="preserve">
    <value>Configuring Scheduled task for auto update</value>
  </data>
  <data name="AutoUpdateError" xml:space="preserve">
    <value>An error occurred.</value>
  </data>
  <data name="AutoUpdateConfigured" xml:space="preserve">
    <value>Successfully configured scheduled task to keep the Microsoft Drivers Block Rules up to date</value>
  </data>
  <data name="CreatingPolicy" xml:space="preserve">
    <value>Creating the Strict Kernel-mode policy</value>
  </data>
  <data name="PolicyCreationError" xml:space="preserve">
    <value>There was an error creating Strict Kernel-mode policy: </value>
  </data>
  <data name="PolicyCreatedSuccessfully" xml:space="preserve">
    <value>Successfully created the Strict Kernel-mode policy</value>
  </data>
  <data name="FileNameHeader.Text" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="SignatureStatusHeader.Text" xml:space="preserve">
    <value>Signature Status</value>
  </data>
  <data name="OriginalFileNameHeader.Text" xml:space="preserve">
    <value>Original File Name</value>
  </data>
  <data name="InternalNameHeader.Text" xml:space="preserve">
    <value>InternalName</value>
  </data>
  <data name="FileDescriptionHeader.Text" xml:space="preserve">
    <value>File Description</value>
  </data>
  <data name="ProductNameHeader.Text" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="FileVersionHeader.Text" xml:space="preserve">
    <value>File Version</value>
  </data>
  <data name="PackageFamilyNameHeader.Text" xml:space="preserve">
    <value>Package Family Name</value>
  </data>
  <data name="SHA256HashHeader.Text" xml:space="preserve">
    <value>SHA256 Hash</value>
  </data>
  <data name="SHA1HashHeader.Text" xml:space="preserve">
    <value>SHA1 Hash</value>
  </data>
  <data name="SHA256FlatHashHeader.Text" xml:space="preserve">
    <value>SHA256 Flat Hash</value>
  </data>
  <data name="SHA1FlatHashHeader.Text" xml:space="preserve">
    <value>SHA1 Flat Hash</value>
  </data>
  <data name="SigningScenarioHeader.Text" xml:space="preserve">
    <value>Signing Scenario</value>
  </data>
  <data name="FilePathHeader.Text" xml:space="preserve">
    <value>File Path</value>
  </data>
  <data name="ComputerNameHeader.Text" xml:space="preserve">
    <value>Computer Name</value>
  </data>
  <data name="SHA1PageHashHeader.Text" xml:space="preserve">
    <value>SHA1 Page Hash</value>
  </data>
  <data name="SHA256PageHashHeader.Text" xml:space="preserve">
    <value>SHA256 Page Hash</value>
  </data>
  <data name="HasWHQLSignerHeader.Text" xml:space="preserve">
    <value>Has WHQL Signer</value>
  </data>
  <data name="FilePublishersHeader.Text" xml:space="preserve">
    <value>File Publishers</value>
  </data>
  <data name="IsECCSignedHeader.Text" xml:space="preserve">
    <value>Is ECC Signed</value>
  </data>
  <data name="OpusDataHeader.Text" xml:space="preserve">
    <value>Opus Data</value>
  </data>
  <data name="PolicyGUIDHeader.Text" xml:space="preserve">
    <value>Policy GUID</value>
  </data>
  <data name="PolicyNameHeader.Text" xml:space="preserve">
    <value>Policy Name</value>
  </data>
  <data name="TimeCreatedHeader.Text" xml:space="preserve">
    <value>Time Created</value>
  </data>
  <data name="ActionHeader.Text" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="PathHeader.Text" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="SourceHeader.Text" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="IsAuthorizedHeader.Text" xml:space="preserve">
    <value>Is Authorized</value>
  </data>
  <data name="MatchCriteriaHeader.Text" xml:space="preserve">
    <value>Match Criteria</value>
  </data>
  <data name="SpecificFileNameLevelMatchCriteriaHeader.Text" xml:space="preserve">
    <value>Specific File Name Level Match</value>
  </data>
  <data name="SignerIDHeader.Text" xml:space="preserve">
    <value>Signer ID</value>
  </data>
  <data name="SignerNameHeader.Text" xml:space="preserve">
    <value>Signer Name</value>
  </data>
  <data name="SignerCertRootHeader.Text" xml:space="preserve">
    <value>Signer CertRoot</value>
  </data>
  <data name="SignerCertPublisherHeader.Text" xml:space="preserve">
    <value>Signer Cert Publisher</value>
  </data>
  <data name="SignerScopeHeader.Text" xml:space="preserve">
    <value>Signer Scope</value>
  </data>
  <data name="CertSubjectCNHeader.Text" xml:space="preserve">
    <value>Cert Subject CN</value>
  </data>
  <data name="CertIssuerCNHeader.Text" xml:space="preserve">
    <value>Cert Issuer CN</value>
  </data>
  <data name="CertNotAfterHeader.Text" xml:space="preserve">
    <value>Cert Not After</value>
  </data>
  <data name="CertTBSValueHeader.Text" xml:space="preserve">
    <value>Cert TBS Value</value>
  </data>
  <data name="FilePathHeader.Text" xml:space="preserve">
    <value>File Path</value>
  </data>
  <data name="SignerNumberHeader.Text" xml:space="preserve">
    <value>Signer Number</value>
  </data>
  <data name="TypeHeader.Text" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="SubjectCommonNameHeader.Text" xml:space="preserve">
    <value>Subject Common Name</value>
  </data>
  <data name="IssuerCommonNameHeader.Text" xml:space="preserve">
    <value>Issuer Common Name</value>
  </data>
  <data name="NotBeforeHeader.Text" xml:space="preserve">
    <value>Not Before</value>
  </data>
  <data name="NotAfterHeader.Text" xml:space="preserve">
    <value>Not After</value>
  </data>
  <data name="HashingAlgorithmHeader.Text" xml:space="preserve">
    <value>Hashing Algorithm</value>
  </data>
  <data name="SerialNumberHeader.Text" xml:space="preserve">
    <value>Serial Number</value>
  </data>
  <data name="ThumbprintHeader.Text" xml:space="preserve">
    <value>Thumbprint</value>
  </data>
  <data name="TBSHashHeader.Text" xml:space="preserve">
    <value>TBS Hash</value>
  </data>
  <data name="ExtensionOIDsHeader.Text" xml:space="preserve">
    <value>Extension OIDs</value>
  </data>
  <data name="SupplementalPolicyCustomPatternBasedFileRuleActualPatternSettingsCard.Description" xml:space="preserve">
    <value>Use this section to enter a custom pattern-based file rule to add to the supplemental policy.</value>
  </data>
  <data name="SupplementalPolicyCustomPatternBasedFileRuleActualPatternSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Use this section to enter a custom pattern-based file rule to add to the supplemental policy.</value>
  </data>
  <data name="SupplementalPolicyCustomPatternBasedFileRuleActualPatternSettingsCard.Header" xml:space="preserve">
    <value>Custom Pattern-based File Rule</value>
  </data>
  <data name="CustomPatternBasedFileRuleInfoSettingsCard.Description" xml:space="preserve">
    <value>Click/Tap here to see more information about the patterns you can use</value>
  </data>
  <data name="CustomPatternBasedFileRuleInfoSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Click/Tap here to see more information about the patterns you can use</value>
  </data>
  <data name="CustomPatternBasedFileRuleInfoSettingsCard.Header" xml:space="preserve">
    <value>More Information</value>
  </data>
  <data name="SupplementalPolicyCustomPatternBasedCustomPatternTextBox.PlaceholderText" xml:space="preserve">
    <value>Enter a custom matching pattern</value>
  </data>
  <data name="SupplementalPolicyCustomPatternBasedCustomPatternTextBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Enter a custom matching pattern for file rules. All of the file paths that match this pattern will be allowed by the Supplemental policy.</value>
  </data>
  <data name="SupplementalPolicyCustomPatternBasedFileRuleSettingsExpander.Description" xml:space="preserve">
    <value>Create a supplemental policy that uses custom pattern-based file rule.</value>
  </data>
  <data name="SupplementalPolicyCustomPatternBasedFileRuleSettingsExpander.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create a supplemental policy that uses custom pattern-based file rule.</value>
  </data>
  <data name="SupplementalPolicyCustomPatternBasedFileRuleSettingsExpander.Header" xml:space="preserve">
    <value>Pattern based File Rule</value>
  </data>
  <data name="DenyPolicyCustomPatternBasedFileRuleActualPatternSettingsCard.Description" xml:space="preserve">
    <value>Use this section to enter a custom pattern-based file rule to add to the Deny policy.</value>
  </data>
  <data name="DenyPolicyCustomPatternBasedFileRuleActualPatternSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Use this section to enter a custom pattern-based file rule to add to the Deny policy.</value>
  </data>
  <data name="DenyPolicyCustomPatternBasedFileRuleActualPatternSettingsCard.Header" xml:space="preserve">
    <value>Custom Pattern-based File Rule</value>
  </data>
  <data name="DenyPolicyCustomPatternBasedCustomPatternTextBox.PlaceholderText" xml:space="preserve">
    <value>Enter a custom matching pattern</value>
  </data>
  <data name="DenyPolicyCustomPatternBasedCustomPatternTextBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>Enter a custom matching pattern for file rules. All of the file paths that match this pattern will be denied by the Deny policy.</value>
  </data>
  <data name="DenyPolicyCustomPatternBasedFileRuleSettingsExpander.Description" xml:space="preserve">
    <value>Create a Deny policy that uses custom pattern-based file rule.</value>
  </data>
  <data name="DenyPolicyCustomPatternBasedFileRuleSettingsExpander.ToolTipService.ToolTip" xml:space="preserve">
    <value>Create a Deny policy that uses custom pattern-based file rule.</value>
  </data>
  <data name="DenyPolicyCustomPatternBasedFileRuleSettingsExpander.Header" xml:space="preserve">
    <value>Pattern based File Rule</value>
  </data>
  <data name="NoMSRecommendedBlockRules.Description" xml:space="preserve">
    <value>Using this option means the Microsoft Recommended (User-Mode) Block Rules will not be created/deployed along with the base policy. (Not Recommended)</value>
  </data>
  <data name="NoMSRecommendedBlockRules.Header" xml:space="preserve">
    <value>No Microsoft Recommended Block Rules</value>
  </data>
  <data name="NoMSRecommendedBlockRules.ToolTipService.ToolTip" xml:space="preserve">
    <value>Using this option means the Microsoft Recommended (User-Mode) Block Rules will not be created/deployed along with the base policy. (Not Recommended)</value>
  </data>
  <data name="BehaviorSettingSettingsExpander.Header" xml:space="preserve">
    <value>Change the behavior of the AppControl Manager and various elements inside of it</value>
  </data>
  <data name="Behavior.Text" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="BehaviorSettingSettingsExpander.ToolTipService.ToolTip" xml:space="preserve">
    <value>Change the behavior of the AppControl Manager and various elements inside of it</value>
  </data>
  <data name="ListViewsCenterVerticallyUponSelectionSettingsCard.Description" xml:space="preserve">
    <value>Whenever you select an item in a List View, center that item vertically on the screen.</value>
  </data>
  <data name="ListViewsCenterVerticallyUponSelectionSettingsCard.Header" xml:space="preserve">
    <value>List Views Center Vertically Upon Selection</value>
  </data>
  <data name="ListViewsCenterVerticallyUponSelectionSettingsCard.ToolTipService.ToolTip" xml:space="preserve">
    <value>Whenever you select an item in a List View, center that item vertically on the screen.</value>
  </data>
</root>